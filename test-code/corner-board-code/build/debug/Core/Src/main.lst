ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB72:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 2


  34:Core/Src/main.c **** #define STD_READY 0xF0
  35:Core/Src/main.c **** #define STD_STARTUP 0xE0
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** #define NST_INSTR 0xC0
  38:Core/Src/main.c **** #define NST_STARTUP 0xE0
  39:Core/Src/main.c **** #define NST_FAILED 0xD0
  40:Core/Src/main.c **** #define NST_READY 0xF0
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** CAN_HandleTypeDef hcan;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  54:Core/Src/main.c **** TIM_HandleTypeDef htim14;
  55:Core/Src/main.c **** TIM_HandleTypeDef htim16;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE BEGIN PV */
  58:Core/Src/main.c **** // standard transmission (1ksps) - configured once and not modified
  59:Core/Src/main.c **** // transmit only, no receive defined
  60:Core/Src/main.c **** // format: 29-bit extended identifier
  61:Core/Src/main.c **** // id[28:16] = 0x0001 
  62:Core/Src/main.c **** // id[15:12] = 0x0
  63:Core/Src/main.c **** // id[11:8] = addr
  64:Core/Src/main.c **** // id[7:4] = 0xF if successful, 0xE if setting up
  65:Core/Src/main.c **** // id[3:0] = sensor # 
  66:Core/Src/main.c **** CAN_TxHeaderTypeDef txh_std[4];
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** // non standard transmission (higher priority than data)
  69:Core/Src/main.c **** // transmit and receive - receive means control signals, transmit for feedback
  70:Core/Src/main.c **** // id[28:16] = 0x0000
  71:Core/Src/main.c **** // id[15:12] = 0x0
  72:Core/Src/main.c **** // id[11:8] = addr
  73:Core/Src/main.c **** // id[7:4] = 0xF if successful, 0xE if setting up, 0xD if failed, 0xC if instruction
  74:Core/Src/main.c **** // id[3:0] = instruction
  75:Core/Src/main.c **** CAN_TxHeaderTypeDef txh_nst;
  76:Core/Src/main.c **** CAN_RxHeaderTypeDef rxh_nst;
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** CAN_FilterTypeDef filter;
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** // ADC data array
  81:Core/Src/main.c **** int32_t adc_data[4];
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** // configuration
  84:Core/Src/main.c **** uint8_t adc_configured = 0;
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** // address
  87:Core/Src/main.c **** uint8_t addr = 0x00;
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** // for CAN
  90:Core/Src/main.c **** uint32_t std_addr_base = 0x00010000;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 3


  91:Core/Src/main.c **** uint8_t std_state = STD_STARTUP;
  92:Core/Src/main.c **** uint32_t nst_addr_base = 0x00000000;
  93:Core/Src/main.c **** uint8_t nst_state = NST_STARTUP;
  94:Core/Src/main.c **** uint32_t txMailbox;
  95:Core/Src/main.c **** uint8_t can_std_channel = 0x00;
  96:Core/Src/main.c **** uint8_t rx_nst_data[8];
  97:Core/Src/main.c **** uint8_t tx_nst_data[8];
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** /* USER CODE END PV */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 102:Core/Src/main.c **** void SystemClock_Config(void);
 103:Core/Src/main.c **** static void MX_GPIO_Init(void);
 104:Core/Src/main.c **** static void MX_CAN_Init(void);
 105:Core/Src/main.c **** static void MX_SPI1_Init(void);
 106:Core/Src/main.c **** static void MX_TIM3_Init(void);
 107:Core/Src/main.c **** static void MX_TIM16_Init(void);
 108:Core/Src/main.c **** static void MX_TIM14_Init(void);
 109:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /* USER CODE END PFP */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 114:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** void delay_us (uint16_t us)
 117:Core/Src/main.c **** {
 118:Core/Src/main.c **** 	__HAL_TIM_SET_COUNTER(&htim16,0);  
 119:Core/Src/main.c **** 	while (__HAL_TIM_GET_COUNTER(&htim16) < us);  
 120:Core/Src/main.c **** }
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** void addr_setup() {  
 123:Core/Src/main.c ****   uint8_t a0 = HAL_GPIO_ReadPin(A0_GPIO_Port, A0_Pin) & 1;
 124:Core/Src/main.c ****   uint8_t a1 = HAL_GPIO_ReadPin(A1_GPIO_Port, A1_Pin) & 1;
 125:Core/Src/main.c ****   uint8_t a2 = HAL_GPIO_ReadPin(A2_GPIO_Port, A2_Pin) & 1;
 126:Core/Src/main.c ****   uint8_t a3 = HAL_GPIO_ReadPin(A3_GPIO_Port, A3_Pin) & 1;
 127:Core/Src/main.c ****   addr = (a3 << 3) | (a2 << 2) | (a1 << 1) | a0;
 128:Core/Src/main.c ****   addr = ~addr; // remove if dip s
 129:Core/Src/main.c ****   std_addr_base = 0x000100C0 | (addr << 8);
 130:Core/Src/main.c **** }
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** void can_setup() {
 133:Core/Src/main.c ****   // txh std
 134:Core/Src/main.c ****   for (int j = 0; j < 4; j++) {
 135:Core/Src/main.c ****     txh_std[j].DLC = 1; // send only top 8 bits of ADC data
 136:Core/Src/main.c ****     txh_std[j].StdId = 0; // not used
 137:Core/Src/main.c ****     txh_std[j].ExtId = std_addr_base | std_state | j;
 138:Core/Src/main.c ****     txh_std[j].IDE = CAN_ID_EXT;
 139:Core/Src/main.c ****     txh_std[j].RTR = CAN_RTR_DATA;
 140:Core/Src/main.c ****     txh_std[j].TransmitGlobalTime = DISABLE;
 141:Core/Src/main.c ****   }
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   // txh nst
 144:Core/Src/main.c ****   txh_nst.DLC = 4; // default
 145:Core/Src/main.c ****   txh_nst.StdId = 0; // not used
 146:Core/Src/main.c ****   txh_nst.ExtId = nst_addr_base ;
 147:Core/Src/main.c ****   txh_nst.IDE = CAN_ID_EXT;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 4


 148:Core/Src/main.c ****   txh_nst.RTR = CAN_RTR_DATA;
 149:Core/Src/main.c ****   txh_nst.TransmitGlobalTime = DISABLE;
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   // filter config
 152:Core/Src/main.c ****   filter.FilterMaskIdHigh = 0x1FFF;
 153:Core/Src/main.c ****   filter.FilterMaskIdLow = 0xFFF0;
 154:Core/Src/main.c ****   filter.FilterIdHigh = 0x0000;
 155:Core/Src/main.c ****   filter.FilterIdLow = 0x00C0 | (addr << 8);
 156:Core/Src/main.c ****   filter.FilterMode = CAN_FILTERMODE_IDMASK;
 157:Core/Src/main.c ****   filter.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 158:Core/Src/main.c ****   filter.FilterScale = CAN_FILTERSCALE_32BIT;
 159:Core/Src/main.c ****   filter.FilterActivation = CAN_FILTER_ENABLE;
 160:Core/Src/main.c ****   filter.FilterBank = 0x00; // use first filter bank
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   HAL_CAN_ConfigFilter(&hcan, &filter);
 163:Core/Src/main.c **** }
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** void can_std_transmit(uint8_t sensor) {
 166:Core/Src/main.c ****   while (HAL_CAN_AddTxMessage(&hcan, &(txh_std[sensor]), ((uint8_t*) (adc_data + sensor)) + 1, &txM
 167:Core/Src/main.c ****     // too many messages! FIXME
 168:Core/Src/main.c ****     delay_us(128); // delay one message
 169:Core/Src/main.c ****   } 
 170:Core/Src/main.c **** }
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** void can_nst_transmit(uint8_t cmd, uint8_t len) {
 173:Core/Src/main.c ****   txh_nst.ExtId = nst_addr_base | nst_state | cmd;
 174:Core/Src/main.c ****   // right now we can't transmit too many messages too quickly or they will be lost
 175:Core/Src/main.c ****   // we can use TX completion interrupts and a FIFO to fix this, but it may not be necessary
 176:Core/Src/main.c ****   if (HAL_CAN_AddTxMessage(&hcan, &txh_nst, tx_nst_data, &txMailbox) != HAL_OK) {
 177:Core/Src/main.c ****     // too many messages! FIXME
 178:Core/Src/main.c ****     while (1);
 179:Core/Src/main.c ****   }
 180:Core/Src/main.c **** }
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** void can_tx_transmit_timer_handler() {
 183:Core/Src/main.c ****   can_std_transmit(can_std_channel);
 184:Core/Src/main.c ****   can_std_channel++;
 185:Core/Src/main.c ****   can_std_channel %= 4;
 186:Core/Src/main.c **** }
 187:Core/Src/main.c **** 
 188:Core/Src/main.c **** void can_rx_handler() {
 189:Core/Src/main.c ****   // handle various commands
 190:Core/Src/main.c ****   // parameters are in rxh and rx_nst_data
 191:Core/Src/main.c **** }
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** uint32_t ads131m04_transfer_word(uint16_t word) {
 194:Core/Src/main.c ****   uint8_t lower = word & 0xff;
 195:Core/Src/main.c ****   uint8_t upper = word >> 8;
 196:Core/Src/main.c ****   uint8_t zero = 0;
 197:Core/Src/main.c ****   uint8_t recv[3];
 198:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &upper, recv, 1, 0.1); // CMD
 199:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &lower, recv+1, 1, 0.1);
 200:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &zero, recv+2, 1, 0.1);
 201:Core/Src/main.c ****   return (recv[0] << 16) | (recv[1] << 8) | recv[2];
 202:Core/Src/main.c **** }
 203:Core/Src/main.c **** 
 204:Core/Src/main.c **** void ads131m04_transfer_frame(uint32_t* out, uint16_t* words, uint16_t tx_rx_delay) {
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 5


 205:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 206:Core/Src/main.c ****   
 207:Core/Src/main.c ****   for (uint8_t i = 0; i < 6; i++) {
 208:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 209:Core/Src/main.c ****   }
 210:Core/Src/main.c ****   // need to wait length of one word. at 6mhz this is 4us
 211:Core/Src/main.c ****   delay_us(4);
 212:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 213:Core/Src/main.c **** }
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** int32_t ads131m04_adc_format_convert(int32_t data){
 216:Core/Src/main.c ****   return ((data & 0x800000) ? -0x800000 : 0x000000) + (data & 0x7FFFFF);
 217:Core/Src/main.c **** }
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** void ads131m04_read_adc_nonblocking(int32_t* out) {
 220:Core/Src/main.c ****   uint32_t recv[12];
 221:Core/Src/main.c ****   uint16_t words[6] = {0, 0, 0, 0, 0, 0};
 222:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 223:Core/Src/main.c ****   out[0] = ads131m04_adc_format_convert(recv[1]);
 224:Core/Src/main.c ****   out[1] = ads131m04_adc_format_convert(recv[2]);
 225:Core/Src/main.c ****   out[2] = ads131m04_adc_format_convert(recv[3]);
 226:Core/Src/main.c ****   out[3] = ads131m04_adc_format_convert(recv[4]);
 227:Core/Src/main.c **** }
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** void ads131m04_drdy_exti_handler() {
 230:Core/Src/main.c ****   if (adc_configured)
 231:Core/Src/main.c ****     ads131m04_read_adc_nonblocking(adc_data);
 232:Core/Src/main.c **** }
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** void ads131m04_cmd(uint16_t cmd, uint32_t* out, uint16_t tx_rx_delay) {
 235:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 236:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 237:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 238:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, tx_rx_delay);
 239:Core/Src/main.c ****   ads131m04_transfer_frame(out+6, zeros, 0);
 240:Core/Src/main.c ****   if (tx_rx_delay) delay_us(tx_rx_delay); 
 241:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 242:Core/Src/main.c **** }
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** uint16_t ads131m04_reset() {
 245:Core/Src/main.c ****     uint32_t recv[12];
 246:Core/Src/main.c ****     ads131m04_cmd(0x0011, recv, 12); // reset time
 247:Core/Src/main.c ****     return recv[9];
 248:Core/Src/main.c **** }
 249:Core/Src/main.c **** 
 250:Core/Src/main.c **** uint16_t ads131m04_status() {
 251:Core/Src/main.c ****     uint32_t recv[12];
 252:Core/Src/main.c ****     ads131m04_cmd(0x0000, recv, 0);
 253:Core/Src/main.c ****     return recv[6] >> 8;
 254:Core/Src/main.c **** }
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** uint16_t ads131m04_standby() {
 257:Core/Src/main.c ****     uint32_t recv[12];
 258:Core/Src/main.c ****     ads131m04_cmd(0x0022, recv, 0);
 259:Core/Src/main.c ****     return recv[6] >> 8;
 260:Core/Src/main.c **** }
 261:Core/Src/main.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 6


 262:Core/Src/main.c **** uint16_t ads131m04_wake() {
 263:Core/Src/main.c ****     uint32_t recv[12];
 264:Core/Src/main.c ****     ads131m04_cmd(0x0033, recv, 0);
 265:Core/Src/main.c ****     return recv[6] >> 8;
 266:Core/Src/main.c **** }
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** uint16_t ads131m04_lock() {
 269:Core/Src/main.c ****     uint32_t recv[12];
 270:Core/Src/main.c ****     ads131m04_cmd(0x0555, recv, 0);
 271:Core/Src/main.c ****     return recv[6] >> 8;
 272:Core/Src/main.c **** }
 273:Core/Src/main.c **** 
 274:Core/Src/main.c **** uint16_t ads131m04_unlock() {
 275:Core/Src/main.c ****     uint32_t recv[12];
 276:Core/Src/main.c ****     ads131m04_cmd(0x0655, recv, 0);
 277:Core/Src/main.c ****     return recv[6] >> 8;
 278:Core/Src/main.c **** }
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** // returns register value
 281:Core/Src/main.c **** uint16_t ads131m04_rreg(uint8_t reg) {
 282:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((reg & 0x3F) << 7);
 283:Core/Src/main.c ****     uint32_t recv[12];
 284:Core/Src/main.c ****     ads131m04_cmd(cmd, recv, 0);
 285:Core/Src/main.c ****     return recv[6] >> 8;
 286:Core/Src/main.c **** }
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** // read multiple registers
 289:Core/Src/main.c **** // returns read acknowledgement in out[0]
 290:Core/Src/main.c **** // returns register i in out[1+i]
 291:Core/Src/main.c **** void ads131m04_rreg_multiple(uint8_t start_reg, uint8_t count, uint32_t* out) {
 292:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 293:Core/Src/main.c ****   // if count is 1 then just use regular rreg and duplicate out[6] to out[7]
 294:Core/Src/main.c ****   if (count == 0) return;
 295:Core/Src/main.c ****   if (count == 1) {
 296:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((start_reg & 0x3F) << 7);
 297:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 298:Core/Src/main.c ****     out[7] = out[6];
 299:Core/Src/main.c ****     return;
 300:Core/Src/main.c ****   }
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   // write first frame asking to read
 303:Core/Src/main.c ****   uint16_t cmd = 0xA000 | ((start_reg & 0x3F) << 7) | ((count - 1) & 0x7F);
 304:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 305:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, 0);
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   // manually transfer the second frame
 308:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 309:Core/Src/main.c ****   
 310:Core/Src/main.c ****   // write min(6, count + 2) zero words
 311:Core/Src/main.c ****   uint8_t max = (count < 4) ? 6 : (count + 2);
 312:Core/Src/main.c ****   for (uint8_t i = 0; i < max; i++) {
 313:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 314:Core/Src/main.c ****   }
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****   delay_us(4); // need to wait length of one word. at 6mhz this is 4us
 317:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 318:Core/Src/main.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 7


 319:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 320:Core/Src/main.c **** }
 321:Core/Src/main.c **** 
 322:Core/Src/main.c **** // returns write acknowledgement
 323:Core/Src/main.c **** uint16_t ads131m04_wreg(uint8_t reg, uint16_t data) {
 324:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 325:Core/Src/main.c ****   uint16_t cmd = 0x6000 | ((reg & 0x3F) << 7);
 326:Core/Src/main.c ****   uint32_t recv[12];
 327:Core/Src/main.c ****   uint16_t words[6] = {cmd, data, 0, 0, 0, 0};
 328:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 329:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 330:Core/Src/main.c ****   ads131m04_transfer_frame(recv+6, zeros, 0);
 331:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 332:Core/Src/main.c ****   return recv[6] >> 8;
 333:Core/Src/main.c **** }
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** // returns write acknowledgement
 336:Core/Src/main.c **** uint16_t ads131m04_wreg_multiple(uint8_t start_reg, uint8_t count, uint16_t* data) {
 337:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 338:Core/Src/main.c ****   if (count == 0) return 0;
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   uint16_t cmd = 0x6000 | ((start_reg & 0x3F) << 7) | ((count - 1) & 0x7F);
 341:Core/Src/main.c ****   // manually transfer the first frame
 342:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****   // write the command
 345:Core/Src/main.c ****   ads131m04_transfer_word(cmd);
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   // write all registers to write
 348:Core/Src/main.c ****   for (uint8_t i = 0; i < count; i++) {
 349:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 350:Core/Src/main.c ****   }
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****   // pad if not written enough (need to have written at least 6 words)
 353:Core/Src/main.c ****   for (int8_t i = 0; i < 4 - count; i++) {
 354:Core/Src/main.c ****     ads131m04_transfer_word(0);
 355:Core/Src/main.c ****   }
 356:Core/Src/main.c **** 
 357:Core/Src/main.c ****   // write one zero word
 358:Core/Src/main.c ****   ads131m04_transfer_word(0);
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****   delay_us(4); // need to wait length of one word. at 6mhz this is 4us
 361:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 362:Core/Src/main.c **** 
 363:Core/Src/main.c ****   // transfer the second frame to get the write acknowledgement
 364:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 365:Core/Src/main.c ****   uint32_t recv[12];
 366:Core/Src/main.c ****   ads131m04_transfer_frame(recv, zeros, 0);
 367:Core/Src/main.c **** 
 368:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 369:Core/Src/main.c ****   return recv[6] >> 8;  
 370:Core/Src/main.c **** }
 371:Core/Src/main.c **** 
 372:Core/Src/main.c **** // returns 1 if success, 0 if failed
 373:Core/Src/main.c **** uint8_t ads131m04_test() {
 374:Core/Src/main.c ****   uint16_t id = ads131m04_rreg(0x00);
 375:Core/Src/main.c ****   return id == 0x24;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 8


 376:Core/Src/main.c **** }
 377:Core/Src/main.c **** 
 378:Core/Src/main.c **** // returns 1 if success, 0 if failed
 379:Core/Src/main.c **** uint8_t adc_configure() {
 380:Core/Src/main.c ****   while (!ads131m04_reset()) {
 381:Core/Src/main.c ****     delay_us(10);
 382:Core/Src/main.c ****   };
 383:Core/Src/main.c ****   while (!ads131m04_test()) {
 384:Core/Src/main.c ****     delay_us(10);
 385:Core/Src/main.c ****   };
 386:Core/Src/main.c ****   uint16_t mode = 0x0110; // clear reset bit, disable all CRCs
 387:Core/Src/main.c ****   ads131m04_wreg(0x02, mode);
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   uint8_t osr = 0b100; // 2048, results in a data rate of ~1.4ksps
 390:Core/Src/main.c ****   uint16_t clock = 0x0F03 | (osr << 2); // enable all, highest precision
 391:Core/Src/main.c ****   ads131m04_wreg(0x03, clock);
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****   uint8_t gain = 0b110; // 64
 394:Core/Src/main.c ****   uint16_t gain1 = (gain << 12) | (gain << 8) | (gain << 4) | gain;
 395:Core/Src/main.c ****   ads131m04_wreg(0x04, gain1);
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****   uint16_t cfg = 0x0000; // disable global chop and current detect
 398:Core/Src/main.c ****   ads131m04_wreg(0x06, cfg);
 399:Core/Src/main.c ****   
 400:Core/Src/main.c ****   adc_configured = 1;
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   // add calibration here if we want to do that
 403:Core/Src/main.c ****   return 1;
 404:Core/Src/main.c **** }
 405:Core/Src/main.c **** 
 406:Core/Src/main.c **** /* USER CODE END 0 */
 407:Core/Src/main.c **** 
 408:Core/Src/main.c **** /**
 409:Core/Src/main.c ****   * @brief  The application entry point.
 410:Core/Src/main.c ****   * @retval int
 411:Core/Src/main.c ****   */
 412:Core/Src/main.c **** int main(void)
 413:Core/Src/main.c **** {
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 416:Core/Src/main.c ****   // disable IRQ until it's ready
 417:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 418:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(TIM14_IRQn);
 419:Core/Src/main.c **** 
 420:Core/Src/main.c ****   /* USER CODE END 1 */
 421:Core/Src/main.c **** 
 422:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 423:Core/Src/main.c **** 
 424:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 425:Core/Src/main.c ****   HAL_Init();
 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****   /* USER CODE END Init */
 430:Core/Src/main.c **** 
 431:Core/Src/main.c ****   /* Configure the system clock */
 432:Core/Src/main.c ****   SystemClock_Config();
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 9


 433:Core/Src/main.c **** 
 434:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 435:Core/Src/main.c **** 
 436:Core/Src/main.c ****   /* USER CODE END SysInit */
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   /* Initialize all configured peripherals */
 439:Core/Src/main.c ****   MX_GPIO_Init();
 440:Core/Src/main.c ****   MX_CAN_Init();
 441:Core/Src/main.c ****   MX_SPI1_Init();
 442:Core/Src/main.c ****   MX_TIM3_Init();
 443:Core/Src/main.c ****   MX_TIM16_Init();
 444:Core/Src/main.c ****   MX_TIM14_Init();
 445:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 446:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 447:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim16);
 448:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 449:Core/Src/main.c ****   
 450:Core/Src/main.c ****   addr_setup();
 451:Core/Src/main.c ****   can_setup();
 452:Core/Src/main.c ****   adc_configure();
 453:Core/Src/main.c **** 
 454:Core/Src/main.c ****   HAL_CAN_Start(&hcan);
 455:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan, CAN_IT_RX_FIFO0_MSG_PENDING);
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 458:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim14);
 459:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(TIM14_IRQn);
 460:Core/Src/main.c **** 
 461:Core/Src/main.c ****   /* USER CODE END 2 */
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   /* Infinite loop */
 464:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 465:Core/Src/main.c ****   while (1)
 466:Core/Src/main.c ****   {
 467:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 468:Core/Src/main.c ****     HAL_Delay(500);
 469:Core/Src/main.c ****     /* USER CODE END WHILE */
 470:Core/Src/main.c **** 
 471:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 472:Core/Src/main.c ****   }
 473:Core/Src/main.c ****   /* USER CODE END 3 */
 474:Core/Src/main.c **** }
 475:Core/Src/main.c **** 
 476:Core/Src/main.c **** /**
 477:Core/Src/main.c ****   * @brief System Clock Configuration
 478:Core/Src/main.c ****   * @retval None
 479:Core/Src/main.c ****   */
 480:Core/Src/main.c **** void SystemClock_Config(void)
 481:Core/Src/main.c **** {
 482:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 483:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 484:Core/Src/main.c **** 
 485:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 486:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 487:Core/Src/main.c ****   */
 488:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 489:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 10


 490:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 491:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 492:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 493:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 494:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 495:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 496:Core/Src/main.c ****   {
 497:Core/Src/main.c ****     Error_Handler();
 498:Core/Src/main.c ****   }
 499:Core/Src/main.c **** 
 500:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 501:Core/Src/main.c ****   */
 502:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 503:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 504:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 505:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 506:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 507:Core/Src/main.c **** 
 508:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 509:Core/Src/main.c ****   {
 510:Core/Src/main.c ****     Error_Handler();
 511:Core/Src/main.c ****   }
 512:Core/Src/main.c **** }
 513:Core/Src/main.c **** 
 514:Core/Src/main.c **** /**
 515:Core/Src/main.c ****   * @brief CAN Initialization Function
 516:Core/Src/main.c ****   * @param None
 517:Core/Src/main.c ****   * @retval None
 518:Core/Src/main.c ****   */
 519:Core/Src/main.c **** static void MX_CAN_Init(void)
 520:Core/Src/main.c **** {
 521:Core/Src/main.c **** 
 522:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 0 */
 523:Core/Src/main.c **** 
 524:Core/Src/main.c ****   /* USER CODE END CAN_Init 0 */
 525:Core/Src/main.c **** 
 526:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 1 */
 527:Core/Src/main.c **** 
 528:Core/Src/main.c ****   /* USER CODE END CAN_Init 1 */
 529:Core/Src/main.c ****   hcan.Instance = CAN;
 530:Core/Src/main.c ****   hcan.Init.Prescaler = 3;
 531:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 532:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 533:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 534:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 535:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 536:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 537:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
 538:Core/Src/main.c ****   hcan.Init.AutoRetransmission = DISABLE;
 539:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 540:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 541:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 542:Core/Src/main.c ****   {
 543:Core/Src/main.c ****     Error_Handler();
 544:Core/Src/main.c ****   }
 545:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 2 */
 546:Core/Src/main.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 11


 547:Core/Src/main.c ****   /* USER CODE END CAN_Init 2 */
 548:Core/Src/main.c **** 
 549:Core/Src/main.c **** }
 550:Core/Src/main.c **** 
 551:Core/Src/main.c **** /**
 552:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 553:Core/Src/main.c ****   * @param None
 554:Core/Src/main.c ****   * @retval None
 555:Core/Src/main.c ****   */
 556:Core/Src/main.c **** static void MX_SPI1_Init(void)
 557:Core/Src/main.c **** {
 558:Core/Src/main.c **** 
 559:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 560:Core/Src/main.c **** 
 561:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 562:Core/Src/main.c **** 
 563:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 564:Core/Src/main.c **** 
 565:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 566:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 567:Core/Src/main.c ****   hspi1.Instance = SPI1;
 568:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 569:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 570:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 571:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 572:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 573:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 574:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 575:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 576:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 577:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 578:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 579:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 580:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 581:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 582:Core/Src/main.c ****   {
 583:Core/Src/main.c ****     Error_Handler();
 584:Core/Src/main.c ****   }
 585:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 586:Core/Src/main.c **** 
 587:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 588:Core/Src/main.c **** 
 589:Core/Src/main.c **** }
 590:Core/Src/main.c **** 
 591:Core/Src/main.c **** /**
 592:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 593:Core/Src/main.c ****   * @param None
 594:Core/Src/main.c ****   * @retval None
 595:Core/Src/main.c ****   */
 596:Core/Src/main.c **** static void MX_TIM3_Init(void)
 597:Core/Src/main.c **** {
 598:Core/Src/main.c **** 
 599:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 600:Core/Src/main.c **** 
 601:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 602:Core/Src/main.c **** 
 603:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 12


 604:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 605:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 606:Core/Src/main.c **** 
 607:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 608:Core/Src/main.c **** 
 609:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 610:Core/Src/main.c ****   htim3.Instance = TIM3;
 611:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 612:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 613:Core/Src/main.c ****   htim3.Init.Period = 7;
 614:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 615:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 616:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 617:Core/Src/main.c ****   {
 618:Core/Src/main.c ****     Error_Handler();
 619:Core/Src/main.c ****   }
 620:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 621:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 622:Core/Src/main.c ****   {
 623:Core/Src/main.c ****     Error_Handler();
 624:Core/Src/main.c ****   }
 625:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 626:Core/Src/main.c ****   {
 627:Core/Src/main.c ****     Error_Handler();
 628:Core/Src/main.c ****   }
 629:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 630:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 631:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 632:Core/Src/main.c ****   {
 633:Core/Src/main.c ****     Error_Handler();
 634:Core/Src/main.c ****   }
 635:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 636:Core/Src/main.c ****   sConfigOC.Pulse = 4;
 637:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 638:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 639:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 640:Core/Src/main.c ****   {
 641:Core/Src/main.c ****     Error_Handler();
 642:Core/Src/main.c ****   }
 643:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 644:Core/Src/main.c **** 
 645:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 646:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 647:Core/Src/main.c **** 
 648:Core/Src/main.c **** }
 649:Core/Src/main.c **** 
 650:Core/Src/main.c **** /**
 651:Core/Src/main.c ****   * @brief TIM14 Initialization Function
 652:Core/Src/main.c ****   * @param None
 653:Core/Src/main.c ****   * @retval None
 654:Core/Src/main.c ****   */
 655:Core/Src/main.c **** static void MX_TIM14_Init(void)
 656:Core/Src/main.c **** {
 657:Core/Src/main.c **** 
 658:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 0 */
 659:Core/Src/main.c **** 
 660:Core/Src/main.c ****   /* USER CODE END TIM14_Init 0 */
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 13


 661:Core/Src/main.c **** 
 662:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 1 */
 663:Core/Src/main.c **** 
 664:Core/Src/main.c ****   /* USER CODE END TIM14_Init 1 */
 665:Core/Src/main.c ****   htim14.Instance = TIM14;
 666:Core/Src/main.c ****   htim14.Init.Prescaler = 11;
 667:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 668:Core/Src/main.c ****   htim14.Init.Period = 10000;
 669:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 670:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 671:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 672:Core/Src/main.c ****   {
 673:Core/Src/main.c ****     Error_Handler();
 674:Core/Src/main.c ****   }
 675:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 2 */
 676:Core/Src/main.c **** 
 677:Core/Src/main.c ****   /* USER CODE END TIM14_Init 2 */
 678:Core/Src/main.c **** 
 679:Core/Src/main.c **** }
 680:Core/Src/main.c **** 
 681:Core/Src/main.c **** /**
 682:Core/Src/main.c ****   * @brief TIM16 Initialization Function
 683:Core/Src/main.c ****   * @param None
 684:Core/Src/main.c ****   * @retval None
 685:Core/Src/main.c ****   */
 686:Core/Src/main.c **** static void MX_TIM16_Init(void)
 687:Core/Src/main.c **** {
 688:Core/Src/main.c **** 
 689:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 0 */
 690:Core/Src/main.c **** 
 691:Core/Src/main.c ****   /* USER CODE END TIM16_Init 0 */
 692:Core/Src/main.c **** 
 693:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 1 */
 694:Core/Src/main.c **** 
 695:Core/Src/main.c ****   /* USER CODE END TIM16_Init 1 */
 696:Core/Src/main.c ****   htim16.Instance = TIM16;
 697:Core/Src/main.c ****   htim16.Init.Prescaler = 47;
 698:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 699:Core/Src/main.c ****   htim16.Init.Period = 65535;
 700:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 701:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 702:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 703:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 704:Core/Src/main.c ****   {
 705:Core/Src/main.c ****     Error_Handler();
 706:Core/Src/main.c ****   }
 707:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 2 */
 708:Core/Src/main.c **** 
 709:Core/Src/main.c ****   /* USER CODE END TIM16_Init 2 */
 710:Core/Src/main.c **** 
 711:Core/Src/main.c **** }
 712:Core/Src/main.c **** 
 713:Core/Src/main.c **** /**
 714:Core/Src/main.c ****   * @brief GPIO Initialization Function
 715:Core/Src/main.c ****   * @param None
 716:Core/Src/main.c ****   * @retval None
 717:Core/Src/main.c ****   */
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 14


 718:Core/Src/main.c **** static void MX_GPIO_Init(void)
 719:Core/Src/main.c **** {
  26              		.loc 1 719 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              		.cfi_def_cfa_offset 20
  32              		.cfi_offset 4, -20
  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              		.cfi_def_cfa_offset 56
 720:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 720 3 view .LVU1
  40              		.loc 1 720 20 is_stmt 0 view .LVU2
  41 0004 1422     		movs	r2, #20
  42 0006 0021     		movs	r1, #0
  43 0008 03A8     		add	r0, sp, #12
  44 000a FFF7FEFF 		bl	memset
  45              	.LVL0:
 721:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 722:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 723:Core/Src/main.c **** 
 724:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 725:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  46              		.loc 1 725 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 725 3 view .LVU4
  49              		.loc 1 725 3 view .LVU5
  50 000e 304B     		ldr	r3, .L2
  51 0010 5A69     		ldr	r2, [r3, #20]
  52 0012 8021     		movs	r1, #128
  53 0014 C903     		lsls	r1, r1, #15
  54 0016 0A43     		orrs	r2, r1
  55 0018 5A61     		str	r2, [r3, #20]
  56              		.loc 1 725 3 view .LVU6
  57 001a 5A69     		ldr	r2, [r3, #20]
  58 001c 0A40     		ands	r2, r1
  59 001e 0092     		str	r2, [sp]
  60              		.loc 1 725 3 view .LVU7
  61 0020 009A     		ldr	r2, [sp]
  62              	.LBE4:
  63              		.loc 1 725 3 view .LVU8
 726:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  64              		.loc 1 726 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 726 3 view .LVU10
  67              		.loc 1 726 3 view .LVU11
  68 0022 5A69     		ldr	r2, [r3, #20]
  69 0024 8021     		movs	r1, #128
  70 0026 8902     		lsls	r1, r1, #10
  71 0028 0A43     		orrs	r2, r1
  72 002a 5A61     		str	r2, [r3, #20]
  73              		.loc 1 726 3 view .LVU12
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 15


  74 002c 5A69     		ldr	r2, [r3, #20]
  75 002e 0A40     		ands	r2, r1
  76 0030 0192     		str	r2, [sp, #4]
  77              		.loc 1 726 3 view .LVU13
  78 0032 019A     		ldr	r2, [sp, #4]
  79              	.LBE5:
  80              		.loc 1 726 3 view .LVU14
 727:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  81              		.loc 1 727 3 view .LVU15
  82              	.LBB6:
  83              		.loc 1 727 3 view .LVU16
  84              		.loc 1 727 3 view .LVU17
  85 0034 5A69     		ldr	r2, [r3, #20]
  86 0036 8021     		movs	r1, #128
  87 0038 C902     		lsls	r1, r1, #11
  88 003a 0A43     		orrs	r2, r1
  89 003c 5A61     		str	r2, [r3, #20]
  90              		.loc 1 727 3 view .LVU18
  91 003e 5B69     		ldr	r3, [r3, #20]
  92 0040 0B40     		ands	r3, r1
  93 0042 0293     		str	r3, [sp, #8]
  94              		.loc 1 727 3 view .LVU19
  95 0044 029B     		ldr	r3, [sp, #8]
  96              	.LBE6:
  97              		.loc 1 727 3 view .LVU20
 728:Core/Src/main.c **** 
 729:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 730:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
  98              		.loc 1 730 3 view .LVU21
  99 0046 234F     		ldr	r7, .L2+4
 100 0048 0022     		movs	r2, #0
 101 004a 0121     		movs	r1, #1
 102 004c 3800     		movs	r0, r7
 103 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL1:
 731:Core/Src/main.c **** 
 732:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 733:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, GPIO_PIN_RESET);
 105              		.loc 1 733 3 view .LVU22
 106 0052 9026     		movs	r6, #144
 107 0054 F605     		lsls	r6, r6, #23
 108 0056 0022     		movs	r2, #0
 109 0058 1021     		movs	r1, #16
 110 005a 3000     		movs	r0, r6
 111 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 112              	.LVL2:
 734:Core/Src/main.c **** 
 735:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 736:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
 113              		.loc 1 736 3 view .LVU23
 114              		.loc 1 736 23 is_stmt 0 view .LVU24
 115 0060 0125     		movs	r5, #1
 116 0062 0395     		str	r5, [sp, #12]
 737:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 117              		.loc 1 737 3 is_stmt 1 view .LVU25
 118              		.loc 1 737 24 is_stmt 0 view .LVU26
 119 0064 0495     		str	r5, [sp, #16]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 16


 738:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 120              		.loc 1 738 3 is_stmt 1 view .LVU27
 121              		.loc 1 738 24 is_stmt 0 view .LVU28
 122 0066 0024     		movs	r4, #0
 123 0068 0594     		str	r4, [sp, #20]
 739:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 124              		.loc 1 739 3 is_stmt 1 view .LVU29
 125              		.loc 1 739 25 is_stmt 0 view .LVU30
 126 006a 0694     		str	r4, [sp, #24]
 740:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 127              		.loc 1 740 3 is_stmt 1 view .LVU31
 128 006c 03A9     		add	r1, sp, #12
 129 006e 3800     		movs	r0, r7
 130 0070 FFF7FEFF 		bl	HAL_GPIO_Init
 131              	.LVL3:
 741:Core/Src/main.c **** 
 742:Core/Src/main.c ****   /*Configure GPIO pin : A3_Pin */
 743:Core/Src/main.c ****   GPIO_InitStruct.Pin = A3_Pin;
 132              		.loc 1 743 3 view .LVU32
 133              		.loc 1 743 23 is_stmt 0 view .LVU33
 134 0074 0223     		movs	r3, #2
 135 0076 0393     		str	r3, [sp, #12]
 744:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 136              		.loc 1 744 3 is_stmt 1 view .LVU34
 137              		.loc 1 744 24 is_stmt 0 view .LVU35
 138 0078 0494     		str	r4, [sp, #16]
 745:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 139              		.loc 1 745 3 is_stmt 1 view .LVU36
 140              		.loc 1 745 24 is_stmt 0 view .LVU37
 141 007a 0595     		str	r5, [sp, #20]
 746:Core/Src/main.c ****   HAL_GPIO_Init(A3_GPIO_Port, &GPIO_InitStruct);
 142              		.loc 1 746 3 is_stmt 1 view .LVU38
 143 007c 03A9     		add	r1, sp, #12
 144 007e 3800     		movs	r0, r7
 145 0080 FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL4:
 747:Core/Src/main.c **** 
 748:Core/Src/main.c ****   /*Configure GPIO pins : A2_Pin A1_Pin A0_Pin */
 749:Core/Src/main.c ****   GPIO_InitStruct.Pin = A2_Pin|A1_Pin|A0_Pin;
 147              		.loc 1 749 3 view .LVU39
 148              		.loc 1 749 23 is_stmt 0 view .LVU40
 149 0084 0723     		movs	r3, #7
 150 0086 0393     		str	r3, [sp, #12]
 750:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 151              		.loc 1 750 3 is_stmt 1 view .LVU41
 152              		.loc 1 750 24 is_stmt 0 view .LVU42
 153 0088 0494     		str	r4, [sp, #16]
 751:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 154              		.loc 1 751 3 is_stmt 1 view .LVU43
 155              		.loc 1 751 24 is_stmt 0 view .LVU44
 156 008a 0595     		str	r5, [sp, #20]
 752:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 157              		.loc 1 752 3 is_stmt 1 view .LVU45
 158 008c 03A9     		add	r1, sp, #12
 159 008e 3000     		movs	r0, r6
 160 0090 FFF7FEFF 		bl	HAL_GPIO_Init
 161              	.LVL5:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 17


 753:Core/Src/main.c **** 
 754:Core/Src/main.c ****   /*Configure GPIO pin : DRDY_Pin */
 755:Core/Src/main.c ****   GPIO_InitStruct.Pin = DRDY_Pin;
 162              		.loc 1 755 3 view .LVU46
 163              		.loc 1 755 23 is_stmt 0 view .LVU47
 164 0094 0823     		movs	r3, #8
 165 0096 0393     		str	r3, [sp, #12]
 756:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 166              		.loc 1 756 3 is_stmt 1 view .LVU48
 167              		.loc 1 756 24 is_stmt 0 view .LVU49
 168 0098 8423     		movs	r3, #132
 169 009a 9B03     		lsls	r3, r3, #14
 170 009c 0493     		str	r3, [sp, #16]
 757:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 171              		.loc 1 757 3 is_stmt 1 view .LVU50
 172              		.loc 1 757 24 is_stmt 0 view .LVU51
 173 009e 0594     		str	r4, [sp, #20]
 758:Core/Src/main.c ****   HAL_GPIO_Init(DRDY_GPIO_Port, &GPIO_InitStruct);
 174              		.loc 1 758 3 is_stmt 1 view .LVU52
 175 00a0 03A9     		add	r1, sp, #12
 176 00a2 3000     		movs	r0, r6
 177 00a4 FFF7FEFF 		bl	HAL_GPIO_Init
 178              	.LVL6:
 759:Core/Src/main.c **** 
 760:Core/Src/main.c ****   /*Configure GPIO pin : CS_Pin */
 761:Core/Src/main.c ****   GPIO_InitStruct.Pin = CS_Pin;
 179              		.loc 1 761 3 view .LVU53
 180              		.loc 1 761 23 is_stmt 0 view .LVU54
 181 00a8 1023     		movs	r3, #16
 182 00aa 0393     		str	r3, [sp, #12]
 762:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 183              		.loc 1 762 3 is_stmt 1 view .LVU55
 184              		.loc 1 762 24 is_stmt 0 view .LVU56
 185 00ac 0495     		str	r5, [sp, #16]
 763:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 186              		.loc 1 763 3 is_stmt 1 view .LVU57
 187              		.loc 1 763 24 is_stmt 0 view .LVU58
 188 00ae 0594     		str	r4, [sp, #20]
 764:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 189              		.loc 1 764 3 is_stmt 1 view .LVU59
 190              		.loc 1 764 25 is_stmt 0 view .LVU60
 191 00b0 0694     		str	r4, [sp, #24]
 765:Core/Src/main.c ****   HAL_GPIO_Init(CS_GPIO_Port, &GPIO_InitStruct);
 192              		.loc 1 765 3 is_stmt 1 view .LVU61
 193 00b2 03A9     		add	r1, sp, #12
 194 00b4 3000     		movs	r0, r6
 195 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 196              	.LVL7:
 766:Core/Src/main.c **** 
 767:Core/Src/main.c ****   /* EXTI interrupt init*/
 768:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI2_3_IRQn, 0, 0);
 197              		.loc 1 768 3 view .LVU62
 198 00ba 0022     		movs	r2, #0
 199 00bc 0021     		movs	r1, #0
 200 00be 0620     		movs	r0, #6
 201 00c0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 202              	.LVL8:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 18


 769:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 203              		.loc 1 769 3 view .LVU63
 204 00c4 0620     		movs	r0, #6
 205 00c6 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 206              	.LVL9:
 770:Core/Src/main.c **** 
 771:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 772:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 773:Core/Src/main.c **** }
 207              		.loc 1 773 1 is_stmt 0 view .LVU64
 208 00ca 09B0     		add	sp, sp, #36
 209              		@ sp needed
 210 00cc F0BD     		pop	{r4, r5, r6, r7, pc}
 211              	.L3:
 212 00ce C046     		.align	2
 213              	.L2:
 214 00d0 00100240 		.word	1073876992
 215 00d4 00140048 		.word	1207964672
 216              		.cfi_endproc
 217              	.LFE72:
 219              		.section	.text.delay_us,"ax",%progbits
 220              		.align	1
 221              		.global	delay_us
 222              		.syntax unified
 223              		.code	16
 224              		.thumb_func
 226              	delay_us:
 227              	.LVL10:
 228              	.LFB40:
 117:Core/Src/main.c **** 	__HAL_TIM_SET_COUNTER(&htim16,0);  
 229              		.loc 1 117 1 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 118:Core/Src/main.c **** 	while (__HAL_TIM_GET_COUNTER(&htim16) < us);  
 234              		.loc 1 118 2 view .LVU66
 235 0000 034B     		ldr	r3, .L6
 236 0002 1A68     		ldr	r2, [r3]
 237 0004 0023     		movs	r3, #0
 238 0006 5362     		str	r3, [r2, #36]
 119:Core/Src/main.c **** }
 239              		.loc 1 119 2 view .LVU67
 240              	.L5:
 119:Core/Src/main.c **** }
 241              		.loc 1 119 40 discriminator 1 view .LVU68
 119:Core/Src/main.c **** }
 242              		.loc 1 119 9 is_stmt 0 discriminator 1 view .LVU69
 243 0008 536A     		ldr	r3, [r2, #36]
 119:Core/Src/main.c **** }
 244              		.loc 1 119 40 discriminator 1 view .LVU70
 245 000a 8342     		cmp	r3, r0
 246 000c FCD3     		bcc	.L5
 120:Core/Src/main.c **** 
 247              		.loc 1 120 1 view .LVU71
 248              		@ sp needed
 249 000e 7047     		bx	lr
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 19


 250              	.L7:
 251              		.align	2
 252              	.L6:
 253 0010 00000000 		.word	htim16
 254              		.cfi_endproc
 255              	.LFE40:
 257              		.section	.text.addr_setup,"ax",%progbits
 258              		.align	1
 259              		.global	addr_setup
 260              		.syntax unified
 261              		.code	16
 262              		.thumb_func
 264              	addr_setup:
 265              	.LFB41:
 122:Core/Src/main.c ****   uint8_t a0 = HAL_GPIO_ReadPin(A0_GPIO_Port, A0_Pin) & 1;
 266              		.loc 1 122 19 is_stmt 1 view -0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 271              		.cfi_def_cfa_offset 24
 272              		.cfi_offset 3, -24
 273              		.cfi_offset 4, -20
 274              		.cfi_offset 5, -16
 275              		.cfi_offset 6, -12
 276              		.cfi_offset 7, -8
 277              		.cfi_offset 14, -4
 123:Core/Src/main.c ****   uint8_t a1 = HAL_GPIO_ReadPin(A1_GPIO_Port, A1_Pin) & 1;
 278              		.loc 1 123 3 view .LVU73
 123:Core/Src/main.c ****   uint8_t a1 = HAL_GPIO_ReadPin(A1_GPIO_Port, A1_Pin) & 1;
 279              		.loc 1 123 16 is_stmt 0 view .LVU74
 280 0002 9027     		movs	r7, #144
 281 0004 FF05     		lsls	r7, r7, #23
 282 0006 0421     		movs	r1, #4
 283 0008 3800     		movs	r0, r7
 284 000a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 285              	.LVL11:
 123:Core/Src/main.c ****   uint8_t a1 = HAL_GPIO_ReadPin(A1_GPIO_Port, A1_Pin) & 1;
 286              		.loc 1 123 11 view .LVU75
 287 000e 0124     		movs	r4, #1
 288 0010 2040     		ands	r0, r4
 289 0012 0500     		movs	r5, r0
 290              	.LVL12:
 124:Core/Src/main.c ****   uint8_t a2 = HAL_GPIO_ReadPin(A2_GPIO_Port, A2_Pin) & 1;
 291              		.loc 1 124 3 is_stmt 1 view .LVU76
 124:Core/Src/main.c ****   uint8_t a2 = HAL_GPIO_ReadPin(A2_GPIO_Port, A2_Pin) & 1;
 292              		.loc 1 124 16 is_stmt 0 view .LVU77
 293 0014 0221     		movs	r1, #2
 294 0016 3800     		movs	r0, r7
 295 0018 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 296              	.LVL13:
 124:Core/Src/main.c ****   uint8_t a2 = HAL_GPIO_ReadPin(A2_GPIO_Port, A2_Pin) & 1;
 297              		.loc 1 124 11 view .LVU78
 298 001c 2040     		ands	r0, r4
 299 001e 0600     		movs	r6, r0
 300              	.LVL14:
 125:Core/Src/main.c ****   uint8_t a3 = HAL_GPIO_ReadPin(A3_GPIO_Port, A3_Pin) & 1;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 20


 301              		.loc 1 125 3 is_stmt 1 view .LVU79
 125:Core/Src/main.c ****   uint8_t a3 = HAL_GPIO_ReadPin(A3_GPIO_Port, A3_Pin) & 1;
 302              		.loc 1 125 16 is_stmt 0 view .LVU80
 303 0020 0121     		movs	r1, #1
 304 0022 3800     		movs	r0, r7
 305 0024 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 306              	.LVL15:
 125:Core/Src/main.c ****   uint8_t a3 = HAL_GPIO_ReadPin(A3_GPIO_Port, A3_Pin) & 1;
 307              		.loc 1 125 11 view .LVU81
 308 0028 2040     		ands	r0, r4
 309 002a 0700     		movs	r7, r0
 310              	.LVL16:
 126:Core/Src/main.c ****   addr = (a3 << 3) | (a2 << 2) | (a1 << 1) | a0;
 311              		.loc 1 126 3 is_stmt 1 view .LVU82
 126:Core/Src/main.c ****   addr = (a3 << 3) | (a2 << 2) | (a1 << 1) | a0;
 312              		.loc 1 126 16 is_stmt 0 view .LVU83
 313 002c 0221     		movs	r1, #2
 314 002e 0A48     		ldr	r0, .L9
 315 0030 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 316              	.LVL17:
 126:Core/Src/main.c ****   addr = (a3 << 3) | (a2 << 2) | (a1 << 1) | a0;
 317              		.loc 1 126 11 view .LVU84
 318 0034 0440     		ands	r4, r0
 319              	.LVL18:
 127:Core/Src/main.c ****   addr = ~addr; // remove if dip s
 320              		.loc 1 127 3 is_stmt 1 view .LVU85
 127:Core/Src/main.c ****   addr = ~addr; // remove if dip s
 321              		.loc 1 127 14 is_stmt 0 view .LVU86
 322 0036 E400     		lsls	r4, r4, #3
 323              	.LVL19:
 127:Core/Src/main.c ****   addr = ~addr; // remove if dip s
 324              		.loc 1 127 26 view .LVU87
 325 0038 BF00     		lsls	r7, r7, #2
 326              	.LVL20:
 127:Core/Src/main.c ****   addr = ~addr; // remove if dip s
 327              		.loc 1 127 20 view .LVU88
 328 003a 3C43     		orrs	r4, r7
 127:Core/Src/main.c ****   addr = ~addr; // remove if dip s
 329              		.loc 1 127 38 view .LVU89
 330 003c 7600     		lsls	r6, r6, #1
 331              	.LVL21:
 127:Core/Src/main.c ****   addr = ~addr; // remove if dip s
 332              		.loc 1 127 32 view .LVU90
 333 003e 3443     		orrs	r4, r6
 127:Core/Src/main.c ****   addr = ~addr; // remove if dip s
 334              		.loc 1 127 44 view .LVU91
 335 0040 2C43     		orrs	r4, r5
 127:Core/Src/main.c ****   addr = ~addr; // remove if dip s
 336              		.loc 1 127 8 view .LVU92
 337 0042 064B     		ldr	r3, .L9+4
 338 0044 1C70     		strb	r4, [r3]
 128:Core/Src/main.c ****   std_addr_base = 0x000100C0 | (addr << 8);
 339              		.loc 1 128 3 is_stmt 1 view .LVU93
 128:Core/Src/main.c ****   std_addr_base = 0x000100C0 | (addr << 8);
 340              		.loc 1 128 8 is_stmt 0 view .LVU94
 341 0046 E043     		mvns	r0, r4
 342              	.LVL22:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 21


 128:Core/Src/main.c ****   std_addr_base = 0x000100C0 | (addr << 8);
 343              		.loc 1 128 8 view .LVU95
 344 0048 C0B2     		uxtb	r0, r0
 345 004a 1870     		strb	r0, [r3]
 129:Core/Src/main.c **** }
 346              		.loc 1 129 3 is_stmt 1 view .LVU96
 129:Core/Src/main.c **** }
 347              		.loc 1 129 38 is_stmt 0 view .LVU97
 348 004c 0002     		lsls	r0, r0, #8
 129:Core/Src/main.c **** }
 349              		.loc 1 129 30 view .LVU98
 350 004e 044B     		ldr	r3, .L9+8
 351 0050 0343     		orrs	r3, r0
 129:Core/Src/main.c **** }
 352              		.loc 1 129 17 view .LVU99
 353 0052 044A     		ldr	r2, .L9+12
 354 0054 1360     		str	r3, [r2]
 130:Core/Src/main.c **** 
 355              		.loc 1 130 1 view .LVU100
 356              		@ sp needed
 357              	.LVL23:
 130:Core/Src/main.c **** 
 358              		.loc 1 130 1 view .LVU101
 359 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 360              	.L10:
 361              		.align	2
 362              	.L9:
 363 0058 00140048 		.word	1207964672
 364 005c 00000000 		.word	addr
 365 0060 C0000100 		.word	65728
 366 0064 00000000 		.word	std_addr_base
 367              		.cfi_endproc
 368              	.LFE41:
 370              		.section	.text.can_setup,"ax",%progbits
 371              		.align	1
 372              		.global	can_setup
 373              		.syntax unified
 374              		.code	16
 375              		.thumb_func
 377              	can_setup:
 378              	.LFB42:
 132:Core/Src/main.c ****   // txh std
 379              		.loc 1 132 18 is_stmt 1 view -0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383 0000 70B5     		push	{r4, r5, r6, lr}
 384              		.cfi_def_cfa_offset 16
 385              		.cfi_offset 4, -16
 386              		.cfi_offset 5, -12
 387              		.cfi_offset 6, -8
 388              		.cfi_offset 14, -4
 134:Core/Src/main.c ****     txh_std[j].DLC = 1; // send only top 8 bits of ADC data
 389              		.loc 1 134 3 view .LVU103
 390              	.LBB7:
 134:Core/Src/main.c ****     txh_std[j].DLC = 1; // send only top 8 bits of ADC data
 391              		.loc 1 134 8 view .LVU104
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 22


 392              	.LVL24:
 134:Core/Src/main.c ****     txh_std[j].DLC = 1; // send only top 8 bits of ADC data
 393              		.loc 1 134 12 is_stmt 0 view .LVU105
 394 0002 0025     		movs	r5, #0
 134:Core/Src/main.c ****     txh_std[j].DLC = 1; // send only top 8 bits of ADC data
 395              		.loc 1 134 3 view .LVU106
 396 0004 16E0     		b	.L12
 397              	.LVL25:
 398              	.L13:
 135:Core/Src/main.c ****     txh_std[j].StdId = 0; // not used
 399              		.loc 1 135 5 is_stmt 1 discriminator 3 view .LVU107
 135:Core/Src/main.c ****     txh_std[j].StdId = 0; // not used
 400              		.loc 1 135 20 is_stmt 0 discriminator 3 view .LVU108
 401 0006 1D49     		ldr	r1, .L14
 402 0008 6A00     		lsls	r2, r5, #1
 403 000a 5019     		adds	r0, r2, r5
 404 000c C300     		lsls	r3, r0, #3
 405 000e CB18     		adds	r3, r1, r3
 406 0010 0120     		movs	r0, #1
 407 0012 1861     		str	r0, [r3, #16]
 136:Core/Src/main.c ****     txh_std[j].ExtId = std_addr_base | std_state | j;
 408              		.loc 1 136 5 is_stmt 1 discriminator 3 view .LVU109
 136:Core/Src/main.c ****     txh_std[j].ExtId = std_addr_base | std_state | j;
 409              		.loc 1 136 22 is_stmt 0 discriminator 3 view .LVU110
 410 0014 5219     		adds	r2, r2, r5
 411 0016 D400     		lsls	r4, r2, #3
 412 0018 0020     		movs	r0, #0
 413 001a 6050     		str	r0, [r4, r1]
 137:Core/Src/main.c ****     txh_std[j].IDE = CAN_ID_EXT;
 414              		.loc 1 137 5 is_stmt 1 discriminator 3 view .LVU111
 137:Core/Src/main.c ****     txh_std[j].IDE = CAN_ID_EXT;
 415              		.loc 1 137 38 is_stmt 0 discriminator 3 view .LVU112
 416 001c 184A     		ldr	r2, .L14+4
 417 001e 1278     		ldrb	r2, [r2]
 418 0020 1849     		ldr	r1, .L14+8
 419 0022 0968     		ldr	r1, [r1]
 420 0024 0A43     		orrs	r2, r1
 137:Core/Src/main.c ****     txh_std[j].IDE = CAN_ID_EXT;
 421              		.loc 1 137 50 discriminator 3 view .LVU113
 422 0026 2A43     		orrs	r2, r5
 137:Core/Src/main.c ****     txh_std[j].IDE = CAN_ID_EXT;
 423              		.loc 1 137 22 discriminator 3 view .LVU114
 424 0028 5A60     		str	r2, [r3, #4]
 138:Core/Src/main.c ****     txh_std[j].RTR = CAN_RTR_DATA;
 425              		.loc 1 138 5 is_stmt 1 discriminator 3 view .LVU115
 138:Core/Src/main.c ****     txh_std[j].RTR = CAN_RTR_DATA;
 426              		.loc 1 138 20 is_stmt 0 discriminator 3 view .LVU116
 427 002a 0422     		movs	r2, #4
 428 002c 9A60     		str	r2, [r3, #8]
 139:Core/Src/main.c ****     txh_std[j].TransmitGlobalTime = DISABLE;
 429              		.loc 1 139 5 is_stmt 1 discriminator 3 view .LVU117
 139:Core/Src/main.c ****     txh_std[j].TransmitGlobalTime = DISABLE;
 430              		.loc 1 139 20 is_stmt 0 discriminator 3 view .LVU118
 431 002e D860     		str	r0, [r3, #12]
 140:Core/Src/main.c ****   }
 432              		.loc 1 140 5 is_stmt 1 discriminator 3 view .LVU119
 140:Core/Src/main.c ****   }
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 23


 433              		.loc 1 140 35 is_stmt 0 discriminator 3 view .LVU120
 434 0030 1875     		strb	r0, [r3, #20]
 134:Core/Src/main.c ****     txh_std[j].DLC = 1; // send only top 8 bits of ADC data
 435              		.loc 1 134 27 is_stmt 1 discriminator 3 view .LVU121
 436 0032 0135     		adds	r5, r5, #1
 437              	.LVL26:
 438              	.L12:
 134:Core/Src/main.c ****     txh_std[j].DLC = 1; // send only top 8 bits of ADC data
 439              		.loc 1 134 21 discriminator 1 view .LVU122
 440 0034 032D     		cmp	r5, #3
 441 0036 E6DD     		ble	.L13
 442              	.LBE7:
 144:Core/Src/main.c ****   txh_nst.StdId = 0; // not used
 443              		.loc 1 144 3 view .LVU123
 144:Core/Src/main.c ****   txh_nst.StdId = 0; // not used
 444              		.loc 1 144 15 is_stmt 0 view .LVU124
 445 0038 134B     		ldr	r3, .L14+12
 446 003a 0421     		movs	r1, #4
 447 003c 1961     		str	r1, [r3, #16]
 145:Core/Src/main.c ****   txh_nst.ExtId = nst_addr_base ;
 448              		.loc 1 145 3 is_stmt 1 view .LVU125
 145:Core/Src/main.c ****   txh_nst.ExtId = nst_addr_base ;
 449              		.loc 1 145 17 is_stmt 0 view .LVU126
 450 003e 0022     		movs	r2, #0
 451 0040 1A60     		str	r2, [r3]
 146:Core/Src/main.c ****   txh_nst.IDE = CAN_ID_EXT;
 452              		.loc 1 146 3 is_stmt 1 view .LVU127
 146:Core/Src/main.c ****   txh_nst.IDE = CAN_ID_EXT;
 453              		.loc 1 146 17 is_stmt 0 view .LVU128
 454 0042 1248     		ldr	r0, .L14+16
 455 0044 0068     		ldr	r0, [r0]
 456 0046 5860     		str	r0, [r3, #4]
 147:Core/Src/main.c ****   txh_nst.RTR = CAN_RTR_DATA;
 457              		.loc 1 147 3 is_stmt 1 view .LVU129
 147:Core/Src/main.c ****   txh_nst.RTR = CAN_RTR_DATA;
 458              		.loc 1 147 15 is_stmt 0 view .LVU130
 459 0048 9960     		str	r1, [r3, #8]
 148:Core/Src/main.c ****   txh_nst.TransmitGlobalTime = DISABLE;
 460              		.loc 1 148 3 is_stmt 1 view .LVU131
 148:Core/Src/main.c ****   txh_nst.TransmitGlobalTime = DISABLE;
 461              		.loc 1 148 15 is_stmt 0 view .LVU132
 462 004a DA60     		str	r2, [r3, #12]
 149:Core/Src/main.c **** 
 463              		.loc 1 149 3 is_stmt 1 view .LVU133
 149:Core/Src/main.c **** 
 464              		.loc 1 149 30 is_stmt 0 view .LVU134
 465 004c 1A75     		strb	r2, [r3, #20]
 152:Core/Src/main.c ****   filter.FilterMaskIdLow = 0xFFF0;
 466              		.loc 1 152 3 is_stmt 1 view .LVU135
 152:Core/Src/main.c ****   filter.FilterMaskIdLow = 0xFFF0;
 467              		.loc 1 152 27 is_stmt 0 view .LVU136
 468 004e 1049     		ldr	r1, .L14+20
 469 0050 104B     		ldr	r3, .L14+24
 470 0052 8B60     		str	r3, [r1, #8]
 153:Core/Src/main.c ****   filter.FilterIdHigh = 0x0000;
 471              		.loc 1 153 3 is_stmt 1 view .LVU137
 153:Core/Src/main.c ****   filter.FilterIdHigh = 0x0000;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 24


 472              		.loc 1 153 26 is_stmt 0 view .LVU138
 473 0054 104B     		ldr	r3, .L14+28
 474 0056 CB60     		str	r3, [r1, #12]
 154:Core/Src/main.c ****   filter.FilterIdLow = 0x00C0 | (addr << 8);
 475              		.loc 1 154 3 is_stmt 1 view .LVU139
 154:Core/Src/main.c ****   filter.FilterIdLow = 0x00C0 | (addr << 8);
 476              		.loc 1 154 23 is_stmt 0 view .LVU140
 477 0058 0A60     		str	r2, [r1]
 155:Core/Src/main.c ****   filter.FilterMode = CAN_FILTERMODE_IDMASK;
 478              		.loc 1 155 3 is_stmt 1 view .LVU141
 155:Core/Src/main.c ****   filter.FilterMode = CAN_FILTERMODE_IDMASK;
 479              		.loc 1 155 39 is_stmt 0 view .LVU142
 480 005a 104B     		ldr	r3, .L14+32
 481 005c 1B78     		ldrb	r3, [r3]
 482 005e 1B02     		lsls	r3, r3, #8
 155:Core/Src/main.c ****   filter.FilterMode = CAN_FILTERMODE_IDMASK;
 483              		.loc 1 155 31 view .LVU143
 484 0060 C020     		movs	r0, #192
 485 0062 0343     		orrs	r3, r0
 155:Core/Src/main.c ****   filter.FilterMode = CAN_FILTERMODE_IDMASK;
 486              		.loc 1 155 22 view .LVU144
 487 0064 4B60     		str	r3, [r1, #4]
 156:Core/Src/main.c ****   filter.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 488              		.loc 1 156 3 is_stmt 1 view .LVU145
 156:Core/Src/main.c ****   filter.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 489              		.loc 1 156 21 is_stmt 0 view .LVU146
 490 0066 8A61     		str	r2, [r1, #24]
 157:Core/Src/main.c ****   filter.FilterScale = CAN_FILTERSCALE_32BIT;
 491              		.loc 1 157 3 is_stmt 1 view .LVU147
 157:Core/Src/main.c ****   filter.FilterScale = CAN_FILTERSCALE_32BIT;
 492              		.loc 1 157 31 is_stmt 0 view .LVU148
 493 0068 0A61     		str	r2, [r1, #16]
 158:Core/Src/main.c ****   filter.FilterActivation = CAN_FILTER_ENABLE;
 494              		.loc 1 158 3 is_stmt 1 view .LVU149
 158:Core/Src/main.c ****   filter.FilterActivation = CAN_FILTER_ENABLE;
 495              		.loc 1 158 22 is_stmt 0 view .LVU150
 496 006a 0123     		movs	r3, #1
 497 006c CB61     		str	r3, [r1, #28]
 159:Core/Src/main.c ****   filter.FilterBank = 0x00; // use first filter bank
 498              		.loc 1 159 3 is_stmt 1 view .LVU151
 159:Core/Src/main.c ****   filter.FilterBank = 0x00; // use first filter bank
 499              		.loc 1 159 27 is_stmt 0 view .LVU152
 500 006e 0B62     		str	r3, [r1, #32]
 160:Core/Src/main.c **** 
 501              		.loc 1 160 3 is_stmt 1 view .LVU153
 160:Core/Src/main.c **** 
 502              		.loc 1 160 21 is_stmt 0 view .LVU154
 503 0070 4A61     		str	r2, [r1, #20]
 162:Core/Src/main.c **** }
 504              		.loc 1 162 3 is_stmt 1 view .LVU155
 505 0072 0B48     		ldr	r0, .L14+36
 506 0074 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 507              	.LVL27:
 163:Core/Src/main.c **** 
 508              		.loc 1 163 1 is_stmt 0 view .LVU156
 509              		@ sp needed
 510              	.LVL28:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 25


 163:Core/Src/main.c **** 
 511              		.loc 1 163 1 view .LVU157
 512 0078 70BD     		pop	{r4, r5, r6, pc}
 513              	.L15:
 514 007a C046     		.align	2
 515              	.L14:
 516 007c 00000000 		.word	txh_std
 517 0080 00000000 		.word	std_state
 518 0084 00000000 		.word	std_addr_base
 519 0088 00000000 		.word	txh_nst
 520 008c 00000000 		.word	nst_addr_base
 521 0090 00000000 		.word	filter
 522 0094 FF1F0000 		.word	8191
 523 0098 F0FF0000 		.word	65520
 524 009c 00000000 		.word	addr
 525 00a0 00000000 		.word	hcan
 526              		.cfi_endproc
 527              	.LFE42:
 529              		.section	.text.can_std_transmit,"ax",%progbits
 530              		.align	1
 531              		.global	can_std_transmit
 532              		.syntax unified
 533              		.code	16
 534              		.thumb_func
 536              	can_std_transmit:
 537              	.LVL29:
 538              	.LFB43:
 165:Core/Src/main.c ****   while (HAL_CAN_AddTxMessage(&hcan, &(txh_std[sensor]), ((uint8_t*) (adc_data + sensor)) + 1, &txM
 539              		.loc 1 165 39 is_stmt 1 view -0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 165:Core/Src/main.c ****   while (HAL_CAN_AddTxMessage(&hcan, &(txh_std[sensor]), ((uint8_t*) (adc_data + sensor)) + 1, &txM
 543              		.loc 1 165 39 is_stmt 0 view .LVU159
 544 0000 10B5     		push	{r4, lr}
 545              		.cfi_def_cfa_offset 8
 546              		.cfi_offset 4, -8
 547              		.cfi_offset 14, -4
 548 0002 0400     		movs	r4, r0
 166:Core/Src/main.c ****     // too many messages! FIXME
 549              		.loc 1 166 3 is_stmt 1 view .LVU160
 166:Core/Src/main.c ****     // too many messages! FIXME
 550              		.loc 1 166 9 is_stmt 0 view .LVU161
 551 0004 02E0     		b	.L17
 552              	.LVL30:
 553              	.L18:
 168:Core/Src/main.c ****   } 
 554              		.loc 1 168 5 is_stmt 1 view .LVU162
 555 0006 8020     		movs	r0, #128
 556 0008 FFF7FEFF 		bl	delay_us
 557              	.LVL31:
 558              	.L17:
 166:Core/Src/main.c ****     // too many messages! FIXME
 559              		.loc 1 166 108 view .LVU163
 166:Core/Src/main.c ****     // too many messages! FIXME
 560              		.loc 1 166 38 is_stmt 0 view .LVU164
 561 000c 6100     		lsls	r1, r4, #1
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 26


 562 000e 0919     		adds	r1, r1, r4
 563 0010 C900     		lsls	r1, r1, #3
 564 0012 064B     		ldr	r3, .L19
 565 0014 C918     		adds	r1, r1, r3
 166:Core/Src/main.c ****     // too many messages! FIXME
 566              		.loc 1 166 80 view .LVU165
 567 0016 A200     		lsls	r2, r4, #2
 166:Core/Src/main.c ****     // too many messages! FIXME
 568              		.loc 1 166 91 view .LVU166
 569 0018 0132     		adds	r2, r2, #1
 166:Core/Src/main.c ****     // too many messages! FIXME
 570              		.loc 1 166 10 view .LVU167
 571 001a 054B     		ldr	r3, .L19+4
 572 001c 0548     		ldr	r0, .L19+8
 573 001e 1218     		adds	r2, r2, r0
 574 0020 0548     		ldr	r0, .L19+12
 575 0022 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 576              	.LVL32:
 166:Core/Src/main.c ****     // too many messages! FIXME
 577              		.loc 1 166 108 view .LVU168
 578 0026 0028     		cmp	r0, #0
 579 0028 EDD1     		bne	.L18
 170:Core/Src/main.c **** 
 580              		.loc 1 170 1 view .LVU169
 581              		@ sp needed
 582 002a 10BD     		pop	{r4, pc}
 583              	.L20:
 584              		.align	2
 585              	.L19:
 586 002c 00000000 		.word	txh_std
 587 0030 00000000 		.word	txMailbox
 588 0034 00000000 		.word	adc_data
 589 0038 00000000 		.word	hcan
 590              		.cfi_endproc
 591              	.LFE43:
 593              		.section	.text.can_nst_transmit,"ax",%progbits
 594              		.align	1
 595              		.global	can_nst_transmit
 596              		.syntax unified
 597              		.code	16
 598              		.thumb_func
 600              	can_nst_transmit:
 601              	.LVL33:
 602              	.LFB44:
 172:Core/Src/main.c ****   txh_nst.ExtId = nst_addr_base | nst_state | cmd;
 603              		.loc 1 172 49 is_stmt 1 view -0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 172:Core/Src/main.c ****   txh_nst.ExtId = nst_addr_base | nst_state | cmd;
 607              		.loc 1 172 49 is_stmt 0 view .LVU171
 608 0000 10B5     		push	{r4, lr}
 609              		.cfi_def_cfa_offset 8
 610              		.cfi_offset 4, -8
 611              		.cfi_offset 14, -4
 173:Core/Src/main.c ****   // right now we can't transmit too many messages too quickly or they will be lost
 612              		.loc 1 173 3 is_stmt 1 view .LVU172
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 27


 173:Core/Src/main.c ****   // right now we can't transmit too many messages too quickly or they will be lost
 613              		.loc 1 173 33 is_stmt 0 view .LVU173
 614 0002 084B     		ldr	r3, .L24
 615 0004 1B78     		ldrb	r3, [r3]
 616 0006 084A     		ldr	r2, .L24+4
 617 0008 1268     		ldr	r2, [r2]
 618 000a 1343     		orrs	r3, r2
 173:Core/Src/main.c ****   // right now we can't transmit too many messages too quickly or they will be lost
 619              		.loc 1 173 45 view .LVU174
 620 000c 1843     		orrs	r0, r3
 621              	.LVL34:
 173:Core/Src/main.c ****   // right now we can't transmit too many messages too quickly or they will be lost
 622              		.loc 1 173 17 view .LVU175
 623 000e 0749     		ldr	r1, .L24+8
 624              	.LVL35:
 173:Core/Src/main.c ****   // right now we can't transmit too many messages too quickly or they will be lost
 625              		.loc 1 173 17 view .LVU176
 626 0010 4860     		str	r0, [r1, #4]
 176:Core/Src/main.c ****     // too many messages! FIXME
 627              		.loc 1 176 3 is_stmt 1 view .LVU177
 176:Core/Src/main.c ****     // too many messages! FIXME
 628              		.loc 1 176 7 is_stmt 0 view .LVU178
 629 0012 074B     		ldr	r3, .L24+12
 630 0014 074A     		ldr	r2, .L24+16
 631 0016 0848     		ldr	r0, .L24+20
 632 0018 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 633              	.LVL36:
 176:Core/Src/main.c ****     // too many messages! FIXME
 634              		.loc 1 176 6 view .LVU179
 635 001c 0028     		cmp	r0, #0
 636 001e 00D0     		beq	.L21
 637              	.L23:
 178:Core/Src/main.c ****   }
 638              		.loc 1 178 5 is_stmt 1 discriminator 1 view .LVU180
 178:Core/Src/main.c ****   }
 639              		.loc 1 178 11 discriminator 1 view .LVU181
 640 0020 FEE7     		b	.L23
 641              	.L21:
 180:Core/Src/main.c **** 
 642              		.loc 1 180 1 is_stmt 0 view .LVU182
 643              		@ sp needed
 644 0022 10BD     		pop	{r4, pc}
 645              	.L25:
 646              		.align	2
 647              	.L24:
 648 0024 00000000 		.word	nst_state
 649 0028 00000000 		.word	nst_addr_base
 650 002c 00000000 		.word	txh_nst
 651 0030 00000000 		.word	txMailbox
 652 0034 00000000 		.word	tx_nst_data
 653 0038 00000000 		.word	hcan
 654              		.cfi_endproc
 655              	.LFE44:
 657              		.section	.text.can_tx_transmit_timer_handler,"ax",%progbits
 658              		.align	1
 659              		.global	can_tx_transmit_timer_handler
 660              		.syntax unified
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 28


 661              		.code	16
 662              		.thumb_func
 664              	can_tx_transmit_timer_handler:
 665              	.LFB45:
 182:Core/Src/main.c ****   can_std_transmit(can_std_channel);
 666              		.loc 1 182 38 is_stmt 1 view -0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 0
 669              		@ frame_needed = 0, uses_anonymous_args = 0
 670 0000 10B5     		push	{r4, lr}
 671              		.cfi_def_cfa_offset 8
 672              		.cfi_offset 4, -8
 673              		.cfi_offset 14, -4
 183:Core/Src/main.c ****   can_std_channel++;
 674              		.loc 1 183 3 view .LVU184
 675 0002 064C     		ldr	r4, .L27
 676 0004 2078     		ldrb	r0, [r4]
 677 0006 FFF7FEFF 		bl	can_std_transmit
 678              	.LVL37:
 184:Core/Src/main.c ****   can_std_channel %= 4;
 679              		.loc 1 184 3 view .LVU185
 184:Core/Src/main.c ****   can_std_channel %= 4;
 680              		.loc 1 184 18 is_stmt 0 view .LVU186
 681 000a 2378     		ldrb	r3, [r4]
 682 000c 0133     		adds	r3, r3, #1
 683 000e DBB2     		uxtb	r3, r3
 684 0010 2370     		strb	r3, [r4]
 185:Core/Src/main.c **** }
 685              		.loc 1 185 3 is_stmt 1 view .LVU187
 185:Core/Src/main.c **** }
 686              		.loc 1 185 19 is_stmt 0 view .LVU188
 687 0012 0322     		movs	r2, #3
 688 0014 1340     		ands	r3, r2
 689 0016 2370     		strb	r3, [r4]
 186:Core/Src/main.c **** 
 690              		.loc 1 186 1 view .LVU189
 691              		@ sp needed
 692 0018 10BD     		pop	{r4, pc}
 693              	.L28:
 694 001a C046     		.align	2
 695              	.L27:
 696 001c 00000000 		.word	can_std_channel
 697              		.cfi_endproc
 698              	.LFE45:
 700              		.section	.text.can_rx_handler,"ax",%progbits
 701              		.align	1
 702              		.global	can_rx_handler
 703              		.syntax unified
 704              		.code	16
 705              		.thumb_func
 707              	can_rx_handler:
 708              	.LFB46:
 188:Core/Src/main.c ****   // handle various commands
 709              		.loc 1 188 23 is_stmt 1 view -0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 0
 712              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 29


 713              		@ link register save eliminated.
 191:Core/Src/main.c **** 
 714              		.loc 1 191 1 view .LVU191
 715              		@ sp needed
 716 0000 7047     		bx	lr
 717              		.cfi_endproc
 718              	.LFE46:
 720              		.section	.text.ads131m04_transfer_word,"ax",%progbits
 721              		.align	1
 722              		.global	ads131m04_transfer_word
 723              		.syntax unified
 724              		.code	16
 725              		.thumb_func
 727              	ads131m04_transfer_word:
 728              	.LVL38:
 729              	.LFB47:
 193:Core/Src/main.c ****   uint8_t lower = word & 0xff;
 730              		.loc 1 193 49 view -0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 8
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 193:Core/Src/main.c ****   uint8_t lower = word & 0xff;
 734              		.loc 1 193 49 is_stmt 0 view .LVU193
 735 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 736              		.cfi_def_cfa_offset 20
 737              		.cfi_offset 4, -20
 738              		.cfi_offset 5, -16
 739              		.cfi_offset 6, -12
 740              		.cfi_offset 7, -8
 741              		.cfi_offset 14, -4
 742 0002 C646     		mov	lr, r8
 743 0004 00B5     		push	{lr}
 744              		.cfi_def_cfa_offset 24
 745              		.cfi_offset 8, -24
 746 0006 84B0     		sub	sp, sp, #16
 747              		.cfi_def_cfa_offset 40
 194:Core/Src/main.c ****   uint8_t upper = word >> 8;
 748              		.loc 1 194 3 is_stmt 1 view .LVU194
 194:Core/Src/main.c ****   uint8_t upper = word >> 8;
 749              		.loc 1 194 11 is_stmt 0 view .LVU195
 750 0008 0F23     		movs	r3, #15
 751 000a 6B44     		add	r3, r3, sp
 752 000c 9846     		mov	r8, r3
 753 000e 1870     		strb	r0, [r3]
 195:Core/Src/main.c ****   uint8_t zero = 0;
 754              		.loc 1 195 3 is_stmt 1 view .LVU196
 195:Core/Src/main.c ****   uint8_t zero = 0;
 755              		.loc 1 195 11 is_stmt 0 view .LVU197
 756 0010 0E21     		movs	r1, #14
 757 0012 6944     		add	r1, r1, sp
 758 0014 000A     		lsrs	r0, r0, #8
 759              	.LVL39:
 195:Core/Src/main.c ****   uint8_t zero = 0;
 760              		.loc 1 195 11 view .LVU198
 761 0016 0870     		strb	r0, [r1]
 196:Core/Src/main.c ****   uint8_t recv[3];
 762              		.loc 1 196 3 is_stmt 1 view .LVU199
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 30


 196:Core/Src/main.c ****   uint8_t recv[3];
 763              		.loc 1 196 11 is_stmt 0 view .LVU200
 764 0018 0D27     		movs	r7, #13
 765 001a 6F44     		add	r7, r7, sp
 766 001c 0026     		movs	r6, #0
 767 001e 3E70     		strb	r6, [r7]
 197:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &upper, recv, 1, 0.1); // CMD
 768              		.loc 1 197 3 is_stmt 1 view .LVU201
 198:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &lower, recv+1, 1, 0.1);
 769              		.loc 1 198 3 view .LVU202
 770 0020 02AC     		add	r4, sp, #8
 771 0022 114D     		ldr	r5, .L31
 772 0024 0096     		str	r6, [sp]
 773 0026 0123     		movs	r3, #1
 774 0028 2200     		movs	r2, r4
 775 002a 2800     		movs	r0, r5
 776 002c FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 777              	.LVL40:
 199:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &zero, recv+2, 1, 0.1);
 778              		.loc 1 199 3 view .LVU203
 779 0030 0096     		str	r6, [sp]
 780 0032 0123     		movs	r3, #1
 781 0034 0922     		movs	r2, #9
 782 0036 6A44     		add	r2, r2, sp
 783 0038 4146     		mov	r1, r8
 784 003a 2800     		movs	r0, r5
 785 003c FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 786              	.LVL41:
 200:Core/Src/main.c ****   return (recv[0] << 16) | (recv[1] << 8) | recv[2];
 787              		.loc 1 200 3 view .LVU204
 788 0040 0096     		str	r6, [sp]
 789 0042 0123     		movs	r3, #1
 790 0044 0A22     		movs	r2, #10
 791 0046 6A44     		add	r2, r2, sp
 792 0048 3900     		movs	r1, r7
 793 004a 2800     		movs	r0, r5
 794 004c FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 795              	.LVL42:
 201:Core/Src/main.c **** }
 796              		.loc 1 201 3 view .LVU205
 201:Core/Src/main.c **** }
 797              		.loc 1 201 15 is_stmt 0 view .LVU206
 798 0050 2078     		ldrb	r0, [r4]
 201:Core/Src/main.c **** }
 799              		.loc 1 201 19 view .LVU207
 800 0052 0004     		lsls	r0, r0, #16
 201:Core/Src/main.c **** }
 801              		.loc 1 201 33 view .LVU208
 802 0054 6378     		ldrb	r3, [r4, #1]
 201:Core/Src/main.c **** }
 803              		.loc 1 201 37 view .LVU209
 804 0056 1B02     		lsls	r3, r3, #8
 201:Core/Src/main.c **** }
 805              		.loc 1 201 26 view .LVU210
 806 0058 1843     		orrs	r0, r3
 201:Core/Src/main.c **** }
 807              		.loc 1 201 49 view .LVU211
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 31


 808 005a A378     		ldrb	r3, [r4, #2]
 201:Core/Src/main.c **** }
 809              		.loc 1 201 43 view .LVU212
 810 005c 1843     		orrs	r0, r3
 202:Core/Src/main.c **** 
 811              		.loc 1 202 1 view .LVU213
 812 005e 04B0     		add	sp, sp, #16
 813              		@ sp needed
 814 0060 80BC     		pop	{r7}
 815 0062 B846     		mov	r8, r7
 816 0064 F0BD     		pop	{r4, r5, r6, r7, pc}
 817              	.L32:
 818 0066 C046     		.align	2
 819              	.L31:
 820 0068 00000000 		.word	hspi1
 821              		.cfi_endproc
 822              	.LFE47:
 824              		.section	.text.ads131m04_transfer_frame,"ax",%progbits
 825              		.align	1
 826              		.global	ads131m04_transfer_frame
 827              		.syntax unified
 828              		.code	16
 829              		.thumb_func
 831              	ads131m04_transfer_frame:
 832              	.LVL43:
 833              	.LFB48:
 204:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 834              		.loc 1 204 85 is_stmt 1 view -0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 0, uses_anonymous_args = 0
 204:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 838              		.loc 1 204 85 is_stmt 0 view .LVU215
 839 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 840              		.cfi_def_cfa_offset 24
 841              		.cfi_offset 3, -24
 842              		.cfi_offset 4, -20
 843              		.cfi_offset 5, -16
 844              		.cfi_offset 6, -12
 845              		.cfi_offset 7, -8
 846              		.cfi_offset 14, -4
 847 0002 0700     		movs	r7, r0
 848 0004 0E00     		movs	r6, r1
 205:Core/Src/main.c ****   
 849              		.loc 1 205 3 is_stmt 1 view .LVU216
 850 0006 9020     		movs	r0, #144
 851              	.LVL44:
 205:Core/Src/main.c ****   
 852              		.loc 1 205 3 is_stmt 0 view .LVU217
 853 0008 0022     		movs	r2, #0
 854              	.LVL45:
 205:Core/Src/main.c ****   
 855              		.loc 1 205 3 view .LVU218
 856 000a 1021     		movs	r1, #16
 857              	.LVL46:
 205:Core/Src/main.c ****   
 858              		.loc 1 205 3 view .LVU219
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 32


 859 000c C005     		lsls	r0, r0, #23
 860 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 861              	.LVL47:
 207:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 862              		.loc 1 207 3 is_stmt 1 view .LVU220
 863              	.LBB8:
 207:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 864              		.loc 1 207 8 view .LVU221
 207:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 865              		.loc 1 207 16 is_stmt 0 view .LVU222
 866 0012 0024     		movs	r4, #0
 207:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 867              		.loc 1 207 3 view .LVU223
 868 0014 08E0     		b	.L34
 869              	.LVL48:
 870              	.L35:
 208:Core/Src/main.c ****   }
 871              		.loc 1 208 5 is_stmt 1 discriminator 3 view .LVU224
 208:Core/Src/main.c ****   }
 872              		.loc 1 208 43 is_stmt 0 discriminator 3 view .LVU225
 873 0016 6300     		lsls	r3, r4, #1
 208:Core/Src/main.c ****   }
 874              		.loc 1 208 8 discriminator 3 view .LVU226
 875 0018 A500     		lsls	r5, r4, #2
 876 001a 7D19     		adds	r5, r7, r5
 208:Core/Src/main.c ****   }
 877              		.loc 1 208 14 discriminator 3 view .LVU227
 878 001c F05A     		ldrh	r0, [r6, r3]
 879 001e FFF7FEFF 		bl	ads131m04_transfer_word
 880              	.LVL49:
 208:Core/Src/main.c ****   }
 881              		.loc 1 208 12 discriminator 3 view .LVU228
 882 0022 2860     		str	r0, [r5]
 207:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 883              		.loc 1 207 31 is_stmt 1 discriminator 3 view .LVU229
 884 0024 0134     		adds	r4, r4, #1
 885              	.LVL50:
 207:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 886              		.loc 1 207 31 is_stmt 0 discriminator 3 view .LVU230
 887 0026 E4B2     		uxtb	r4, r4
 888              	.LVL51:
 889              	.L34:
 207:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 890              		.loc 1 207 25 is_stmt 1 discriminator 1 view .LVU231
 891 0028 052C     		cmp	r4, #5
 892 002a F4D9     		bls	.L35
 893              	.LBE8:
 211:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 894              		.loc 1 211 3 view .LVU232
 895 002c 0420     		movs	r0, #4
 896 002e FFF7FEFF 		bl	delay_us
 897              	.LVL52:
 212:Core/Src/main.c **** }
 898              		.loc 1 212 3 view .LVU233
 899 0032 9020     		movs	r0, #144
 900 0034 0122     		movs	r2, #1
 901 0036 1021     		movs	r1, #16
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 33


 902 0038 C005     		lsls	r0, r0, #23
 903 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 904              	.LVL53:
 213:Core/Src/main.c **** 
 905              		.loc 1 213 1 is_stmt 0 view .LVU234
 906              		@ sp needed
 907              	.LVL54:
 908              	.LVL55:
 909              	.LVL56:
 213:Core/Src/main.c **** 
 910              		.loc 1 213 1 view .LVU235
 911 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 912              		.cfi_endproc
 913              	.LFE48:
 915              		.section	.text.ads131m04_adc_format_convert,"ax",%progbits
 916              		.align	1
 917              		.global	ads131m04_adc_format_convert
 918              		.syntax unified
 919              		.code	16
 920              		.thumb_func
 922              	ads131m04_adc_format_convert:
 923              	.LVL57:
 924              	.LFB49:
 215:Core/Src/main.c ****   return ((data & 0x800000) ? -0x800000 : 0x000000) + (data & 0x7FFFFF);
 925              		.loc 1 215 51 is_stmt 1 view -0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 0
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929              		@ link register save eliminated.
 216:Core/Src/main.c **** }
 930              		.loc 1 216 3 view .LVU237
 216:Core/Src/main.c **** }
 931              		.loc 1 216 17 is_stmt 0 view .LVU238
 932 0000 8023     		movs	r3, #128
 933 0002 1B04     		lsls	r3, r3, #16
 934 0004 0200     		movs	r2, r0
 935 0006 1A40     		ands	r2, r3
 216:Core/Src/main.c **** }
 936              		.loc 1 216 41 view .LVU239
 937 0008 1842     		tst	r0, r3
 938 000a 00D0     		beq	.L37
 939 000c 024A     		ldr	r2, .L38
 940              	.L37:
 216:Core/Src/main.c **** }
 941              		.loc 1 216 61 discriminator 4 view .LVU240
 942 000e 4002     		lsls	r0, r0, #9
 943              	.LVL58:
 216:Core/Src/main.c **** }
 944              		.loc 1 216 61 discriminator 4 view .LVU241
 945 0010 400A     		lsrs	r0, r0, #9
 216:Core/Src/main.c **** }
 946              		.loc 1 216 53 discriminator 4 view .LVU242
 947 0012 8018     		adds	r0, r0, r2
 217:Core/Src/main.c **** 
 948              		.loc 1 217 1 discriminator 4 view .LVU243
 949              		@ sp needed
 950 0014 7047     		bx	lr
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 34


 951              	.L39:
 952 0016 C046     		.align	2
 953              	.L38:
 954 0018 000080FF 		.word	-8388608
 955              		.cfi_endproc
 956              	.LFE49:
 958              		.section	.text.ads131m04_read_adc_nonblocking,"ax",%progbits
 959              		.align	1
 960              		.global	ads131m04_read_adc_nonblocking
 961              		.syntax unified
 962              		.code	16
 963              		.thumb_func
 965              	ads131m04_read_adc_nonblocking:
 966              	.LVL59:
 967              	.LFB50:
 219:Core/Src/main.c ****   uint32_t recv[12];
 968              		.loc 1 219 51 is_stmt 1 view -0
 969              		.cfi_startproc
 970              		@ args = 0, pretend = 0, frame = 64
 971              		@ frame_needed = 0, uses_anonymous_args = 0
 219:Core/Src/main.c ****   uint32_t recv[12];
 972              		.loc 1 219 51 is_stmt 0 view .LVU245
 973 0000 10B5     		push	{r4, lr}
 974              		.cfi_def_cfa_offset 8
 975              		.cfi_offset 4, -8
 976              		.cfi_offset 14, -4
 977 0002 90B0     		sub	sp, sp, #64
 978              		.cfi_def_cfa_offset 72
 979 0004 0400     		movs	r4, r0
 220:Core/Src/main.c ****   uint16_t words[6] = {0, 0, 0, 0, 0, 0};
 980              		.loc 1 220 3 is_stmt 1 view .LVU246
 221:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 981              		.loc 1 221 3 view .LVU247
 221:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 982              		.loc 1 221 12 is_stmt 0 view .LVU248
 983 0006 0C22     		movs	r2, #12
 984 0008 0021     		movs	r1, #0
 985 000a 01A8     		add	r0, sp, #4
 986              	.LVL60:
 221:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 987              		.loc 1 221 12 view .LVU249
 988 000c FFF7FEFF 		bl	memset
 989              	.LVL61:
 222:Core/Src/main.c ****   out[0] = ads131m04_adc_format_convert(recv[1]);
 990              		.loc 1 222 3 is_stmt 1 view .LVU250
 991 0010 0022     		movs	r2, #0
 992 0012 01A9     		add	r1, sp, #4
 993 0014 04A8     		add	r0, sp, #16
 994 0016 FFF7FEFF 		bl	ads131m04_transfer_frame
 995              	.LVL62:
 223:Core/Src/main.c ****   out[1] = ads131m04_adc_format_convert(recv[2]);
 996              		.loc 1 223 3 view .LVU251
 223:Core/Src/main.c ****   out[1] = ads131m04_adc_format_convert(recv[2]);
 997              		.loc 1 223 45 is_stmt 0 view .LVU252
 998 001a 0598     		ldr	r0, [sp, #20]
 223:Core/Src/main.c ****   out[1] = ads131m04_adc_format_convert(recv[2]);
 999              		.loc 1 223 12 view .LVU253
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 35


 1000 001c FFF7FEFF 		bl	ads131m04_adc_format_convert
 1001              	.LVL63:
 223:Core/Src/main.c ****   out[1] = ads131m04_adc_format_convert(recv[2]);
 1002              		.loc 1 223 10 view .LVU254
 1003 0020 2060     		str	r0, [r4]
 224:Core/Src/main.c ****   out[2] = ads131m04_adc_format_convert(recv[3]);
 1004              		.loc 1 224 3 is_stmt 1 view .LVU255
 224:Core/Src/main.c ****   out[2] = ads131m04_adc_format_convert(recv[3]);
 1005              		.loc 1 224 45 is_stmt 0 view .LVU256
 1006 0022 0698     		ldr	r0, [sp, #24]
 224:Core/Src/main.c ****   out[2] = ads131m04_adc_format_convert(recv[3]);
 1007              		.loc 1 224 12 view .LVU257
 1008 0024 FFF7FEFF 		bl	ads131m04_adc_format_convert
 1009              	.LVL64:
 224:Core/Src/main.c ****   out[2] = ads131m04_adc_format_convert(recv[3]);
 1010              		.loc 1 224 10 view .LVU258
 1011 0028 6060     		str	r0, [r4, #4]
 225:Core/Src/main.c ****   out[3] = ads131m04_adc_format_convert(recv[4]);
 1012              		.loc 1 225 3 is_stmt 1 view .LVU259
 225:Core/Src/main.c ****   out[3] = ads131m04_adc_format_convert(recv[4]);
 1013              		.loc 1 225 45 is_stmt 0 view .LVU260
 1014 002a 0798     		ldr	r0, [sp, #28]
 225:Core/Src/main.c ****   out[3] = ads131m04_adc_format_convert(recv[4]);
 1015              		.loc 1 225 12 view .LVU261
 1016 002c FFF7FEFF 		bl	ads131m04_adc_format_convert
 1017              	.LVL65:
 225:Core/Src/main.c ****   out[3] = ads131m04_adc_format_convert(recv[4]);
 1018              		.loc 1 225 10 view .LVU262
 1019 0030 A060     		str	r0, [r4, #8]
 226:Core/Src/main.c **** }
 1020              		.loc 1 226 3 is_stmt 1 view .LVU263
 226:Core/Src/main.c **** }
 1021              		.loc 1 226 45 is_stmt 0 view .LVU264
 1022 0032 0898     		ldr	r0, [sp, #32]
 226:Core/Src/main.c **** }
 1023              		.loc 1 226 12 view .LVU265
 1024 0034 FFF7FEFF 		bl	ads131m04_adc_format_convert
 1025              	.LVL66:
 226:Core/Src/main.c **** }
 1026              		.loc 1 226 10 view .LVU266
 1027 0038 E060     		str	r0, [r4, #12]
 227:Core/Src/main.c **** 
 1028              		.loc 1 227 1 view .LVU267
 1029 003a 10B0     		add	sp, sp, #64
 1030              		@ sp needed
 1031              	.LVL67:
 227:Core/Src/main.c **** 
 1032              		.loc 1 227 1 view .LVU268
 1033 003c 10BD     		pop	{r4, pc}
 1034              		.cfi_endproc
 1035              	.LFE50:
 1037              		.section	.text.ads131m04_drdy_exti_handler,"ax",%progbits
 1038              		.align	1
 1039              		.global	ads131m04_drdy_exti_handler
 1040              		.syntax unified
 1041              		.code	16
 1042              		.thumb_func
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 36


 1044              	ads131m04_drdy_exti_handler:
 1045              	.LFB51:
 229:Core/Src/main.c ****   if (adc_configured)
 1046              		.loc 1 229 36 is_stmt 1 view -0
 1047              		.cfi_startproc
 1048              		@ args = 0, pretend = 0, frame = 0
 1049              		@ frame_needed = 0, uses_anonymous_args = 0
 1050 0000 10B5     		push	{r4, lr}
 1051              		.cfi_def_cfa_offset 8
 1052              		.cfi_offset 4, -8
 1053              		.cfi_offset 14, -4
 230:Core/Src/main.c ****     ads131m04_read_adc_nonblocking(adc_data);
 1054              		.loc 1 230 3 view .LVU270
 230:Core/Src/main.c ****     ads131m04_read_adc_nonblocking(adc_data);
 1055              		.loc 1 230 7 is_stmt 0 view .LVU271
 1056 0002 044B     		ldr	r3, .L44
 1057 0004 1B78     		ldrb	r3, [r3]
 230:Core/Src/main.c ****     ads131m04_read_adc_nonblocking(adc_data);
 1058              		.loc 1 230 6 view .LVU272
 1059 0006 002B     		cmp	r3, #0
 1060 0008 00D1     		bne	.L43
 1061              	.L41:
 232:Core/Src/main.c **** 
 1062              		.loc 1 232 1 view .LVU273
 1063              		@ sp needed
 1064 000a 10BD     		pop	{r4, pc}
 1065              	.L43:
 231:Core/Src/main.c **** }
 1066              		.loc 1 231 5 is_stmt 1 view .LVU274
 1067 000c 0248     		ldr	r0, .L44+4
 1068 000e FFF7FEFF 		bl	ads131m04_read_adc_nonblocking
 1069              	.LVL68:
 232:Core/Src/main.c **** 
 1070              		.loc 1 232 1 is_stmt 0 view .LVU275
 1071 0012 FAE7     		b	.L41
 1072              	.L45:
 1073              		.align	2
 1074              	.L44:
 1075 0014 00000000 		.word	adc_configured
 1076 0018 00000000 		.word	adc_data
 1077              		.cfi_endproc
 1078              	.LFE51:
 1080              		.section	.text.ads131m04_cmd,"ax",%progbits
 1081              		.align	1
 1082              		.global	ads131m04_cmd
 1083              		.syntax unified
 1084              		.code	16
 1085              		.thumb_func
 1087              	ads131m04_cmd:
 1088              	.LVL69:
 1089              	.LFB52:
 234:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1090              		.loc 1 234 71 is_stmt 1 view -0
 1091              		.cfi_startproc
 1092              		@ args = 0, pretend = 0, frame = 24
 1093              		@ frame_needed = 0, uses_anonymous_args = 0
 234:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 37


 1094              		.loc 1 234 71 is_stmt 0 view .LVU277
 1095 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1096              		.cfi_def_cfa_offset 20
 1097              		.cfi_offset 4, -20
 1098              		.cfi_offset 5, -16
 1099              		.cfi_offset 6, -12
 1100              		.cfi_offset 7, -8
 1101              		.cfi_offset 14, -4
 1102 0002 87B0     		sub	sp, sp, #28
 1103              		.cfi_def_cfa_offset 48
 1104 0004 0700     		movs	r7, r0
 1105 0006 0D00     		movs	r5, r1
 1106 0008 1600     		movs	r6, r2
 235:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 1107              		.loc 1 235 3 is_stmt 1 view .LVU278
 1108 000a 0620     		movs	r0, #6
 1109              	.LVL70:
 235:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 1110              		.loc 1 235 3 is_stmt 0 view .LVU279
 1111 000c FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1112              	.LVL71:
 236:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 1113              		.loc 1 236 3 is_stmt 1 view .LVU280
 236:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 1114              		.loc 1 236 12 is_stmt 0 view .LVU281
 1115 0010 03AC     		add	r4, sp, #12
 1116 0012 2780     		strh	r7, [r4]
 1117 0014 0023     		movs	r3, #0
 1118 0016 6380     		strh	r3, [r4, #2]
 1119 0018 A380     		strh	r3, [r4, #4]
 1120 001a E380     		strh	r3, [r4, #6]
 1121 001c 2381     		strh	r3, [r4, #8]
 1122 001e 6381     		strh	r3, [r4, #10]
 237:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, tx_rx_delay);
 1123              		.loc 1 237 3 is_stmt 1 view .LVU282
 237:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, tx_rx_delay);
 1124              		.loc 1 237 12 is_stmt 0 view .LVU283
 1125 0020 0C22     		movs	r2, #12
 1126 0022 0021     		movs	r1, #0
 1127 0024 6846     		mov	r0, sp
 1128 0026 FFF7FEFF 		bl	memset
 1129              	.LVL72:
 238:Core/Src/main.c ****   ads131m04_transfer_frame(out+6, zeros, 0);
 1130              		.loc 1 238 3 is_stmt 1 view .LVU284
 1131 002a 3200     		movs	r2, r6
 1132 002c 2100     		movs	r1, r4
 1133 002e 2800     		movs	r0, r5
 1134 0030 FFF7FEFF 		bl	ads131m04_transfer_frame
 1135              	.LVL73:
 239:Core/Src/main.c ****   if (tx_rx_delay) delay_us(tx_rx_delay); 
 1136              		.loc 1 239 3 view .LVU285
 1137 0034 2800     		movs	r0, r5
 1138 0036 1830     		adds	r0, r0, #24
 1139 0038 0022     		movs	r2, #0
 1140 003a 6946     		mov	r1, sp
 1141 003c FFF7FEFF 		bl	ads131m04_transfer_frame
 1142              	.LVL74:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 38


 240:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 1143              		.loc 1 240 3 view .LVU286
 240:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 1144              		.loc 1 240 6 is_stmt 0 view .LVU287
 1145 0040 002E     		cmp	r6, #0
 1146 0042 04D1     		bne	.L48
 1147              	.L47:
 241:Core/Src/main.c **** }
 1148              		.loc 1 241 3 is_stmt 1 view .LVU288
 1149 0044 0620     		movs	r0, #6
 1150 0046 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1151              	.LVL75:
 242:Core/Src/main.c **** 
 1152              		.loc 1 242 1 is_stmt 0 view .LVU289
 1153 004a 07B0     		add	sp, sp, #28
 1154              		@ sp needed
 1155              	.LVL76:
 242:Core/Src/main.c **** 
 1156              		.loc 1 242 1 view .LVU290
 1157 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 1158              	.LVL77:
 1159              	.L48:
 240:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 1160              		.loc 1 240 20 is_stmt 1 discriminator 1 view .LVU291
 1161 004e 3000     		movs	r0, r6
 1162 0050 FFF7FEFF 		bl	delay_us
 1163              	.LVL78:
 1164 0054 F6E7     		b	.L47
 1165              		.cfi_endproc
 1166              	.LFE52:
 1168              		.section	.text.ads131m04_reset,"ax",%progbits
 1169              		.align	1
 1170              		.global	ads131m04_reset
 1171              		.syntax unified
 1172              		.code	16
 1173              		.thumb_func
 1175              	ads131m04_reset:
 1176              	.LFB53:
 244:Core/Src/main.c ****     uint32_t recv[12];
 1177              		.loc 1 244 28 view -0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 48
 1180              		@ frame_needed = 0, uses_anonymous_args = 0
 1181 0000 00B5     		push	{lr}
 1182              		.cfi_def_cfa_offset 4
 1183              		.cfi_offset 14, -4
 1184 0002 8DB0     		sub	sp, sp, #52
 1185              		.cfi_def_cfa_offset 56
 245:Core/Src/main.c ****     ads131m04_cmd(0x0011, recv, 12); // reset time
 1186              		.loc 1 245 5 view .LVU293
 246:Core/Src/main.c ****     return recv[9];
 1187              		.loc 1 246 5 view .LVU294
 1188 0004 0C22     		movs	r2, #12
 1189 0006 6946     		mov	r1, sp
 1190 0008 1120     		movs	r0, #17
 1191 000a FFF7FEFF 		bl	ads131m04_cmd
 1192              	.LVL79:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 39


 247:Core/Src/main.c **** }
 1193              		.loc 1 247 5 view .LVU295
 247:Core/Src/main.c **** }
 1194              		.loc 1 247 16 is_stmt 0 view .LVU296
 1195 000e 6B46     		mov	r3, sp
 1196 0010 988C     		ldrh	r0, [r3, #36]
 248:Core/Src/main.c **** 
 1197              		.loc 1 248 1 view .LVU297
 1198 0012 0DB0     		add	sp, sp, #52
 1199              		@ sp needed
 1200 0014 00BD     		pop	{pc}
 1201              		.cfi_endproc
 1202              	.LFE53:
 1204              		.section	.text.ads131m04_status,"ax",%progbits
 1205              		.align	1
 1206              		.global	ads131m04_status
 1207              		.syntax unified
 1208              		.code	16
 1209              		.thumb_func
 1211              	ads131m04_status:
 1212              	.LFB54:
 250:Core/Src/main.c ****     uint32_t recv[12];
 1213              		.loc 1 250 29 is_stmt 1 view -0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 48
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 1217 0000 00B5     		push	{lr}
 1218              		.cfi_def_cfa_offset 4
 1219              		.cfi_offset 14, -4
 1220 0002 8DB0     		sub	sp, sp, #52
 1221              		.cfi_def_cfa_offset 56
 251:Core/Src/main.c ****     ads131m04_cmd(0x0000, recv, 0);
 1222              		.loc 1 251 5 view .LVU299
 252:Core/Src/main.c ****     return recv[6] >> 8;
 1223              		.loc 1 252 5 view .LVU300
 1224 0004 0022     		movs	r2, #0
 1225 0006 6946     		mov	r1, sp
 1226 0008 0020     		movs	r0, #0
 1227 000a FFF7FEFF 		bl	ads131m04_cmd
 1228              	.LVL80:
 253:Core/Src/main.c **** }
 1229              		.loc 1 253 5 view .LVU301
 253:Core/Src/main.c **** }
 1230              		.loc 1 253 16 is_stmt 0 view .LVU302
 1231 000e 0698     		ldr	r0, [sp, #24]
 253:Core/Src/main.c **** }
 1232              		.loc 1 253 20 view .LVU303
 1233 0010 000A     		lsrs	r0, r0, #8
 1234 0012 80B2     		uxth	r0, r0
 254:Core/Src/main.c **** 
 1235              		.loc 1 254 1 view .LVU304
 1236 0014 0DB0     		add	sp, sp, #52
 1237              		@ sp needed
 1238 0016 00BD     		pop	{pc}
 1239              		.cfi_endproc
 1240              	.LFE54:
 1242              		.section	.text.ads131m04_standby,"ax",%progbits
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 40


 1243              		.align	1
 1244              		.global	ads131m04_standby
 1245              		.syntax unified
 1246              		.code	16
 1247              		.thumb_func
 1249              	ads131m04_standby:
 1250              	.LFB55:
 256:Core/Src/main.c ****     uint32_t recv[12];
 1251              		.loc 1 256 30 is_stmt 1 view -0
 1252              		.cfi_startproc
 1253              		@ args = 0, pretend = 0, frame = 48
 1254              		@ frame_needed = 0, uses_anonymous_args = 0
 1255 0000 00B5     		push	{lr}
 1256              		.cfi_def_cfa_offset 4
 1257              		.cfi_offset 14, -4
 1258 0002 8DB0     		sub	sp, sp, #52
 1259              		.cfi_def_cfa_offset 56
 257:Core/Src/main.c ****     ads131m04_cmd(0x0022, recv, 0);
 1260              		.loc 1 257 5 view .LVU306
 258:Core/Src/main.c ****     return recv[6] >> 8;
 1261              		.loc 1 258 5 view .LVU307
 1262 0004 0022     		movs	r2, #0
 1263 0006 6946     		mov	r1, sp
 1264 0008 2220     		movs	r0, #34
 1265 000a FFF7FEFF 		bl	ads131m04_cmd
 1266              	.LVL81:
 259:Core/Src/main.c **** }
 1267              		.loc 1 259 5 view .LVU308
 259:Core/Src/main.c **** }
 1268              		.loc 1 259 16 is_stmt 0 view .LVU309
 1269 000e 0698     		ldr	r0, [sp, #24]
 259:Core/Src/main.c **** }
 1270              		.loc 1 259 20 view .LVU310
 1271 0010 000A     		lsrs	r0, r0, #8
 1272 0012 80B2     		uxth	r0, r0
 260:Core/Src/main.c **** 
 1273              		.loc 1 260 1 view .LVU311
 1274 0014 0DB0     		add	sp, sp, #52
 1275              		@ sp needed
 1276 0016 00BD     		pop	{pc}
 1277              		.cfi_endproc
 1278              	.LFE55:
 1280              		.section	.text.ads131m04_wake,"ax",%progbits
 1281              		.align	1
 1282              		.global	ads131m04_wake
 1283              		.syntax unified
 1284              		.code	16
 1285              		.thumb_func
 1287              	ads131m04_wake:
 1288              	.LFB56:
 262:Core/Src/main.c ****     uint32_t recv[12];
 1289              		.loc 1 262 27 is_stmt 1 view -0
 1290              		.cfi_startproc
 1291              		@ args = 0, pretend = 0, frame = 48
 1292              		@ frame_needed = 0, uses_anonymous_args = 0
 1293 0000 00B5     		push	{lr}
 1294              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 41


 1295              		.cfi_offset 14, -4
 1296 0002 8DB0     		sub	sp, sp, #52
 1297              		.cfi_def_cfa_offset 56
 263:Core/Src/main.c ****     ads131m04_cmd(0x0033, recv, 0);
 1298              		.loc 1 263 5 view .LVU313
 264:Core/Src/main.c ****     return recv[6] >> 8;
 1299              		.loc 1 264 5 view .LVU314
 1300 0004 0022     		movs	r2, #0
 1301 0006 6946     		mov	r1, sp
 1302 0008 3320     		movs	r0, #51
 1303 000a FFF7FEFF 		bl	ads131m04_cmd
 1304              	.LVL82:
 265:Core/Src/main.c **** }
 1305              		.loc 1 265 5 view .LVU315
 265:Core/Src/main.c **** }
 1306              		.loc 1 265 16 is_stmt 0 view .LVU316
 1307 000e 0698     		ldr	r0, [sp, #24]
 265:Core/Src/main.c **** }
 1308              		.loc 1 265 20 view .LVU317
 1309 0010 000A     		lsrs	r0, r0, #8
 1310 0012 80B2     		uxth	r0, r0
 266:Core/Src/main.c **** 
 1311              		.loc 1 266 1 view .LVU318
 1312 0014 0DB0     		add	sp, sp, #52
 1313              		@ sp needed
 1314 0016 00BD     		pop	{pc}
 1315              		.cfi_endproc
 1316              	.LFE56:
 1318              		.section	.text.ads131m04_lock,"ax",%progbits
 1319              		.align	1
 1320              		.global	ads131m04_lock
 1321              		.syntax unified
 1322              		.code	16
 1323              		.thumb_func
 1325              	ads131m04_lock:
 1326              	.LFB57:
 268:Core/Src/main.c ****     uint32_t recv[12];
 1327              		.loc 1 268 27 is_stmt 1 view -0
 1328              		.cfi_startproc
 1329              		@ args = 0, pretend = 0, frame = 48
 1330              		@ frame_needed = 0, uses_anonymous_args = 0
 1331 0000 00B5     		push	{lr}
 1332              		.cfi_def_cfa_offset 4
 1333              		.cfi_offset 14, -4
 1334 0002 8DB0     		sub	sp, sp, #52
 1335              		.cfi_def_cfa_offset 56
 269:Core/Src/main.c ****     ads131m04_cmd(0x0555, recv, 0);
 1336              		.loc 1 269 5 view .LVU320
 270:Core/Src/main.c ****     return recv[6] >> 8;
 1337              		.loc 1 270 5 view .LVU321
 1338 0004 0022     		movs	r2, #0
 1339 0006 6946     		mov	r1, sp
 1340 0008 0348     		ldr	r0, .L54
 1341 000a FFF7FEFF 		bl	ads131m04_cmd
 1342              	.LVL83:
 271:Core/Src/main.c **** }
 1343              		.loc 1 271 5 view .LVU322
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 42


 271:Core/Src/main.c **** }
 1344              		.loc 1 271 16 is_stmt 0 view .LVU323
 1345 000e 0698     		ldr	r0, [sp, #24]
 271:Core/Src/main.c **** }
 1346              		.loc 1 271 20 view .LVU324
 1347 0010 000A     		lsrs	r0, r0, #8
 1348 0012 80B2     		uxth	r0, r0
 272:Core/Src/main.c **** 
 1349              		.loc 1 272 1 view .LVU325
 1350 0014 0DB0     		add	sp, sp, #52
 1351              		@ sp needed
 1352 0016 00BD     		pop	{pc}
 1353              	.L55:
 1354              		.align	2
 1355              	.L54:
 1356 0018 55050000 		.word	1365
 1357              		.cfi_endproc
 1358              	.LFE57:
 1360              		.section	.text.ads131m04_unlock,"ax",%progbits
 1361              		.align	1
 1362              		.global	ads131m04_unlock
 1363              		.syntax unified
 1364              		.code	16
 1365              		.thumb_func
 1367              	ads131m04_unlock:
 1368              	.LFB58:
 274:Core/Src/main.c ****     uint32_t recv[12];
 1369              		.loc 1 274 29 is_stmt 1 view -0
 1370              		.cfi_startproc
 1371              		@ args = 0, pretend = 0, frame = 48
 1372              		@ frame_needed = 0, uses_anonymous_args = 0
 1373 0000 00B5     		push	{lr}
 1374              		.cfi_def_cfa_offset 4
 1375              		.cfi_offset 14, -4
 1376 0002 8DB0     		sub	sp, sp, #52
 1377              		.cfi_def_cfa_offset 56
 275:Core/Src/main.c ****     ads131m04_cmd(0x0655, recv, 0);
 1378              		.loc 1 275 5 view .LVU327
 276:Core/Src/main.c ****     return recv[6] >> 8;
 1379              		.loc 1 276 5 view .LVU328
 1380 0004 0022     		movs	r2, #0
 1381 0006 6946     		mov	r1, sp
 1382 0008 0348     		ldr	r0, .L57
 1383 000a FFF7FEFF 		bl	ads131m04_cmd
 1384              	.LVL84:
 277:Core/Src/main.c **** }
 1385              		.loc 1 277 5 view .LVU329
 277:Core/Src/main.c **** }
 1386              		.loc 1 277 16 is_stmt 0 view .LVU330
 1387 000e 0698     		ldr	r0, [sp, #24]
 277:Core/Src/main.c **** }
 1388              		.loc 1 277 20 view .LVU331
 1389 0010 000A     		lsrs	r0, r0, #8
 1390 0012 80B2     		uxth	r0, r0
 278:Core/Src/main.c **** 
 1391              		.loc 1 278 1 view .LVU332
 1392 0014 0DB0     		add	sp, sp, #52
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 43


 1393              		@ sp needed
 1394 0016 00BD     		pop	{pc}
 1395              	.L58:
 1396              		.align	2
 1397              	.L57:
 1398 0018 55060000 		.word	1621
 1399              		.cfi_endproc
 1400              	.LFE58:
 1402              		.section	.text.ads131m04_rreg,"ax",%progbits
 1403              		.align	1
 1404              		.global	ads131m04_rreg
 1405              		.syntax unified
 1406              		.code	16
 1407              		.thumb_func
 1409              	ads131m04_rreg:
 1410              	.LVL85:
 1411              	.LFB59:
 281:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((reg & 0x3F) << 7);
 1412              		.loc 1 281 38 is_stmt 1 view -0
 1413              		.cfi_startproc
 1414              		@ args = 0, pretend = 0, frame = 48
 1415              		@ frame_needed = 0, uses_anonymous_args = 0
 281:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((reg & 0x3F) << 7);
 1416              		.loc 1 281 38 is_stmt 0 view .LVU334
 1417 0000 00B5     		push	{lr}
 1418              		.cfi_def_cfa_offset 4
 1419              		.cfi_offset 14, -4
 1420 0002 8DB0     		sub	sp, sp, #52
 1421              		.cfi_def_cfa_offset 56
 282:Core/Src/main.c ****     uint32_t recv[12];
 1422              		.loc 1 282 5 is_stmt 1 view .LVU335
 282:Core/Src/main.c ****     uint32_t recv[12];
 1423              		.loc 1 282 43 is_stmt 0 view .LVU336
 1424 0004 C301     		lsls	r3, r0, #7
 1425 0006 FC22     		movs	r2, #252
 1426 0008 5201     		lsls	r2, r2, #5
 1427 000a 1340     		ands	r3, r2
 282:Core/Src/main.c ****     uint32_t recv[12];
 1428              		.loc 1 282 27 view .LVU337
 1429 000c 0548     		ldr	r0, .L60
 1430              	.LVL86:
 282:Core/Src/main.c ****     uint32_t recv[12];
 1431              		.loc 1 282 27 view .LVU338
 1432 000e 1843     		orrs	r0, r3
 282:Core/Src/main.c ****     uint32_t recv[12];
 1433              		.loc 1 282 14 view .LVU339
 1434 0010 80B2     		uxth	r0, r0
 1435              	.LVL87:
 283:Core/Src/main.c ****     ads131m04_cmd(cmd, recv, 0);
 1436              		.loc 1 283 5 is_stmt 1 view .LVU340
 284:Core/Src/main.c ****     return recv[6] >> 8;
 1437              		.loc 1 284 5 view .LVU341
 1438 0012 0022     		movs	r2, #0
 1439 0014 6946     		mov	r1, sp
 1440 0016 FFF7FEFF 		bl	ads131m04_cmd
 1441              	.LVL88:
 285:Core/Src/main.c **** }
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 44


 1442              		.loc 1 285 5 view .LVU342
 285:Core/Src/main.c **** }
 1443              		.loc 1 285 16 is_stmt 0 view .LVU343
 1444 001a 0698     		ldr	r0, [sp, #24]
 285:Core/Src/main.c **** }
 1445              		.loc 1 285 20 view .LVU344
 1446 001c 000A     		lsrs	r0, r0, #8
 1447 001e 80B2     		uxth	r0, r0
 286:Core/Src/main.c **** 
 1448              		.loc 1 286 1 view .LVU345
 1449 0020 0DB0     		add	sp, sp, #52
 1450              		@ sp needed
 1451 0022 00BD     		pop	{pc}
 1452              	.L61:
 1453              		.align	2
 1454              	.L60:
 1455 0024 00A0FFFF 		.word	-24576
 1456              		.cfi_endproc
 1457              	.LFE59:
 1459              		.section	.text.ads131m04_rreg_multiple,"ax",%progbits
 1460              		.align	1
 1461              		.global	ads131m04_rreg_multiple
 1462              		.syntax unified
 1463              		.code	16
 1464              		.thumb_func
 1466              	ads131m04_rreg_multiple:
 1467              	.LVL89:
 1468              	.LFB60:
 291:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1469              		.loc 1 291 79 is_stmt 1 view -0
 1470              		.cfi_startproc
 1471              		@ args = 0, pretend = 0, frame = 16
 1472              		@ frame_needed = 0, uses_anonymous_args = 0
 291:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1473              		.loc 1 291 79 is_stmt 0 view .LVU347
 1474 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1475              		.cfi_def_cfa_offset 20
 1476              		.cfi_offset 4, -20
 1477              		.cfi_offset 5, -16
 1478              		.cfi_offset 6, -12
 1479              		.cfi_offset 7, -8
 1480              		.cfi_offset 14, -4
 1481 0002 85B0     		sub	sp, sp, #20
 1482              		.cfi_def_cfa_offset 40
 1483 0004 0400     		movs	r4, r0
 1484 0006 0D00     		movs	r5, r1
 1485 0008 1600     		movs	r6, r2
 292:Core/Src/main.c ****   // if count is 1 then just use regular rreg and duplicate out[6] to out[7]
 1486              		.loc 1 292 3 is_stmt 1 view .LVU348
 1487 000a 0620     		movs	r0, #6
 1488              	.LVL90:
 292:Core/Src/main.c ****   // if count is 1 then just use regular rreg and duplicate out[6] to out[7]
 1489              		.loc 1 292 3 is_stmt 0 view .LVU349
 1490 000c FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1491              	.LVL91:
 294:Core/Src/main.c ****   if (count == 1) {
 1492              		.loc 1 294 3 is_stmt 1 view .LVU350
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 45


 294:Core/Src/main.c ****   if (count == 1) {
 1493              		.loc 1 294 6 is_stmt 0 view .LVU351
 1494 0010 002D     		cmp	r5, #0
 1495 0012 49D0     		beq	.L62
 295:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((start_reg & 0x3F) << 7);
 1496              		.loc 1 295 3 is_stmt 1 view .LVU352
 295:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((start_reg & 0x3F) << 7);
 1497              		.loc 1 295 6 is_stmt 0 view .LVU353
 1498 0014 012D     		cmp	r5, #1
 1499 0016 23D0     		beq	.L69
 303:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 1500              		.loc 1 303 3 is_stmt 1 view .LVU354
 303:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 1501              		.loc 1 303 47 is_stmt 0 view .LVU355
 1502 0018 E401     		lsls	r4, r4, #7
 1503 001a FC23     		movs	r3, #252
 1504 001c 5B01     		lsls	r3, r3, #5
 1505 001e 1C40     		ands	r4, r3
 303:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 1506              		.loc 1 303 25 view .LVU356
 1507 0020 224A     		ldr	r2, .L70
 1508 0022 2243     		orrs	r2, r4
 303:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 1509              		.loc 1 303 63 view .LVU357
 1510 0024 6B1E     		subs	r3, r5, #1
 303:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 1511              		.loc 1 303 12 view .LVU358
 1512 0026 7F21     		movs	r1, #127
 1513 0028 0B40     		ands	r3, r1
 1514 002a 1343     		orrs	r3, r2
 1515              	.LVL92:
 304:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, 0);
 1516              		.loc 1 304 3 is_stmt 1 view .LVU359
 304:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, 0);
 1517              		.loc 1 304 12 is_stmt 0 view .LVU360
 1518 002c 01A9     		add	r1, sp, #4
 1519 002e 0B80     		strh	r3, [r1]
 1520 0030 0023     		movs	r3, #0
 1521              	.LVL93:
 304:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, 0);
 1522              		.loc 1 304 12 view .LVU361
 1523 0032 4B80     		strh	r3, [r1, #2]
 1524 0034 8B80     		strh	r3, [r1, #4]
 1525 0036 CB80     		strh	r3, [r1, #6]
 1526 0038 0B81     		strh	r3, [r1, #8]
 1527 003a 4B81     		strh	r3, [r1, #10]
 305:Core/Src/main.c **** 
 1528              		.loc 1 305 3 is_stmt 1 view .LVU362
 1529 003c 0022     		movs	r2, #0
 1530 003e 3000     		movs	r0, r6
 1531 0040 FFF7FEFF 		bl	ads131m04_transfer_frame
 1532              	.LVL94:
 308:Core/Src/main.c ****   
 1533              		.loc 1 308 3 view .LVU363
 1534 0044 9020     		movs	r0, #144
 1535 0046 0022     		movs	r2, #0
 1536 0048 1021     		movs	r1, #16
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 46


 1537 004a C005     		lsls	r0, r0, #23
 1538 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1539              	.LVL95:
 311:Core/Src/main.c ****   for (uint8_t i = 0; i < max; i++) {
 1540              		.loc 1 311 3 view .LVU364
 311:Core/Src/main.c ****   for (uint8_t i = 0; i < max; i++) {
 1541              		.loc 1 311 11 is_stmt 0 view .LVU365
 1542 0050 2F1C     		adds	r7, r5, #0
 1543 0052 032D     		cmp	r5, #3
 1544 0054 00D8     		bhi	.L65
 1545 0056 0427     		movs	r7, #4
 1546              	.L65:
 1547 0058 0237     		adds	r7, r7, #2
 1548 005a FFB2     		uxtb	r7, r7
 1549              	.LVL96:
 312:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1550              		.loc 1 312 3 is_stmt 1 view .LVU366
 1551              	.LBB9:
 312:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1552              		.loc 1 312 8 view .LVU367
 312:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1553              		.loc 1 312 16 is_stmt 0 view .LVU368
 1554 005c 0024     		movs	r4, #0
 1555              	.LVL97:
 312:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1556              		.loc 1 312 3 view .LVU369
 1557 005e 15E0     		b	.L66
 1558              	.LVL98:
 1559              	.L69:
 312:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1560              		.loc 1 312 3 view .LVU370
 1561              	.LBE9:
 1562              	.LBB10:
 296:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 1563              		.loc 1 296 5 is_stmt 1 view .LVU371
 296:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 1564              		.loc 1 296 49 is_stmt 0 view .LVU372
 1565 0060 E401     		lsls	r4, r4, #7
 1566 0062 FC23     		movs	r3, #252
 1567 0064 5B01     		lsls	r3, r3, #5
 1568 0066 1C40     		ands	r4, r3
 296:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 1569              		.loc 1 296 27 view .LVU373
 1570 0068 1048     		ldr	r0, .L70
 1571 006a 2043     		orrs	r0, r4
 296:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 1572              		.loc 1 296 14 view .LVU374
 1573 006c 80B2     		uxth	r0, r0
 1574              	.LVL99:
 297:Core/Src/main.c ****     out[7] = out[6];
 1575              		.loc 1 297 5 is_stmt 1 view .LVU375
 1576 006e 0022     		movs	r2, #0
 1577 0070 3100     		movs	r1, r6
 1578 0072 FFF7FEFF 		bl	ads131m04_cmd
 1579              	.LVL100:
 298:Core/Src/main.c ****     return;
 1580              		.loc 1 298 5 view .LVU376
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 47


 298:Core/Src/main.c ****     return;
 1581              		.loc 1 298 12 is_stmt 0 view .LVU377
 1582 0076 B369     		ldr	r3, [r6, #24]
 1583 0078 F361     		str	r3, [r6, #28]
 299:Core/Src/main.c ****   }
 1584              		.loc 1 299 5 is_stmt 1 view .LVU378
 1585 007a 15E0     		b	.L62
 1586              	.LVL101:
 1587              	.L67:
 299:Core/Src/main.c ****   }
 1588              		.loc 1 299 5 is_stmt 0 view .LVU379
 1589              	.LBE10:
 1590              	.LBB11:
 313:Core/Src/main.c ****   }
 1591              		.loc 1 313 5 is_stmt 1 discriminator 3 view .LVU380
 313:Core/Src/main.c ****   }
 1592              		.loc 1 313 8 is_stmt 0 discriminator 3 view .LVU381
 1593 007c A500     		lsls	r5, r4, #2
 1594 007e 7519     		adds	r5, r6, r5
 313:Core/Src/main.c ****   }
 1595              		.loc 1 313 14 discriminator 3 view .LVU382
 1596 0080 0020     		movs	r0, #0
 1597 0082 FFF7FEFF 		bl	ads131m04_transfer_word
 1598              	.LVL102:
 313:Core/Src/main.c ****   }
 1599              		.loc 1 313 12 discriminator 3 view .LVU383
 1600 0086 2860     		str	r0, [r5]
 312:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1601              		.loc 1 312 33 is_stmt 1 discriminator 3 view .LVU384
 1602 0088 0134     		adds	r4, r4, #1
 1603              	.LVL103:
 312:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1604              		.loc 1 312 33 is_stmt 0 discriminator 3 view .LVU385
 1605 008a E4B2     		uxtb	r4, r4
 1606              	.LVL104:
 1607              	.L66:
 312:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1608              		.loc 1 312 25 is_stmt 1 discriminator 1 view .LVU386
 1609 008c BC42     		cmp	r4, r7
 1610 008e F5D3     		bcc	.L67
 1611              	.LBE11:
 316:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 1612              		.loc 1 316 3 view .LVU387
 1613 0090 0420     		movs	r0, #4
 1614 0092 FFF7FEFF 		bl	delay_us
 1615              	.LVL105:
 317:Core/Src/main.c **** 
 1616              		.loc 1 317 3 view .LVU388
 1617 0096 9020     		movs	r0, #144
 1618 0098 0122     		movs	r2, #1
 1619 009a 1021     		movs	r1, #16
 1620 009c C005     		lsls	r0, r0, #23
 1621 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1622              	.LVL106:
 319:Core/Src/main.c **** }
 1623              		.loc 1 319 3 view .LVU389
 1624 00a2 0620     		movs	r0, #6
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 48


 1625 00a4 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1626              	.LVL107:
 1627              	.L62:
 320:Core/Src/main.c **** 
 1628              		.loc 1 320 1 is_stmt 0 view .LVU390
 1629 00a8 05B0     		add	sp, sp, #20
 1630              		@ sp needed
 1631              	.LVL108:
 320:Core/Src/main.c **** 
 1632              		.loc 1 320 1 view .LVU391
 1633 00aa F0BD     		pop	{r4, r5, r6, r7, pc}
 1634              	.L71:
 1635              		.align	2
 1636              	.L70:
 1637 00ac 00A0FFFF 		.word	-24576
 1638              		.cfi_endproc
 1639              	.LFE60:
 1641              		.section	.text.ads131m04_wreg,"ax",%progbits
 1642              		.align	1
 1643              		.global	ads131m04_wreg
 1644              		.syntax unified
 1645              		.code	16
 1646              		.thumb_func
 1648              	ads131m04_wreg:
 1649              	.LVL109:
 1650              	.LFB61:
 323:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1651              		.loc 1 323 53 is_stmt 1 view -0
 1652              		.cfi_startproc
 1653              		@ args = 0, pretend = 0, frame = 72
 1654              		@ frame_needed = 0, uses_anonymous_args = 0
 323:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1655              		.loc 1 323 53 is_stmt 0 view .LVU393
 1656 0000 30B5     		push	{r4, r5, lr}
 1657              		.cfi_def_cfa_offset 12
 1658              		.cfi_offset 4, -12
 1659              		.cfi_offset 5, -8
 1660              		.cfi_offset 14, -4
 1661 0002 93B0     		sub	sp, sp, #76
 1662              		.cfi_def_cfa_offset 88
 1663 0004 0400     		movs	r4, r0
 1664 0006 0D00     		movs	r5, r1
 324:Core/Src/main.c ****   uint16_t cmd = 0x6000 | ((reg & 0x3F) << 7);
 1665              		.loc 1 324 3 is_stmt 1 view .LVU394
 1666 0008 0620     		movs	r0, #6
 1667              	.LVL110:
 324:Core/Src/main.c ****   uint16_t cmd = 0x6000 | ((reg & 0x3F) << 7);
 1668              		.loc 1 324 3 is_stmt 0 view .LVU395
 1669 000a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1670              	.LVL111:
 325:Core/Src/main.c ****   uint32_t recv[12];
 1671              		.loc 1 325 3 is_stmt 1 view .LVU396
 325:Core/Src/main.c ****   uint32_t recv[12];
 1672              		.loc 1 325 41 is_stmt 0 view .LVU397
 1673 000e E401     		lsls	r4, r4, #7
 1674 0010 FC23     		movs	r3, #252
 1675 0012 5B01     		lsls	r3, r3, #5
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 49


 1676 0014 1C40     		ands	r4, r3
 325:Core/Src/main.c ****   uint32_t recv[12];
 1677              		.loc 1 325 12 view .LVU398
 1678 0016 C023     		movs	r3, #192
 1679 0018 DB01     		lsls	r3, r3, #7
 1680 001a 2343     		orrs	r3, r4
 1681              	.LVL112:
 326:Core/Src/main.c ****   uint16_t words[6] = {cmd, data, 0, 0, 0, 0};
 1682              		.loc 1 326 3 is_stmt 1 view .LVU399
 327:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 1683              		.loc 1 327 3 view .LVU400
 327:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 1684              		.loc 1 327 12 is_stmt 0 view .LVU401
 1685 001c 03AC     		add	r4, sp, #12
 1686 001e 2380     		strh	r3, [r4]
 1687 0020 6580     		strh	r5, [r4, #2]
 1688 0022 0023     		movs	r3, #0
 1689              	.LVL113:
 327:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 1690              		.loc 1 327 12 view .LVU402
 1691 0024 A380     		strh	r3, [r4, #4]
 1692 0026 E380     		strh	r3, [r4, #6]
 1693 0028 2381     		strh	r3, [r4, #8]
 1694 002a 6381     		strh	r3, [r4, #10]
 328:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 1695              		.loc 1 328 3 is_stmt 1 view .LVU403
 328:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 1696              		.loc 1 328 12 is_stmt 0 view .LVU404
 1697 002c 0C22     		movs	r2, #12
 1698 002e 0021     		movs	r1, #0
 1699 0030 6846     		mov	r0, sp
 1700 0032 FFF7FEFF 		bl	memset
 1701              	.LVL114:
 329:Core/Src/main.c ****   ads131m04_transfer_frame(recv+6, zeros, 0);
 1702              		.loc 1 329 3 is_stmt 1 view .LVU405
 1703 0036 0022     		movs	r2, #0
 1704 0038 2100     		movs	r1, r4
 1705 003a 06A8     		add	r0, sp, #24
 1706 003c FFF7FEFF 		bl	ads131m04_transfer_frame
 1707              	.LVL115:
 330:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 1708              		.loc 1 330 3 view .LVU406
 1709 0040 0022     		movs	r2, #0
 1710 0042 6946     		mov	r1, sp
 1711 0044 0CA8     		add	r0, sp, #48
 1712 0046 FFF7FEFF 		bl	ads131m04_transfer_frame
 1713              	.LVL116:
 331:Core/Src/main.c ****   return recv[6] >> 8;
 1714              		.loc 1 331 3 view .LVU407
 1715 004a 0620     		movs	r0, #6
 1716 004c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1717              	.LVL117:
 332:Core/Src/main.c **** }
 1718              		.loc 1 332 3 view .LVU408
 332:Core/Src/main.c **** }
 1719              		.loc 1 332 14 is_stmt 0 view .LVU409
 1720 0050 0C98     		ldr	r0, [sp, #48]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 50


 332:Core/Src/main.c **** }
 1721              		.loc 1 332 18 view .LVU410
 1722 0052 000A     		lsrs	r0, r0, #8
 1723 0054 80B2     		uxth	r0, r0
 333:Core/Src/main.c **** 
 1724              		.loc 1 333 1 view .LVU411
 1725 0056 13B0     		add	sp, sp, #76
 1726              		@ sp needed
 1727 0058 30BD     		pop	{r4, r5, pc}
 1728              		.cfi_endproc
 1729              	.LFE61:
 1731              		.section	.text.ads131m04_wreg_multiple,"ax",%progbits
 1732              		.align	1
 1733              		.global	ads131m04_wreg_multiple
 1734              		.syntax unified
 1735              		.code	16
 1736              		.thumb_func
 1738              	ads131m04_wreg_multiple:
 1739              	.LVL118:
 1740              	.LFB62:
 336:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1741              		.loc 1 336 84 is_stmt 1 view -0
 1742              		.cfi_startproc
 1743              		@ args = 0, pretend = 0, frame = 64
 1744              		@ frame_needed = 0, uses_anonymous_args = 0
 336:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1745              		.loc 1 336 84 is_stmt 0 view .LVU413
 1746 0000 70B5     		push	{r4, r5, r6, lr}
 1747              		.cfi_def_cfa_offset 16
 1748              		.cfi_offset 4, -16
 1749              		.cfi_offset 5, -12
 1750              		.cfi_offset 6, -8
 1751              		.cfi_offset 14, -4
 1752 0002 90B0     		sub	sp, sp, #64
 1753              		.cfi_def_cfa_offset 80
 1754 0004 0400     		movs	r4, r0
 1755 0006 0D00     		movs	r5, r1
 1756 0008 1600     		movs	r6, r2
 337:Core/Src/main.c ****   if (count == 0) return 0;
 1757              		.loc 1 337 3 is_stmt 1 view .LVU414
 1758 000a 0620     		movs	r0, #6
 1759              	.LVL119:
 337:Core/Src/main.c ****   if (count == 0) return 0;
 1760              		.loc 1 337 3 is_stmt 0 view .LVU415
 1761 000c FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1762              	.LVL120:
 338:Core/Src/main.c **** 
 1763              		.loc 1 338 3 is_stmt 1 view .LVU416
 338:Core/Src/main.c **** 
 1764              		.loc 1 338 6 is_stmt 0 view .LVU417
 1765 0010 002D     		cmp	r5, #0
 1766 0012 02D1     		bne	.L80
 338:Core/Src/main.c **** 
 1767              		.loc 1 338 26 view .LVU418
 1768 0014 0020     		movs	r0, #0
 1769              	.L74:
 370:Core/Src/main.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 51


 1770              		.loc 1 370 1 view .LVU419
 1771 0016 10B0     		add	sp, sp, #64
 1772              		@ sp needed
 1773              	.LVL121:
 370:Core/Src/main.c **** 
 1774              		.loc 1 370 1 view .LVU420
 1775 0018 70BD     		pop	{r4, r5, r6, pc}
 1776              	.LVL122:
 1777              	.L80:
 340:Core/Src/main.c ****   // manually transfer the first frame
 1778              		.loc 1 340 3 is_stmt 1 view .LVU421
 340:Core/Src/main.c ****   // manually transfer the first frame
 1779              		.loc 1 340 47 is_stmt 0 view .LVU422
 1780 001a E401     		lsls	r4, r4, #7
 1781 001c FC23     		movs	r3, #252
 1782 001e 5B01     		lsls	r3, r3, #5
 1783 0020 1C40     		ands	r4, r3
 340:Core/Src/main.c ****   // manually transfer the first frame
 1784              		.loc 1 340 25 view .LVU423
 1785 0022 C022     		movs	r2, #192
 1786 0024 D201     		lsls	r2, r2, #7
 1787 0026 2243     		orrs	r2, r4
 340:Core/Src/main.c ****   // manually transfer the first frame
 1788              		.loc 1 340 63 view .LVU424
 1789 0028 6B1E     		subs	r3, r5, #1
 340:Core/Src/main.c ****   // manually transfer the first frame
 1790              		.loc 1 340 12 view .LVU425
 1791 002a 7F21     		movs	r1, #127
 1792 002c 1C00     		movs	r4, r3
 1793 002e 0C40     		ands	r4, r1
 1794 0030 1443     		orrs	r4, r2
 1795              	.LVL123:
 342:Core/Src/main.c **** 
 1796              		.loc 1 342 3 is_stmt 1 view .LVU426
 1797 0032 9020     		movs	r0, #144
 1798 0034 0022     		movs	r2, #0
 1799 0036 6F39     		subs	r1, r1, #111
 1800 0038 C005     		lsls	r0, r0, #23
 1801 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1802              	.LVL124:
 345:Core/Src/main.c **** 
 1803              		.loc 1 345 3 view .LVU427
 1804 003e 2000     		movs	r0, r4
 1805 0040 FFF7FEFF 		bl	ads131m04_transfer_word
 1806              	.LVL125:
 348:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1807              		.loc 1 348 3 view .LVU428
 1808              	.LBB12:
 348:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1809              		.loc 1 348 8 view .LVU429
 348:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1810              		.loc 1 348 16 is_stmt 0 view .LVU430
 1811 0044 0024     		movs	r4, #0
 1812              	.LVL126:
 348:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1813              		.loc 1 348 3 view .LVU431
 1814 0046 05E0     		b	.L75
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 52


 1815              	.LVL127:
 1816              	.L76:
 349:Core/Src/main.c ****   }
 1817              		.loc 1 349 5 is_stmt 1 discriminator 3 view .LVU432
 349:Core/Src/main.c ****   }
 1818              		.loc 1 349 33 is_stmt 0 discriminator 3 view .LVU433
 1819 0048 6300     		lsls	r3, r4, #1
 349:Core/Src/main.c ****   }
 1820              		.loc 1 349 5 discriminator 3 view .LVU434
 1821 004a F05A     		ldrh	r0, [r6, r3]
 1822 004c FFF7FEFF 		bl	ads131m04_transfer_word
 1823              	.LVL128:
 348:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1824              		.loc 1 348 35 is_stmt 1 discriminator 3 view .LVU435
 1825 0050 0134     		adds	r4, r4, #1
 1826              	.LVL129:
 348:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1827              		.loc 1 348 35 is_stmt 0 discriminator 3 view .LVU436
 1828 0052 E4B2     		uxtb	r4, r4
 1829              	.LVL130:
 1830              	.L75:
 348:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1831              		.loc 1 348 25 is_stmt 1 discriminator 1 view .LVU437
 1832 0054 AC42     		cmp	r4, r5
 1833 0056 F7D3     		bcc	.L76
 1834              	.LBE12:
 1835              	.LBB13:
 353:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1836              		.loc 1 353 15 is_stmt 0 view .LVU438
 1837 0058 0024     		movs	r4, #0
 1838              	.LVL131:
 353:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1839              		.loc 1 353 15 view .LVU439
 1840 005a 04E0     		b	.L77
 1841              	.LVL132:
 1842              	.L78:
 354:Core/Src/main.c ****   }
 1843              		.loc 1 354 5 is_stmt 1 discriminator 3 view .LVU440
 1844 005c 0020     		movs	r0, #0
 1845 005e FFF7FEFF 		bl	ads131m04_transfer_word
 1846              	.LVL133:
 353:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1847              		.loc 1 353 38 discriminator 3 view .LVU441
 1848 0062 0134     		adds	r4, r4, #1
 1849              	.LVL134:
 353:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1850              		.loc 1 353 38 is_stmt 0 discriminator 3 view .LVU442
 1851 0064 64B2     		sxtb	r4, r4
 1852              	.LVL135:
 1853              	.L77:
 353:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1854              		.loc 1 353 24 is_stmt 1 discriminator 1 view .LVU443
 353:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1855              		.loc 1 353 28 is_stmt 0 discriminator 1 view .LVU444
 1856 0066 0423     		movs	r3, #4
 1857 0068 5B1B     		subs	r3, r3, r5
 353:Core/Src/main.c ****     ads131m04_transfer_word(0);
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 53


 1858              		.loc 1 353 24 discriminator 1 view .LVU445
 1859 006a 9C42     		cmp	r4, r3
 1860 006c F6DB     		blt	.L78
 1861              	.LBE13:
 358:Core/Src/main.c **** 
 1862              		.loc 1 358 3 is_stmt 1 view .LVU446
 1863 006e 0020     		movs	r0, #0
 1864 0070 FFF7FEFF 		bl	ads131m04_transfer_word
 1865              	.LVL136:
 360:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 1866              		.loc 1 360 3 view .LVU447
 1867 0074 0420     		movs	r0, #4
 1868 0076 FFF7FEFF 		bl	delay_us
 1869              	.LVL137:
 361:Core/Src/main.c **** 
 1870              		.loc 1 361 3 view .LVU448
 1871 007a 9020     		movs	r0, #144
 1872 007c 0122     		movs	r2, #1
 1873 007e 1021     		movs	r1, #16
 1874 0080 C005     		lsls	r0, r0, #23
 1875 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1876              	.LVL138:
 364:Core/Src/main.c ****   uint32_t recv[12];
 1877              		.loc 1 364 3 view .LVU449
 364:Core/Src/main.c ****   uint32_t recv[12];
 1878              		.loc 1 364 12 is_stmt 0 view .LVU450
 1879 0086 0C22     		movs	r2, #12
 1880 0088 0021     		movs	r1, #0
 1881 008a 0DA8     		add	r0, sp, #52
 1882 008c FFF7FEFF 		bl	memset
 1883              	.LVL139:
 365:Core/Src/main.c ****   ads131m04_transfer_frame(recv, zeros, 0);
 1884              		.loc 1 365 3 is_stmt 1 view .LVU451
 366:Core/Src/main.c **** 
 1885              		.loc 1 366 3 view .LVU452
 1886 0090 0022     		movs	r2, #0
 1887 0092 0DA9     		add	r1, sp, #52
 1888 0094 01A8     		add	r0, sp, #4
 1889 0096 FFF7FEFF 		bl	ads131m04_transfer_frame
 1890              	.LVL140:
 368:Core/Src/main.c ****   return recv[6] >> 8;  
 1891              		.loc 1 368 3 view .LVU453
 1892 009a 0620     		movs	r0, #6
 1893 009c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1894              	.LVL141:
 369:Core/Src/main.c **** }
 1895              		.loc 1 369 3 view .LVU454
 369:Core/Src/main.c **** }
 1896              		.loc 1 369 14 is_stmt 0 view .LVU455
 1897 00a0 0798     		ldr	r0, [sp, #28]
 369:Core/Src/main.c **** }
 1898              		.loc 1 369 18 view .LVU456
 1899 00a2 000A     		lsrs	r0, r0, #8
 1900 00a4 80B2     		uxth	r0, r0
 1901 00a6 B6E7     		b	.L74
 1902              		.cfi_endproc
 1903              	.LFE62:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 54


 1905              		.section	.text.ads131m04_test,"ax",%progbits
 1906              		.align	1
 1907              		.global	ads131m04_test
 1908              		.syntax unified
 1909              		.code	16
 1910              		.thumb_func
 1912              	ads131m04_test:
 1913              	.LFB63:
 373:Core/Src/main.c ****   uint16_t id = ads131m04_rreg(0x00);
 1914              		.loc 1 373 26 is_stmt 1 view -0
 1915              		.cfi_startproc
 1916              		@ args = 0, pretend = 0, frame = 0
 1917              		@ frame_needed = 0, uses_anonymous_args = 0
 1918 0000 10B5     		push	{r4, lr}
 1919              		.cfi_def_cfa_offset 8
 1920              		.cfi_offset 4, -8
 1921              		.cfi_offset 14, -4
 374:Core/Src/main.c ****   return id == 0x24;
 1922              		.loc 1 374 3 view .LVU458
 374:Core/Src/main.c ****   return id == 0x24;
 1923              		.loc 1 374 17 is_stmt 0 view .LVU459
 1924 0002 0020     		movs	r0, #0
 1925 0004 FFF7FEFF 		bl	ads131m04_rreg
 1926              	.LVL142:
 375:Core/Src/main.c **** }
 1927              		.loc 1 375 3 is_stmt 1 view .LVU460
 375:Core/Src/main.c **** }
 1928              		.loc 1 375 13 is_stmt 0 view .LVU461
 1929 0008 2438     		subs	r0, r0, #36
 1930              	.LVL143:
 375:Core/Src/main.c **** }
 1931              		.loc 1 375 13 view .LVU462
 1932 000a 4342     		rsbs	r3, r0, #0
 1933 000c 5841     		adcs	r0, r0, r3
 1934 000e C0B2     		uxtb	r0, r0
 376:Core/Src/main.c **** 
 1935              		.loc 1 376 1 view .LVU463
 1936              		@ sp needed
 1937 0010 10BD     		pop	{r4, pc}
 1938              		.cfi_endproc
 1939              	.LFE63:
 1941              		.section	.text.adc_configure,"ax",%progbits
 1942              		.align	1
 1943              		.global	adc_configure
 1944              		.syntax unified
 1945              		.code	16
 1946              		.thumb_func
 1948              	adc_configure:
 1949              	.LFB64:
 379:Core/Src/main.c ****   while (!ads131m04_reset()) {
 1950              		.loc 1 379 25 is_stmt 1 view -0
 1951              		.cfi_startproc
 1952              		@ args = 0, pretend = 0, frame = 0
 1953              		@ frame_needed = 0, uses_anonymous_args = 0
 1954 0000 10B5     		push	{r4, lr}
 1955              		.cfi_def_cfa_offset 8
 1956              		.cfi_offset 4, -8
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 55


 1957              		.cfi_offset 14, -4
 380:Core/Src/main.c ****     delay_us(10);
 1958              		.loc 1 380 3 view .LVU465
 380:Core/Src/main.c ****     delay_us(10);
 1959              		.loc 1 380 9 is_stmt 0 view .LVU466
 1960 0002 02E0     		b	.L83
 1961              	.L84:
 381:Core/Src/main.c ****   };
 1962              		.loc 1 381 5 is_stmt 1 view .LVU467
 1963 0004 0A20     		movs	r0, #10
 1964 0006 FFF7FEFF 		bl	delay_us
 1965              	.LVL144:
 1966              	.L83:
 380:Core/Src/main.c ****     delay_us(10);
 1967              		.loc 1 380 10 view .LVU468
 380:Core/Src/main.c ****     delay_us(10);
 1968              		.loc 1 380 11 is_stmt 0 view .LVU469
 1969 000a FFF7FEFF 		bl	ads131m04_reset
 1970              	.LVL145:
 380:Core/Src/main.c ****     delay_us(10);
 1971              		.loc 1 380 10 view .LVU470
 1972 000e 0028     		cmp	r0, #0
 1973 0010 F8D0     		beq	.L84
 1974 0012 02E0     		b	.L85
 1975              	.L86:
 384:Core/Src/main.c ****   };
 1976              		.loc 1 384 5 is_stmt 1 view .LVU471
 1977 0014 0A20     		movs	r0, #10
 1978 0016 FFF7FEFF 		bl	delay_us
 1979              	.LVL146:
 1980              	.L85:
 383:Core/Src/main.c ****     delay_us(10);
 1981              		.loc 1 383 10 view .LVU472
 383:Core/Src/main.c ****     delay_us(10);
 1982              		.loc 1 383 11 is_stmt 0 view .LVU473
 1983 001a FFF7FEFF 		bl	ads131m04_test
 1984              	.LVL147:
 383:Core/Src/main.c ****     delay_us(10);
 1985              		.loc 1 383 10 view .LVU474
 1986 001e 0028     		cmp	r0, #0
 1987 0020 F8D0     		beq	.L86
 385:Core/Src/main.c ****   uint16_t mode = 0x0110; // clear reset bit, disable all CRCs
 1988              		.loc 1 385 4 is_stmt 1 view .LVU475
 386:Core/Src/main.c ****   ads131m04_wreg(0x02, mode);
 1989              		.loc 1 386 3 view .LVU476
 1990              	.LVL148:
 387:Core/Src/main.c **** 
 1991              		.loc 1 387 3 view .LVU477
 1992 0022 8821     		movs	r1, #136
 1993 0024 4900     		lsls	r1, r1, #1
 1994 0026 0220     		movs	r0, #2
 1995 0028 FFF7FEFF 		bl	ads131m04_wreg
 1996              	.LVL149:
 389:Core/Src/main.c ****   uint16_t clock = 0x0F03 | (osr << 2); // enable all, highest precision
 1997              		.loc 1 389 3 view .LVU478
 390:Core/Src/main.c ****   ads131m04_wreg(0x03, clock);
 1998              		.loc 1 390 3 view .LVU479
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 56


 391:Core/Src/main.c **** 
 1999              		.loc 1 391 3 view .LVU480
 2000 002c 0849     		ldr	r1, .L87
 2001 002e 0320     		movs	r0, #3
 2002 0030 FFF7FEFF 		bl	ads131m04_wreg
 2003              	.LVL150:
 393:Core/Src/main.c ****   uint16_t gain1 = (gain << 12) | (gain << 8) | (gain << 4) | gain;
 2004              		.loc 1 393 3 view .LVU481
 394:Core/Src/main.c ****   ads131m04_wreg(0x04, gain1);
 2005              		.loc 1 394 3 view .LVU482
 395:Core/Src/main.c **** 
 2006              		.loc 1 395 3 view .LVU483
 2007 0034 0749     		ldr	r1, .L87+4
 2008 0036 0420     		movs	r0, #4
 2009 0038 FFF7FEFF 		bl	ads131m04_wreg
 2010              	.LVL151:
 397:Core/Src/main.c ****   ads131m04_wreg(0x06, cfg);
 2011              		.loc 1 397 3 view .LVU484
 398:Core/Src/main.c ****   
 2012              		.loc 1 398 3 view .LVU485
 2013 003c 0021     		movs	r1, #0
 2014 003e 0620     		movs	r0, #6
 2015 0040 FFF7FEFF 		bl	ads131m04_wreg
 2016              	.LVL152:
 400:Core/Src/main.c **** 
 2017              		.loc 1 400 3 view .LVU486
 400:Core/Src/main.c **** 
 2018              		.loc 1 400 18 is_stmt 0 view .LVU487
 2019 0044 044B     		ldr	r3, .L87+8
 2020 0046 0122     		movs	r2, #1
 2021 0048 1A70     		strb	r2, [r3]
 403:Core/Src/main.c **** }
 2022              		.loc 1 403 3 is_stmt 1 view .LVU488
 404:Core/Src/main.c **** 
 2023              		.loc 1 404 1 is_stmt 0 view .LVU489
 2024 004a 0120     		movs	r0, #1
 2025              		@ sp needed
 2026 004c 10BD     		pop	{r4, pc}
 2027              	.L88:
 2028 004e C046     		.align	2
 2029              	.L87:
 2030 0050 130F0000 		.word	3859
 2031 0054 66660000 		.word	26214
 2032 0058 00000000 		.word	adc_configured
 2033              		.cfi_endproc
 2034              	.LFE64:
 2036              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 2037              		.align	1
 2038              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 2039              		.syntax unified
 2040              		.code	16
 2041              		.thumb_func
 2043              	HAL_CAN_RxFifo0MsgPendingCallback:
 2044              	.LVL153:
 2045              	.LFB73:
 774:Core/Src/main.c **** 
 775:Core/Src/main.c **** /* USER CODE BEGIN 4 */
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 57


 776:Core/Src/main.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan) {
 2046              		.loc 1 776 65 is_stmt 1 view -0
 2047              		.cfi_startproc
 2048              		@ args = 0, pretend = 0, frame = 0
 2049              		@ frame_needed = 0, uses_anonymous_args = 0
 2050              		.loc 1 776 65 is_stmt 0 view .LVU491
 2051 0000 10B5     		push	{r4, lr}
 2052              		.cfi_def_cfa_offset 8
 2053              		.cfi_offset 4, -8
 2054              		.cfi_offset 14, -4
 777:Core/Src/main.c ****   HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &rxh_nst, rx_nst_data);
 2055              		.loc 1 777 3 is_stmt 1 view .LVU492
 2056 0002 034B     		ldr	r3, .L90
 2057 0004 034A     		ldr	r2, .L90+4
 2058 0006 0021     		movs	r1, #0
 2059 0008 FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 2060              	.LVL154:
 778:Core/Src/main.c ****   can_rx_handler();
 2061              		.loc 1 778 3 view .LVU493
 779:Core/Src/main.c **** }
 2062              		.loc 1 779 1 is_stmt 0 view .LVU494
 2063              		@ sp needed
 2064 000c 10BD     		pop	{r4, pc}
 2065              	.L91:
 2066 000e C046     		.align	2
 2067              	.L90:
 2068 0010 00000000 		.word	rx_nst_data
 2069 0014 00000000 		.word	rxh_nst
 2070              		.cfi_endproc
 2071              	.LFE73:
 2073              		.section	.text.Error_Handler,"ax",%progbits
 2074              		.align	1
 2075              		.global	Error_Handler
 2076              		.syntax unified
 2077              		.code	16
 2078              		.thumb_func
 2080              	Error_Handler:
 2081              	.LFB74:
 780:Core/Src/main.c **** /* USER CODE END 4 */
 781:Core/Src/main.c **** 
 782:Core/Src/main.c **** /**
 783:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 784:Core/Src/main.c ****   * @retval None
 785:Core/Src/main.c ****   */
 786:Core/Src/main.c **** void Error_Handler(void)
 787:Core/Src/main.c **** {
 2082              		.loc 1 787 1 is_stmt 1 view -0
 2083              		.cfi_startproc
 2084              		@ Volatile: function does not return.
 2085              		@ args = 0, pretend = 0, frame = 0
 2086              		@ frame_needed = 0, uses_anonymous_args = 0
 2087              		@ link register save eliminated.
 788:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 789:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 790:Core/Src/main.c ****   __disable_irq();
 2088              		.loc 1 790 3 view .LVU496
 2089              	.LBB14:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 58


 2090              	.LBI14:
 2091              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 59


  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 60


 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 2092              		.loc 2 140 27 view .LVU497
 2093              	.LBB15:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2094              		.loc 2 142 3 view .LVU498
 2095              		.syntax divided
 2096              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2097 0000 72B6     		cpsid i
 2098              	@ 0 "" 2
 2099              		.thumb
 2100              		.syntax unified
 2101              	.L93:
 2102              	.LBE15:
 2103              	.LBE14:
 791:Core/Src/main.c ****   while (1)
 2104              		.loc 1 791 3 discriminator 1 view .LVU499
 792:Core/Src/main.c ****   {
 793:Core/Src/main.c ****   }
 2105              		.loc 1 793 3 discriminator 1 view .LVU500
 791:Core/Src/main.c ****   while (1)
 2106              		.loc 1 791 9 discriminator 1 view .LVU501
 2107 0002 FEE7     		b	.L93
 2108              		.cfi_endproc
 2109              	.LFE74:
 2111              		.section	.text.MX_CAN_Init,"ax",%progbits
 2112              		.align	1
 2113              		.syntax unified
 2114              		.code	16
 2115              		.thumb_func
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 61


 2117              	MX_CAN_Init:
 2118              	.LFB67:
 520:Core/Src/main.c **** 
 2119              		.loc 1 520 1 view -0
 2120              		.cfi_startproc
 2121              		@ args = 0, pretend = 0, frame = 0
 2122              		@ frame_needed = 0, uses_anonymous_args = 0
 2123 0000 10B5     		push	{r4, lr}
 2124              		.cfi_def_cfa_offset 8
 2125              		.cfi_offset 4, -8
 2126              		.cfi_offset 14, -4
 529:Core/Src/main.c ****   hcan.Init.Prescaler = 3;
 2127              		.loc 1 529 3 view .LVU503
 529:Core/Src/main.c ****   hcan.Init.Prescaler = 3;
 2128              		.loc 1 529 17 is_stmt 0 view .LVU504
 2129 0002 0E48     		ldr	r0, .L97
 2130 0004 0E4B     		ldr	r3, .L97+4
 2131 0006 0360     		str	r3, [r0]
 530:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 2132              		.loc 1 530 3 is_stmt 1 view .LVU505
 530:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 2133              		.loc 1 530 23 is_stmt 0 view .LVU506
 2134 0008 0323     		movs	r3, #3
 2135 000a 4360     		str	r3, [r0, #4]
 531:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 2136              		.loc 1 531 3 is_stmt 1 view .LVU507
 531:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 2137              		.loc 1 531 18 is_stmt 0 view .LVU508
 2138 000c 0023     		movs	r3, #0
 2139 000e 8360     		str	r3, [r0, #8]
 532:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 2140              		.loc 1 532 3 is_stmt 1 view .LVU509
 532:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 2141              		.loc 1 532 27 is_stmt 0 view .LVU510
 2142 0010 8022     		movs	r2, #128
 2143 0012 5204     		lsls	r2, r2, #17
 2144 0014 C260     		str	r2, [r0, #12]
 533:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 2145              		.loc 1 533 3 is_stmt 1 view .LVU511
 533:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 2146              		.loc 1 533 22 is_stmt 0 view .LVU512
 2147 0016 C022     		movs	r2, #192
 2148 0018 1203     		lsls	r2, r2, #12
 2149 001a 0261     		str	r2, [r0, #16]
 534:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 2150              		.loc 1 534 3 is_stmt 1 view .LVU513
 534:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 2151              		.loc 1 534 22 is_stmt 0 view .LVU514
 2152 001c 8022     		movs	r2, #128
 2153 001e 5203     		lsls	r2, r2, #13
 2154 0020 4261     		str	r2, [r0, #20]
 535:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 2155              		.loc 1 535 3 is_stmt 1 view .LVU515
 535:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 2156              		.loc 1 535 31 is_stmt 0 view .LVU516
 2157 0022 0376     		strb	r3, [r0, #24]
 536:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 62


 2158              		.loc 1 536 3 is_stmt 1 view .LVU517
 536:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
 2159              		.loc 1 536 24 is_stmt 0 view .LVU518
 2160 0024 4376     		strb	r3, [r0, #25]
 537:Core/Src/main.c ****   hcan.Init.AutoRetransmission = DISABLE;
 2161              		.loc 1 537 3 is_stmt 1 view .LVU519
 537:Core/Src/main.c ****   hcan.Init.AutoRetransmission = DISABLE;
 2162              		.loc 1 537 24 is_stmt 0 view .LVU520
 2163 0026 8376     		strb	r3, [r0, #26]
 538:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 2164              		.loc 1 538 3 is_stmt 1 view .LVU521
 538:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 2165              		.loc 1 538 32 is_stmt 0 view .LVU522
 2166 0028 C376     		strb	r3, [r0, #27]
 539:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 2167              		.loc 1 539 3 is_stmt 1 view .LVU523
 539:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 2168              		.loc 1 539 31 is_stmt 0 view .LVU524
 2169 002a 0377     		strb	r3, [r0, #28]
 540:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 2170              		.loc 1 540 3 is_stmt 1 view .LVU525
 540:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 2171              		.loc 1 540 34 is_stmt 0 view .LVU526
 2172 002c 4377     		strb	r3, [r0, #29]
 541:Core/Src/main.c ****   {
 2173              		.loc 1 541 3 is_stmt 1 view .LVU527
 541:Core/Src/main.c ****   {
 2174              		.loc 1 541 7 is_stmt 0 view .LVU528
 2175 002e FFF7FEFF 		bl	HAL_CAN_Init
 2176              	.LVL155:
 541:Core/Src/main.c ****   {
 2177              		.loc 1 541 6 view .LVU529
 2178 0032 0028     		cmp	r0, #0
 2179 0034 00D1     		bne	.L96
 549:Core/Src/main.c **** 
 2180              		.loc 1 549 1 view .LVU530
 2181              		@ sp needed
 2182 0036 10BD     		pop	{r4, pc}
 2183              	.L96:
 543:Core/Src/main.c ****   }
 2184              		.loc 1 543 5 is_stmt 1 view .LVU531
 2185 0038 FFF7FEFF 		bl	Error_Handler
 2186              	.LVL156:
 2187              	.L98:
 2188              		.align	2
 2189              	.L97:
 2190 003c 00000000 		.word	hcan
 2191 0040 00640040 		.word	1073767424
 2192              		.cfi_endproc
 2193              	.LFE67:
 2195              		.section	.text.MX_SPI1_Init,"ax",%progbits
 2196              		.align	1
 2197              		.syntax unified
 2198              		.code	16
 2199              		.thumb_func
 2201              	MX_SPI1_Init:
 2202              	.LFB68:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 63


 557:Core/Src/main.c **** 
 2203              		.loc 1 557 1 view -0
 2204              		.cfi_startproc
 2205              		@ args = 0, pretend = 0, frame = 0
 2206              		@ frame_needed = 0, uses_anonymous_args = 0
 2207 0000 10B5     		push	{r4, lr}
 2208              		.cfi_def_cfa_offset 8
 2209              		.cfi_offset 4, -8
 2210              		.cfi_offset 14, -4
 567:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 2211              		.loc 1 567 3 view .LVU533
 567:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 2212              		.loc 1 567 18 is_stmt 0 view .LVU534
 2213 0002 1148     		ldr	r0, .L102
 2214 0004 114B     		ldr	r3, .L102+4
 2215 0006 0360     		str	r3, [r0]
 568:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 2216              		.loc 1 568 3 is_stmt 1 view .LVU535
 568:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 2217              		.loc 1 568 19 is_stmt 0 view .LVU536
 2218 0008 8223     		movs	r3, #130
 2219 000a 5B00     		lsls	r3, r3, #1
 2220 000c 4360     		str	r3, [r0, #4]
 569:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 2221              		.loc 1 569 3 is_stmt 1 view .LVU537
 569:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 2222              		.loc 1 569 24 is_stmt 0 view .LVU538
 2223 000e 0023     		movs	r3, #0
 2224 0010 8360     		str	r3, [r0, #8]
 570:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 2225              		.loc 1 570 3 is_stmt 1 view .LVU539
 570:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 2226              		.loc 1 570 23 is_stmt 0 view .LVU540
 2227 0012 E022     		movs	r2, #224
 2228 0014 D200     		lsls	r2, r2, #3
 2229 0016 C260     		str	r2, [r0, #12]
 571:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 2230              		.loc 1 571 3 is_stmt 1 view .LVU541
 571:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 2231              		.loc 1 571 26 is_stmt 0 view .LVU542
 2232 0018 0361     		str	r3, [r0, #16]
 572:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 2233              		.loc 1 572 3 is_stmt 1 view .LVU543
 572:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 2234              		.loc 1 572 23 is_stmt 0 view .LVU544
 2235 001a 0122     		movs	r2, #1
 2236 001c 4261     		str	r2, [r0, #20]
 573:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 2237              		.loc 1 573 3 is_stmt 1 view .LVU545
 573:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 2238              		.loc 1 573 18 is_stmt 0 view .LVU546
 2239 001e 8022     		movs	r2, #128
 2240 0020 9200     		lsls	r2, r2, #2
 2241 0022 8261     		str	r2, [r0, #24]
 574:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2242              		.loc 1 574 3 is_stmt 1 view .LVU547
 574:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 64


 2243              		.loc 1 574 32 is_stmt 0 view .LVU548
 2244 0024 F13A     		subs	r2, r2, #241
 2245 0026 FF3A     		subs	r2, r2, #255
 2246 0028 C261     		str	r2, [r0, #28]
 575:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 2247              		.loc 1 575 3 is_stmt 1 view .LVU549
 575:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 2248              		.loc 1 575 23 is_stmt 0 view .LVU550
 2249 002a 0362     		str	r3, [r0, #32]
 576:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2250              		.loc 1 576 3 is_stmt 1 view .LVU551
 576:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2251              		.loc 1 576 21 is_stmt 0 view .LVU552
 2252 002c 4362     		str	r3, [r0, #36]
 577:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 2253              		.loc 1 577 3 is_stmt 1 view .LVU553
 577:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 2254              		.loc 1 577 29 is_stmt 0 view .LVU554
 2255 002e 8362     		str	r3, [r0, #40]
 578:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 2256              		.loc 1 578 3 is_stmt 1 view .LVU555
 578:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 2257              		.loc 1 578 28 is_stmt 0 view .LVU556
 2258 0030 093A     		subs	r2, r2, #9
 2259 0032 C262     		str	r2, [r0, #44]
 579:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 2260              		.loc 1 579 3 is_stmt 1 view .LVU557
 579:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 2261              		.loc 1 579 24 is_stmt 0 view .LVU558
 2262 0034 0363     		str	r3, [r0, #48]
 580:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 2263              		.loc 1 580 3 is_stmt 1 view .LVU559
 580:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 2264              		.loc 1 580 23 is_stmt 0 view .LVU560
 2265 0036 4363     		str	r3, [r0, #52]
 581:Core/Src/main.c ****   {
 2266              		.loc 1 581 3 is_stmt 1 view .LVU561
 581:Core/Src/main.c ****   {
 2267              		.loc 1 581 7 is_stmt 0 view .LVU562
 2268 0038 FFF7FEFF 		bl	HAL_SPI_Init
 2269              	.LVL157:
 581:Core/Src/main.c ****   {
 2270              		.loc 1 581 6 view .LVU563
 2271 003c 0028     		cmp	r0, #0
 2272 003e 00D1     		bne	.L101
 589:Core/Src/main.c **** 
 2273              		.loc 1 589 1 view .LVU564
 2274              		@ sp needed
 2275 0040 10BD     		pop	{r4, pc}
 2276              	.L101:
 583:Core/Src/main.c ****   }
 2277              		.loc 1 583 5 is_stmt 1 view .LVU565
 2278 0042 FFF7FEFF 		bl	Error_Handler
 2279              	.LVL158:
 2280              	.L103:
 2281 0046 C046     		.align	2
 2282              	.L102:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 65


 2283 0048 00000000 		.word	hspi1
 2284 004c 00300140 		.word	1073819648
 2285              		.cfi_endproc
 2286              	.LFE68:
 2288              		.section	.text.MX_TIM3_Init,"ax",%progbits
 2289              		.align	1
 2290              		.syntax unified
 2291              		.code	16
 2292              		.thumb_func
 2294              	MX_TIM3_Init:
 2295              	.LFB69:
 597:Core/Src/main.c **** 
 2296              		.loc 1 597 1 view -0
 2297              		.cfi_startproc
 2298              		@ args = 0, pretend = 0, frame = 56
 2299              		@ frame_needed = 0, uses_anonymous_args = 0
 2300 0000 00B5     		push	{lr}
 2301              		.cfi_def_cfa_offset 4
 2302              		.cfi_offset 14, -4
 2303 0002 8FB0     		sub	sp, sp, #60
 2304              		.cfi_def_cfa_offset 64
 603:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2305              		.loc 1 603 3 view .LVU567
 603:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2306              		.loc 1 603 26 is_stmt 0 view .LVU568
 2307 0004 1022     		movs	r2, #16
 2308 0006 0021     		movs	r1, #0
 2309 0008 0AA8     		add	r0, sp, #40
 2310 000a FFF7FEFF 		bl	memset
 2311              	.LVL159:
 604:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2312              		.loc 1 604 3 is_stmt 1 view .LVU569
 604:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2313              		.loc 1 604 27 is_stmt 0 view .LVU570
 2314 000e 0822     		movs	r2, #8
 2315 0010 0021     		movs	r1, #0
 2316 0012 08A8     		add	r0, sp, #32
 2317 0014 FFF7FEFF 		bl	memset
 2318              	.LVL160:
 605:Core/Src/main.c **** 
 2319              		.loc 1 605 3 is_stmt 1 view .LVU571
 605:Core/Src/main.c **** 
 2320              		.loc 1 605 22 is_stmt 0 view .LVU572
 2321 0018 1C22     		movs	r2, #28
 2322 001a 0021     		movs	r1, #0
 2323 001c 01A8     		add	r0, sp, #4
 2324 001e FFF7FEFF 		bl	memset
 2325              	.LVL161:
 610:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 2326              		.loc 1 610 3 is_stmt 1 view .LVU573
 610:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 2327              		.loc 1 610 18 is_stmt 0 view .LVU574
 2328 0022 2148     		ldr	r0, .L115
 2329 0024 214B     		ldr	r3, .L115+4
 2330 0026 0360     		str	r3, [r0]
 611:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2331              		.loc 1 611 3 is_stmt 1 view .LVU575
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 66


 611:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2332              		.loc 1 611 24 is_stmt 0 view .LVU576
 2333 0028 0023     		movs	r3, #0
 2334 002a 4360     		str	r3, [r0, #4]
 612:Core/Src/main.c ****   htim3.Init.Period = 7;
 2335              		.loc 1 612 3 is_stmt 1 view .LVU577
 612:Core/Src/main.c ****   htim3.Init.Period = 7;
 2336              		.loc 1 612 26 is_stmt 0 view .LVU578
 2337 002c 8360     		str	r3, [r0, #8]
 613:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2338              		.loc 1 613 3 is_stmt 1 view .LVU579
 613:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2339              		.loc 1 613 21 is_stmt 0 view .LVU580
 2340 002e 0722     		movs	r2, #7
 2341 0030 C260     		str	r2, [r0, #12]
 614:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2342              		.loc 1 614 3 is_stmt 1 view .LVU581
 614:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2343              		.loc 1 614 28 is_stmt 0 view .LVU582
 2344 0032 0361     		str	r3, [r0, #16]
 615:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 2345              		.loc 1 615 3 is_stmt 1 view .LVU583
 615:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 2346              		.loc 1 615 32 is_stmt 0 view .LVU584
 2347 0034 8361     		str	r3, [r0, #24]
 616:Core/Src/main.c ****   {
 2348              		.loc 1 616 3 is_stmt 1 view .LVU585
 616:Core/Src/main.c ****   {
 2349              		.loc 1 616 7 is_stmt 0 view .LVU586
 2350 0036 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2351              	.LVL162:
 616:Core/Src/main.c ****   {
 2352              		.loc 1 616 6 view .LVU587
 2353 003a 0028     		cmp	r0, #0
 2354 003c 29D1     		bne	.L110
 620:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 2355              		.loc 1 620 3 is_stmt 1 view .LVU588
 620:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 2356              		.loc 1 620 34 is_stmt 0 view .LVU589
 2357 003e 8023     		movs	r3, #128
 2358 0040 5B01     		lsls	r3, r3, #5
 2359 0042 0A93     		str	r3, [sp, #40]
 621:Core/Src/main.c ****   {
 2360              		.loc 1 621 3 is_stmt 1 view .LVU590
 621:Core/Src/main.c ****   {
 2361              		.loc 1 621 7 is_stmt 0 view .LVU591
 2362 0044 1848     		ldr	r0, .L115
 2363 0046 0AA9     		add	r1, sp, #40
 2364 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2365              	.LVL163:
 621:Core/Src/main.c ****   {
 2366              		.loc 1 621 6 view .LVU592
 2367 004c 0028     		cmp	r0, #0
 2368 004e 22D1     		bne	.L111
 625:Core/Src/main.c ****   {
 2369              		.loc 1 625 3 is_stmt 1 view .LVU593
 625:Core/Src/main.c ****   {
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 67


 2370              		.loc 1 625 7 is_stmt 0 view .LVU594
 2371 0050 1548     		ldr	r0, .L115
 2372 0052 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2373              	.LVL164:
 625:Core/Src/main.c ****   {
 2374              		.loc 1 625 6 view .LVU595
 2375 0056 0028     		cmp	r0, #0
 2376 0058 1FD1     		bne	.L112
 629:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2377              		.loc 1 629 3 is_stmt 1 view .LVU596
 629:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2378              		.loc 1 629 37 is_stmt 0 view .LVU597
 2379 005a 0023     		movs	r3, #0
 2380 005c 0893     		str	r3, [sp, #32]
 630:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2381              		.loc 1 630 3 is_stmt 1 view .LVU598
 630:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2382              		.loc 1 630 33 is_stmt 0 view .LVU599
 2383 005e 0993     		str	r3, [sp, #36]
 631:Core/Src/main.c ****   {
 2384              		.loc 1 631 3 is_stmt 1 view .LVU600
 631:Core/Src/main.c ****   {
 2385              		.loc 1 631 7 is_stmt 0 view .LVU601
 2386 0060 1148     		ldr	r0, .L115
 2387 0062 08A9     		add	r1, sp, #32
 2388 0064 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2389              	.LVL165:
 631:Core/Src/main.c ****   {
 2390              		.loc 1 631 6 view .LVU602
 2391 0068 0028     		cmp	r0, #0
 2392 006a 18D1     		bne	.L113
 635:Core/Src/main.c ****   sConfigOC.Pulse = 4;
 2393              		.loc 1 635 3 is_stmt 1 view .LVU603
 635:Core/Src/main.c ****   sConfigOC.Pulse = 4;
 2394              		.loc 1 635 20 is_stmt 0 view .LVU604
 2395 006c 6023     		movs	r3, #96
 2396 006e 0193     		str	r3, [sp, #4]
 636:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2397              		.loc 1 636 3 is_stmt 1 view .LVU605
 636:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2398              		.loc 1 636 19 is_stmt 0 view .LVU606
 2399 0070 5C3B     		subs	r3, r3, #92
 2400 0072 0293     		str	r3, [sp, #8]
 637:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 2401              		.loc 1 637 3 is_stmt 1 view .LVU607
 637:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 2402              		.loc 1 637 24 is_stmt 0 view .LVU608
 2403 0074 0022     		movs	r2, #0
 2404 0076 0392     		str	r2, [sp, #12]
 638:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 2405              		.loc 1 638 3 is_stmt 1 view .LVU609
 638:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 2406              		.loc 1 638 24 is_stmt 0 view .LVU610
 2407 0078 0593     		str	r3, [sp, #20]
 639:Core/Src/main.c ****   {
 2408              		.loc 1 639 3 is_stmt 1 view .LVU611
 639:Core/Src/main.c ****   {
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 68


 2409              		.loc 1 639 7 is_stmt 0 view .LVU612
 2410 007a 0B48     		ldr	r0, .L115
 2411 007c 0C32     		adds	r2, r2, #12
 2412 007e 01A9     		add	r1, sp, #4
 2413 0080 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2414              	.LVL166:
 639:Core/Src/main.c ****   {
 2415              		.loc 1 639 6 view .LVU613
 2416 0084 0028     		cmp	r0, #0
 2417 0086 0CD1     		bne	.L114
 646:Core/Src/main.c **** 
 2418              		.loc 1 646 3 is_stmt 1 view .LVU614
 2419 0088 0748     		ldr	r0, .L115
 2420 008a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2421              	.LVL167:
 648:Core/Src/main.c **** 
 2422              		.loc 1 648 1 is_stmt 0 view .LVU615
 2423 008e 0FB0     		add	sp, sp, #60
 2424              		@ sp needed
 2425 0090 00BD     		pop	{pc}
 2426              	.L110:
 618:Core/Src/main.c ****   }
 2427              		.loc 1 618 5 is_stmt 1 view .LVU616
 2428 0092 FFF7FEFF 		bl	Error_Handler
 2429              	.LVL168:
 2430              	.L111:
 623:Core/Src/main.c ****   }
 2431              		.loc 1 623 5 view .LVU617
 2432 0096 FFF7FEFF 		bl	Error_Handler
 2433              	.LVL169:
 2434              	.L112:
 627:Core/Src/main.c ****   }
 2435              		.loc 1 627 5 view .LVU618
 2436 009a FFF7FEFF 		bl	Error_Handler
 2437              	.LVL170:
 2438              	.L113:
 633:Core/Src/main.c ****   }
 2439              		.loc 1 633 5 view .LVU619
 2440 009e FFF7FEFF 		bl	Error_Handler
 2441              	.LVL171:
 2442              	.L114:
 641:Core/Src/main.c ****   }
 2443              		.loc 1 641 5 view .LVU620
 2444 00a2 FFF7FEFF 		bl	Error_Handler
 2445              	.LVL172:
 2446              	.L116:
 2447 00a6 C046     		.align	2
 2448              	.L115:
 2449 00a8 00000000 		.word	htim3
 2450 00ac 00040040 		.word	1073742848
 2451              		.cfi_endproc
 2452              	.LFE69:
 2454              		.section	.text.MX_TIM16_Init,"ax",%progbits
 2455              		.align	1
 2456              		.syntax unified
 2457              		.code	16
 2458              		.thumb_func
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 69


 2460              	MX_TIM16_Init:
 2461              	.LFB71:
 687:Core/Src/main.c **** 
 2462              		.loc 1 687 1 view -0
 2463              		.cfi_startproc
 2464              		@ args = 0, pretend = 0, frame = 0
 2465              		@ frame_needed = 0, uses_anonymous_args = 0
 2466 0000 10B5     		push	{r4, lr}
 2467              		.cfi_def_cfa_offset 8
 2468              		.cfi_offset 4, -8
 2469              		.cfi_offset 14, -4
 696:Core/Src/main.c ****   htim16.Init.Prescaler = 47;
 2470              		.loc 1 696 3 view .LVU622
 696:Core/Src/main.c ****   htim16.Init.Prescaler = 47;
 2471              		.loc 1 696 19 is_stmt 0 view .LVU623
 2472 0002 0948     		ldr	r0, .L120
 2473 0004 094B     		ldr	r3, .L120+4
 2474 0006 0360     		str	r3, [r0]
 697:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 2475              		.loc 1 697 3 is_stmt 1 view .LVU624
 697:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 2476              		.loc 1 697 25 is_stmt 0 view .LVU625
 2477 0008 2F23     		movs	r3, #47
 2478 000a 4360     		str	r3, [r0, #4]
 698:Core/Src/main.c ****   htim16.Init.Period = 65535;
 2479              		.loc 1 698 3 is_stmt 1 view .LVU626
 698:Core/Src/main.c ****   htim16.Init.Period = 65535;
 2480              		.loc 1 698 27 is_stmt 0 view .LVU627
 2481 000c 0023     		movs	r3, #0
 2482 000e 8360     		str	r3, [r0, #8]
 699:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2483              		.loc 1 699 3 is_stmt 1 view .LVU628
 699:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2484              		.loc 1 699 22 is_stmt 0 view .LVU629
 2485 0010 074A     		ldr	r2, .L120+8
 2486 0012 C260     		str	r2, [r0, #12]
 700:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 2487              		.loc 1 700 3 is_stmt 1 view .LVU630
 700:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 2488              		.loc 1 700 29 is_stmt 0 view .LVU631
 2489 0014 0361     		str	r3, [r0, #16]
 701:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2490              		.loc 1 701 3 is_stmt 1 view .LVU632
 701:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2491              		.loc 1 701 33 is_stmt 0 view .LVU633
 2492 0016 4361     		str	r3, [r0, #20]
 702:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 2493              		.loc 1 702 3 is_stmt 1 view .LVU634
 702:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 2494              		.loc 1 702 33 is_stmt 0 view .LVU635
 2495 0018 8361     		str	r3, [r0, #24]
 703:Core/Src/main.c ****   {
 2496              		.loc 1 703 3 is_stmt 1 view .LVU636
 703:Core/Src/main.c ****   {
 2497              		.loc 1 703 7 is_stmt 0 view .LVU637
 2498 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 2499              	.LVL173:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 70


 703:Core/Src/main.c ****   {
 2500              		.loc 1 703 6 view .LVU638
 2501 001e 0028     		cmp	r0, #0
 2502 0020 00D1     		bne	.L119
 711:Core/Src/main.c **** 
 2503              		.loc 1 711 1 view .LVU639
 2504              		@ sp needed
 2505 0022 10BD     		pop	{r4, pc}
 2506              	.L119:
 705:Core/Src/main.c ****   }
 2507              		.loc 1 705 5 is_stmt 1 view .LVU640
 2508 0024 FFF7FEFF 		bl	Error_Handler
 2509              	.LVL174:
 2510              	.L121:
 2511              		.align	2
 2512              	.L120:
 2513 0028 00000000 		.word	htim16
 2514 002c 00440140 		.word	1073824768
 2515 0030 FFFF0000 		.word	65535
 2516              		.cfi_endproc
 2517              	.LFE71:
 2519              		.section	.text.MX_TIM14_Init,"ax",%progbits
 2520              		.align	1
 2521              		.syntax unified
 2522              		.code	16
 2523              		.thumb_func
 2525              	MX_TIM14_Init:
 2526              	.LFB70:
 656:Core/Src/main.c **** 
 2527              		.loc 1 656 1 view -0
 2528              		.cfi_startproc
 2529              		@ args = 0, pretend = 0, frame = 0
 2530              		@ frame_needed = 0, uses_anonymous_args = 0
 2531 0000 10B5     		push	{r4, lr}
 2532              		.cfi_def_cfa_offset 8
 2533              		.cfi_offset 4, -8
 2534              		.cfi_offset 14, -4
 665:Core/Src/main.c ****   htim14.Init.Prescaler = 11;
 2535              		.loc 1 665 3 view .LVU642
 665:Core/Src/main.c ****   htim14.Init.Prescaler = 11;
 2536              		.loc 1 665 19 is_stmt 0 view .LVU643
 2537 0002 0948     		ldr	r0, .L125
 2538 0004 094B     		ldr	r3, .L125+4
 2539 0006 0360     		str	r3, [r0]
 666:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 2540              		.loc 1 666 3 is_stmt 1 view .LVU644
 666:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 2541              		.loc 1 666 25 is_stmt 0 view .LVU645
 2542 0008 0B23     		movs	r3, #11
 2543 000a 4360     		str	r3, [r0, #4]
 667:Core/Src/main.c ****   htim14.Init.Period = 10000;
 2544              		.loc 1 667 3 is_stmt 1 view .LVU646
 667:Core/Src/main.c ****   htim14.Init.Period = 10000;
 2545              		.loc 1 667 27 is_stmt 0 view .LVU647
 2546 000c 0023     		movs	r3, #0
 2547 000e 8360     		str	r3, [r0, #8]
 668:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 71


 2548              		.loc 1 668 3 is_stmt 1 view .LVU648
 668:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2549              		.loc 1 668 22 is_stmt 0 view .LVU649
 2550 0010 074A     		ldr	r2, .L125+8
 2551 0012 C260     		str	r2, [r0, #12]
 669:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2552              		.loc 1 669 3 is_stmt 1 view .LVU650
 669:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2553              		.loc 1 669 29 is_stmt 0 view .LVU651
 2554 0014 0361     		str	r3, [r0, #16]
 670:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 2555              		.loc 1 670 3 is_stmt 1 view .LVU652
 670:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 2556              		.loc 1 670 33 is_stmt 0 view .LVU653
 2557 0016 8361     		str	r3, [r0, #24]
 671:Core/Src/main.c ****   {
 2558              		.loc 1 671 3 is_stmt 1 view .LVU654
 671:Core/Src/main.c ****   {
 2559              		.loc 1 671 7 is_stmt 0 view .LVU655
 2560 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2561              	.LVL175:
 671:Core/Src/main.c ****   {
 2562              		.loc 1 671 6 view .LVU656
 2563 001c 0028     		cmp	r0, #0
 2564 001e 00D1     		bne	.L124
 679:Core/Src/main.c **** 
 2565              		.loc 1 679 1 view .LVU657
 2566              		@ sp needed
 2567 0020 10BD     		pop	{r4, pc}
 2568              	.L124:
 673:Core/Src/main.c ****   }
 2569              		.loc 1 673 5 is_stmt 1 view .LVU658
 2570 0022 FFF7FEFF 		bl	Error_Handler
 2571              	.LVL176:
 2572              	.L126:
 2573 0026 C046     		.align	2
 2574              	.L125:
 2575 0028 00000000 		.word	htim14
 2576 002c 00200040 		.word	1073750016
 2577 0030 10270000 		.word	10000
 2578              		.cfi_endproc
 2579              	.LFE70:
 2581              		.section	.text.SystemClock_Config,"ax",%progbits
 2582              		.align	1
 2583              		.global	SystemClock_Config
 2584              		.syntax unified
 2585              		.code	16
 2586              		.thumb_func
 2588              	SystemClock_Config:
 2589              	.LFB66:
 481:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2590              		.loc 1 481 1 view -0
 2591              		.cfi_startproc
 2592              		@ args = 0, pretend = 0, frame = 72
 2593              		@ frame_needed = 0, uses_anonymous_args = 0
 2594 0000 00B5     		push	{lr}
 2595              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 72


 2596              		.cfi_offset 14, -4
 2597 0002 93B0     		sub	sp, sp, #76
 2598              		.cfi_def_cfa_offset 80
 482:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2599              		.loc 1 482 3 view .LVU660
 482:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2600              		.loc 1 482 22 is_stmt 0 view .LVU661
 2601 0004 3422     		movs	r2, #52
 2602 0006 0021     		movs	r1, #0
 2603 0008 05A8     		add	r0, sp, #20
 2604 000a FFF7FEFF 		bl	memset
 2605              	.LVL177:
 483:Core/Src/main.c **** 
 2606              		.loc 1 483 3 is_stmt 1 view .LVU662
 483:Core/Src/main.c **** 
 2607              		.loc 1 483 22 is_stmt 0 view .LVU663
 2608 000e 1022     		movs	r2, #16
 2609 0010 0021     		movs	r1, #0
 2610 0012 01A8     		add	r0, sp, #4
 2611 0014 FFF7FEFF 		bl	memset
 2612              	.LVL178:
 488:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2613              		.loc 1 488 3 is_stmt 1 view .LVU664
 488:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2614              		.loc 1 488 36 is_stmt 0 view .LVU665
 2615 0018 0223     		movs	r3, #2
 2616 001a 0593     		str	r3, [sp, #20]
 489:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2617              		.loc 1 489 3 is_stmt 1 view .LVU666
 489:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2618              		.loc 1 489 30 is_stmt 0 view .LVU667
 2619 001c 0122     		movs	r2, #1
 2620 001e 0892     		str	r2, [sp, #32]
 490:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2621              		.loc 1 490 3 is_stmt 1 view .LVU668
 490:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2622              		.loc 1 490 41 is_stmt 0 view .LVU669
 2623 0020 0F32     		adds	r2, r2, #15
 2624 0022 0992     		str	r2, [sp, #36]
 491:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 2625              		.loc 1 491 3 is_stmt 1 view .LVU670
 491:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 2626              		.loc 1 491 34 is_stmt 0 view .LVU671
 2627 0024 0E93     		str	r3, [sp, #56]
 492:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 2628              		.loc 1 492 3 is_stmt 1 view .LVU672
 492:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 2629              		.loc 1 492 35 is_stmt 0 view .LVU673
 2630 0026 8023     		movs	r3, #128
 2631 0028 1B02     		lsls	r3, r3, #8
 2632 002a 0F93     		str	r3, [sp, #60]
 493:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 2633              		.loc 1 493 3 is_stmt 1 view .LVU674
 493:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 2634              		.loc 1 493 32 is_stmt 0 view .LVU675
 2635 002c 8023     		movs	r3, #128
 2636 002e 5B03     		lsls	r3, r3, #13
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 73


 2637 0030 1093     		str	r3, [sp, #64]
 494:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2638              		.loc 1 494 3 is_stmt 1 view .LVU676
 495:Core/Src/main.c ****   {
 2639              		.loc 1 495 3 view .LVU677
 495:Core/Src/main.c ****   {
 2640              		.loc 1 495 7 is_stmt 0 view .LVU678
 2641 0032 05A8     		add	r0, sp, #20
 2642 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 2643              	.LVL179:
 495:Core/Src/main.c ****   {
 2644              		.loc 1 495 6 view .LVU679
 2645 0038 0028     		cmp	r0, #0
 2646 003a 0ED1     		bne	.L130
 502:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 2647              		.loc 1 502 3 is_stmt 1 view .LVU680
 502:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 2648              		.loc 1 502 31 is_stmt 0 view .LVU681
 2649 003c 0723     		movs	r3, #7
 2650 003e 0193     		str	r3, [sp, #4]
 504:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2651              		.loc 1 504 3 is_stmt 1 view .LVU682
 504:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2652              		.loc 1 504 34 is_stmt 0 view .LVU683
 2653 0040 053B     		subs	r3, r3, #5
 2654 0042 0293     		str	r3, [sp, #8]
 505:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2655              		.loc 1 505 3 is_stmt 1 view .LVU684
 505:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2656              		.loc 1 505 35 is_stmt 0 view .LVU685
 2657 0044 0023     		movs	r3, #0
 2658 0046 0393     		str	r3, [sp, #12]
 506:Core/Src/main.c **** 
 2659              		.loc 1 506 3 is_stmt 1 view .LVU686
 506:Core/Src/main.c **** 
 2660              		.loc 1 506 36 is_stmt 0 view .LVU687
 2661 0048 0493     		str	r3, [sp, #16]
 508:Core/Src/main.c ****   {
 2662              		.loc 1 508 3 is_stmt 1 view .LVU688
 508:Core/Src/main.c ****   {
 2663              		.loc 1 508 7 is_stmt 0 view .LVU689
 2664 004a 0121     		movs	r1, #1
 2665 004c 01A8     		add	r0, sp, #4
 2666 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2667              	.LVL180:
 508:Core/Src/main.c ****   {
 2668              		.loc 1 508 6 view .LVU690
 2669 0052 0028     		cmp	r0, #0
 2670 0054 03D1     		bne	.L131
 512:Core/Src/main.c **** 
 2671              		.loc 1 512 1 view .LVU691
 2672 0056 13B0     		add	sp, sp, #76
 2673              		@ sp needed
 2674 0058 00BD     		pop	{pc}
 2675              	.L130:
 497:Core/Src/main.c ****   }
 2676              		.loc 1 497 5 is_stmt 1 view .LVU692
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 74


 2677 005a FFF7FEFF 		bl	Error_Handler
 2678              	.LVL181:
 2679              	.L131:
 510:Core/Src/main.c ****   }
 2680              		.loc 1 510 5 view .LVU693
 2681 005e FFF7FEFF 		bl	Error_Handler
 2682              	.LVL182:
 2683              		.cfi_endproc
 2684              	.LFE66:
 2686              		.section	.text.main,"ax",%progbits
 2687              		.align	1
 2688              		.global	main
 2689              		.syntax unified
 2690              		.code	16
 2691              		.thumb_func
 2693              	main:
 2694              	.LFB65:
 413:Core/Src/main.c **** 
 2695              		.loc 1 413 1 view -0
 2696              		.cfi_startproc
 2697              		@ Volatile: function does not return.
 2698              		@ args = 0, pretend = 0, frame = 0
 2699              		@ frame_needed = 0, uses_anonymous_args = 0
 2700 0000 10B5     		push	{r4, lr}
 2701              		.cfi_def_cfa_offset 8
 2702              		.cfi_offset 4, -8
 2703              		.cfi_offset 14, -4
 417:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(TIM14_IRQn);
 2704              		.loc 1 417 3 view .LVU695
 2705 0002 0620     		movs	r0, #6
 2706 0004 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 2707              	.LVL183:
 418:Core/Src/main.c **** 
 2708              		.loc 1 418 3 view .LVU696
 2709 0008 1320     		movs	r0, #19
 2710 000a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 2711              	.LVL184:
 425:Core/Src/main.c **** 
 2712              		.loc 1 425 3 view .LVU697
 2713 000e FFF7FEFF 		bl	HAL_Init
 2714              	.LVL185:
 432:Core/Src/main.c **** 
 2715              		.loc 1 432 3 view .LVU698
 2716 0012 FFF7FEFF 		bl	SystemClock_Config
 2717              	.LVL186:
 439:Core/Src/main.c ****   MX_CAN_Init();
 2718              		.loc 1 439 3 view .LVU699
 2719 0016 FFF7FEFF 		bl	MX_GPIO_Init
 2720              	.LVL187:
 440:Core/Src/main.c ****   MX_SPI1_Init();
 2721              		.loc 1 440 3 view .LVU700
 2722 001a FFF7FEFF 		bl	MX_CAN_Init
 2723              	.LVL188:
 441:Core/Src/main.c ****   MX_TIM3_Init();
 2724              		.loc 1 441 3 view .LVU701
 2725 001e FFF7FEFF 		bl	MX_SPI1_Init
 2726              	.LVL189:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 75


 442:Core/Src/main.c ****   MX_TIM16_Init();
 2727              		.loc 1 442 3 view .LVU702
 2728 0022 FFF7FEFF 		bl	MX_TIM3_Init
 2729              	.LVL190:
 443:Core/Src/main.c ****   MX_TIM14_Init();
 2730              		.loc 1 443 3 view .LVU703
 2731 0026 FFF7FEFF 		bl	MX_TIM16_Init
 2732              	.LVL191:
 444:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 2733              		.loc 1 444 3 view .LVU704
 2734 002a FFF7FEFF 		bl	MX_TIM14_Init
 2735              	.LVL192:
 446:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim16);
 2736              		.loc 1 446 3 view .LVU705
 2737 002e 1648     		ldr	r0, .L134
 2738 0030 0C21     		movs	r1, #12
 2739 0032 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 2740              	.LVL193:
 447:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 2741              		.loc 1 447 3 view .LVU706
 2742 0036 1548     		ldr	r0, .L134+4
 2743 0038 FFF7FEFF 		bl	HAL_TIM_Base_Start
 2744              	.LVL194:
 448:Core/Src/main.c ****   
 2745              		.loc 1 448 3 view .LVU707
 2746 003c 9020     		movs	r0, #144
 2747 003e 0122     		movs	r2, #1
 2748 0040 1021     		movs	r1, #16
 2749 0042 C005     		lsls	r0, r0, #23
 2750 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2751              	.LVL195:
 450:Core/Src/main.c ****   can_setup();
 2752              		.loc 1 450 3 view .LVU708
 2753 0048 FFF7FEFF 		bl	addr_setup
 2754              	.LVL196:
 451:Core/Src/main.c ****   adc_configure();
 2755              		.loc 1 451 3 view .LVU709
 2756 004c FFF7FEFF 		bl	can_setup
 2757              	.LVL197:
 452:Core/Src/main.c **** 
 2758              		.loc 1 452 3 view .LVU710
 2759 0050 FFF7FEFF 		bl	adc_configure
 2760              	.LVL198:
 454:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan, CAN_IT_RX_FIFO0_MSG_PENDING);
 2761              		.loc 1 454 3 view .LVU711
 2762 0054 0E4C     		ldr	r4, .L134+8
 2763 0056 2000     		movs	r0, r4
 2764 0058 FFF7FEFF 		bl	HAL_CAN_Start
 2765              	.LVL199:
 455:Core/Src/main.c **** 
 2766              		.loc 1 455 3 view .LVU712
 2767 005c 0221     		movs	r1, #2
 2768 005e 2000     		movs	r0, r4
 2769 0060 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 2770              	.LVL200:
 457:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim14);
 2771              		.loc 1 457 3 view .LVU713
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 76


 2772 0064 0620     		movs	r0, #6
 2773 0066 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 2774              	.LVL201:
 458:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(TIM14_IRQn);
 2775              		.loc 1 458 3 view .LVU714
 2776 006a 0A48     		ldr	r0, .L134+12
 2777 006c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 2778              	.LVL202:
 459:Core/Src/main.c **** 
 2779              		.loc 1 459 3 view .LVU715
 2780 0070 1320     		movs	r0, #19
 2781 0072 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 2782              	.LVL203:
 2783              	.L133:
 465:Core/Src/main.c ****   {
 2784              		.loc 1 465 3 discriminator 1 view .LVU716
 467:Core/Src/main.c ****     HAL_Delay(500);
 2785              		.loc 1 467 5 discriminator 1 view .LVU717
 2786 0076 0121     		movs	r1, #1
 2787 0078 0748     		ldr	r0, .L134+16
 2788 007a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 2789              	.LVL204:
 468:Core/Src/main.c ****     /* USER CODE END WHILE */
 2790              		.loc 1 468 5 discriminator 1 view .LVU718
 2791 007e FA20     		movs	r0, #250
 2792 0080 4000     		lsls	r0, r0, #1
 2793 0082 FFF7FEFF 		bl	HAL_Delay
 2794              	.LVL205:
 465:Core/Src/main.c ****   {
 2795              		.loc 1 465 9 discriminator 1 view .LVU719
 2796 0086 F6E7     		b	.L133
 2797              	.L135:
 2798              		.align	2
 2799              	.L134:
 2800 0088 00000000 		.word	htim3
 2801 008c 00000000 		.word	htim16
 2802 0090 00000000 		.word	hcan
 2803 0094 00000000 		.word	htim14
 2804 0098 00140048 		.word	1207964672
 2805              		.cfi_endproc
 2806              	.LFE65:
 2808              		.global	tx_nst_data
 2809              		.section	.bss.tx_nst_data,"aw",%nobits
 2810              		.align	2
 2813              	tx_nst_data:
 2814 0000 00000000 		.space	8
 2814      00000000 
 2815              		.global	rx_nst_data
 2816              		.section	.bss.rx_nst_data,"aw",%nobits
 2817              		.align	2
 2820              	rx_nst_data:
 2821 0000 00000000 		.space	8
 2821      00000000 
 2822              		.global	can_std_channel
 2823              		.section	.bss.can_std_channel,"aw",%nobits
 2826              	can_std_channel:
 2827 0000 00       		.space	1
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 77


 2828              		.global	txMailbox
 2829              		.section	.bss.txMailbox,"aw",%nobits
 2830              		.align	2
 2833              	txMailbox:
 2834 0000 00000000 		.space	4
 2835              		.global	nst_state
 2836              		.section	.data.nst_state,"aw"
 2839              	nst_state:
 2840 0000 E0       		.byte	-32
 2841              		.global	nst_addr_base
 2842              		.section	.bss.nst_addr_base,"aw",%nobits
 2843              		.align	2
 2846              	nst_addr_base:
 2847 0000 00000000 		.space	4
 2848              		.global	std_state
 2849              		.section	.data.std_state,"aw"
 2852              	std_state:
 2853 0000 E0       		.byte	-32
 2854              		.global	std_addr_base
 2855              		.section	.data.std_addr_base,"aw"
 2856              		.align	2
 2859              	std_addr_base:
 2860 0000 00000100 		.word	65536
 2861              		.global	addr
 2862              		.section	.bss.addr,"aw",%nobits
 2865              	addr:
 2866 0000 00       		.space	1
 2867              		.global	adc_configured
 2868              		.section	.bss.adc_configured,"aw",%nobits
 2871              	adc_configured:
 2872 0000 00       		.space	1
 2873              		.global	adc_data
 2874              		.section	.bss.adc_data,"aw",%nobits
 2875              		.align	2
 2878              	adc_data:
 2879 0000 00000000 		.space	16
 2879      00000000 
 2879      00000000 
 2879      00000000 
 2880              		.global	filter
 2881              		.section	.bss.filter,"aw",%nobits
 2882              		.align	2
 2885              	filter:
 2886 0000 00000000 		.space	40
 2886      00000000 
 2886      00000000 
 2886      00000000 
 2886      00000000 
 2887              		.global	rxh_nst
 2888              		.section	.bss.rxh_nst,"aw",%nobits
 2889              		.align	2
 2892              	rxh_nst:
 2893 0000 00000000 		.space	28
 2893      00000000 
 2893      00000000 
 2893      00000000 
 2893      00000000 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 78


 2894              		.global	txh_nst
 2895              		.section	.bss.txh_nst,"aw",%nobits
 2896              		.align	2
 2899              	txh_nst:
 2900 0000 00000000 		.space	24
 2900      00000000 
 2900      00000000 
 2900      00000000 
 2900      00000000 
 2901              		.global	txh_std
 2902              		.section	.bss.txh_std,"aw",%nobits
 2903              		.align	2
 2906              	txh_std:
 2907 0000 00000000 		.space	96
 2907      00000000 
 2907      00000000 
 2907      00000000 
 2907      00000000 
 2908              		.global	htim16
 2909              		.section	.bss.htim16,"aw",%nobits
 2910              		.align	2
 2913              	htim16:
 2914 0000 00000000 		.space	72
 2914      00000000 
 2914      00000000 
 2914      00000000 
 2914      00000000 
 2915              		.global	htim14
 2916              		.section	.bss.htim14,"aw",%nobits
 2917              		.align	2
 2920              	htim14:
 2921 0000 00000000 		.space	72
 2921      00000000 
 2921      00000000 
 2921      00000000 
 2921      00000000 
 2922              		.global	htim3
 2923              		.section	.bss.htim3,"aw",%nobits
 2924              		.align	2
 2927              	htim3:
 2928 0000 00000000 		.space	72
 2928      00000000 
 2928      00000000 
 2928      00000000 
 2928      00000000 
 2929              		.global	hspi1
 2930              		.section	.bss.hspi1,"aw",%nobits
 2931              		.align	2
 2934              	hspi1:
 2935 0000 00000000 		.space	100
 2935      00000000 
 2935      00000000 
 2935      00000000 
 2935      00000000 
 2936              		.global	hcan
 2937              		.section	.bss.hcan,"aw",%nobits
 2938              		.align	2
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 79


 2941              	hcan:
 2942 0000 00000000 		.space	40
 2942      00000000 
 2942      00000000 
 2942      00000000 
 2942      00000000 
 2943              		.text
 2944              	.Letext0:
 2945              		.file 3 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 2946              		.file 4 "c:\\users\\xhex8\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2947              		.file 5 "c:\\users\\xhex8\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2948              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 2949              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 2950              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 2951              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 2952              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 2953              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_can.h"
 2954              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_spi.h"
 2955              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 2956              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 2957              		.file 15 "Core/Inc/main.h"
 2958              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 2959              		.file 17 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 2960              		.file 18 "<built-in>"
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 80


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:214    .text.MX_GPIO_Init:000000d0 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:220    .text.delay_us:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:226    .text.delay_us:00000000 delay_us
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:253    .text.delay_us:00000010 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2913   .bss.htim16:00000000 htim16
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:258    .text.addr_setup:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:264    .text.addr_setup:00000000 addr_setup
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:363    .text.addr_setup:00000058 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2865   .bss.addr:00000000 addr
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2859   .data.std_addr_base:00000000 std_addr_base
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:371    .text.can_setup:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:377    .text.can_setup:00000000 can_setup
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:516    .text.can_setup:0000007c $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2906   .bss.txh_std:00000000 txh_std
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2852   .data.std_state:00000000 std_state
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2899   .bss.txh_nst:00000000 txh_nst
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2846   .bss.nst_addr_base:00000000 nst_addr_base
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2885   .bss.filter:00000000 filter
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2941   .bss.hcan:00000000 hcan
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:530    .text.can_std_transmit:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:536    .text.can_std_transmit:00000000 can_std_transmit
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:586    .text.can_std_transmit:0000002c $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2833   .bss.txMailbox:00000000 txMailbox
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2878   .bss.adc_data:00000000 adc_data
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:594    .text.can_nst_transmit:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:600    .text.can_nst_transmit:00000000 can_nst_transmit
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:648    .text.can_nst_transmit:00000024 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2839   .data.nst_state:00000000 nst_state
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2813   .bss.tx_nst_data:00000000 tx_nst_data
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:658    .text.can_tx_transmit_timer_handler:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:664    .text.can_tx_transmit_timer_handler:00000000 can_tx_transmit_timer_handler
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:696    .text.can_tx_transmit_timer_handler:0000001c $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2826   .bss.can_std_channel:00000000 can_std_channel
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:701    .text.can_rx_handler:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:707    .text.can_rx_handler:00000000 can_rx_handler
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:721    .text.ads131m04_transfer_word:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:727    .text.ads131m04_transfer_word:00000000 ads131m04_transfer_word
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:820    .text.ads131m04_transfer_word:00000068 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2934   .bss.hspi1:00000000 hspi1
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:825    .text.ads131m04_transfer_frame:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:831    .text.ads131m04_transfer_frame:00000000 ads131m04_transfer_frame
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:916    .text.ads131m04_adc_format_convert:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:922    .text.ads131m04_adc_format_convert:00000000 ads131m04_adc_format_convert
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:954    .text.ads131m04_adc_format_convert:00000018 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:959    .text.ads131m04_read_adc_nonblocking:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:965    .text.ads131m04_read_adc_nonblocking:00000000 ads131m04_read_adc_nonblocking
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1038   .text.ads131m04_drdy_exti_handler:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1044   .text.ads131m04_drdy_exti_handler:00000000 ads131m04_drdy_exti_handler
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1075   .text.ads131m04_drdy_exti_handler:00000014 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2871   .bss.adc_configured:00000000 adc_configured
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1081   .text.ads131m04_cmd:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1087   .text.ads131m04_cmd:00000000 ads131m04_cmd
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1169   .text.ads131m04_reset:00000000 $t
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 81


C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1175   .text.ads131m04_reset:00000000 ads131m04_reset
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1205   .text.ads131m04_status:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1211   .text.ads131m04_status:00000000 ads131m04_status
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1243   .text.ads131m04_standby:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1249   .text.ads131m04_standby:00000000 ads131m04_standby
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1281   .text.ads131m04_wake:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1287   .text.ads131m04_wake:00000000 ads131m04_wake
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1319   .text.ads131m04_lock:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1325   .text.ads131m04_lock:00000000 ads131m04_lock
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1356   .text.ads131m04_lock:00000018 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1361   .text.ads131m04_unlock:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1367   .text.ads131m04_unlock:00000000 ads131m04_unlock
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1398   .text.ads131m04_unlock:00000018 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1403   .text.ads131m04_rreg:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1409   .text.ads131m04_rreg:00000000 ads131m04_rreg
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1455   .text.ads131m04_rreg:00000024 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1460   .text.ads131m04_rreg_multiple:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1466   .text.ads131m04_rreg_multiple:00000000 ads131m04_rreg_multiple
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1637   .text.ads131m04_rreg_multiple:000000ac $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1642   .text.ads131m04_wreg:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1648   .text.ads131m04_wreg:00000000 ads131m04_wreg
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1732   .text.ads131m04_wreg_multiple:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1738   .text.ads131m04_wreg_multiple:00000000 ads131m04_wreg_multiple
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1906   .text.ads131m04_test:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1912   .text.ads131m04_test:00000000 ads131m04_test
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1942   .text.adc_configure:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:1948   .text.adc_configure:00000000 adc_configure
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2030   .text.adc_configure:00000050 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2037   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2043   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2068   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000010 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2820   .bss.rx_nst_data:00000000 rx_nst_data
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2892   .bss.rxh_nst:00000000 rxh_nst
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2074   .text.Error_Handler:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2080   .text.Error_Handler:00000000 Error_Handler
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2112   .text.MX_CAN_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2117   .text.MX_CAN_Init:00000000 MX_CAN_Init
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2190   .text.MX_CAN_Init:0000003c $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2196   .text.MX_SPI1_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2201   .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2283   .text.MX_SPI1_Init:00000048 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2289   .text.MX_TIM3_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2294   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2449   .text.MX_TIM3_Init:000000a8 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2927   .bss.htim3:00000000 htim3
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2455   .text.MX_TIM16_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2460   .text.MX_TIM16_Init:00000000 MX_TIM16_Init
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2513   .text.MX_TIM16_Init:00000028 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2520   .text.MX_TIM14_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2525   .text.MX_TIM14_Init:00000000 MX_TIM14_Init
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2575   .text.MX_TIM14_Init:00000028 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2920   .bss.htim14:00000000 htim14
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2582   .text.SystemClock_Config:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2588   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2687   .text.main:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2693   .text.main:00000000 main
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2800   .text.main:00000088 $d
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s 			page 82


C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2810   .bss.tx_nst_data:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2817   .bss.rx_nst_data:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2827   .bss.can_std_channel:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2830   .bss.txMailbox:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2843   .bss.nst_addr_base:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2856   .data.std_addr_base:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2866   .bss.addr:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2872   .bss.adc_configured:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2875   .bss.adc_data:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2882   .bss.filter:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2889   .bss.rxh_nst:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2896   .bss.txh_nst:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2903   .bss.txh_std:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2910   .bss.htim16:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2917   .bss.htim14:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2924   .bss.htim3:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2931   .bss.hspi1:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\cc4d8LKx.s:2938   .bss.hcan:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_ReadPin
HAL_CAN_ConfigFilter
HAL_CAN_AddTxMessage
HAL_SPI_TransmitReceive
HAL_NVIC_DisableIRQ
HAL_CAN_GetRxMessage
HAL_CAN_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_PWM_Start
HAL_TIM_Base_Start
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_TIM_Base_Start_IT
HAL_GPIO_TogglePin
HAL_Delay
