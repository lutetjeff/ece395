ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB72:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 2


  34:Core/Src/main.c **** #define STD_READY 0xF0
  35:Core/Src/main.c **** #define STD_STARTUP 0xE0
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** #define NST_INSTR 0xC0
  38:Core/Src/main.c **** #define NST_STARTUP 0xE0
  39:Core/Src/main.c **** #define NST_FAILED 0xD0
  40:Core/Src/main.c **** #define NST_READY 0xF0
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** CAN_HandleTypeDef hcan;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  54:Core/Src/main.c **** TIM_HandleTypeDef htim14;
  55:Core/Src/main.c **** TIM_HandleTypeDef htim16;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE BEGIN PV */
  58:Core/Src/main.c **** // standard transmission (1ksps) - configured once and not modified
  59:Core/Src/main.c **** // transmit only, no receive defined
  60:Core/Src/main.c **** // format: 29-bit extended identifier
  61:Core/Src/main.c **** // id[28:16] = 0x0001 
  62:Core/Src/main.c **** // id[15:12] = 0x0
  63:Core/Src/main.c **** // id[11:8] = addr
  64:Core/Src/main.c **** // id[7:4] = 0xF if successful, 0xE if setting up
  65:Core/Src/main.c **** // id[3:0] = sensor # 
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** // new format: 11-bit standard identifier
  68:Core/Src/main.c **** // id[10:8] = 0x1
  69:Core/Src/main.c **** // id[7:4] = addr
  70:Core/Src/main.c **** // id[3:0] = sensor #
  71:Core/Src/main.c **** CAN_TxHeaderTypeDef txh_std[4];
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** // non standard transmission (higher priority than data)
  74:Core/Src/main.c **** // transmit and receive - receive means control signals, transmit for feedback
  75:Core/Src/main.c **** // id[28:16] = 0x0000
  76:Core/Src/main.c **** // id[15:12] = 0x0
  77:Core/Src/main.c **** // id[11:8] = addr
  78:Core/Src/main.c **** // id[7:4] = 0xF if successful, 0xE if setting up, 0xD if failed, 0xC if instruction
  79:Core/Src/main.c **** // id[3:0] = instruction
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** // new format: 11-bit standard identifier
  82:Core/Src/main.c **** // id[10:8] = 0x0
  83:Core/Src/main.c **** // id[7:4] = addr
  84:Core/Src/main.c **** // id[3:0] = instruction
  85:Core/Src/main.c **** CAN_TxHeaderTypeDef txh_nst;
  86:Core/Src/main.c **** CAN_RxHeaderTypeDef rxh_nst;
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** CAN_FilterTypeDef filter;
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** // ADC data array
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 3


  91:Core/Src/main.c **** int32_t adc_data[4];
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** // configuration
  94:Core/Src/main.c **** uint8_t adc_configured = 0;
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** // address
  97:Core/Src/main.c **** uint8_t addr = 0x00;
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** // for CAN
 100:Core/Src/main.c **** uint32_t std_addr_base = 0x100;
 101:Core/Src/main.c **** uint8_t std_state = STD_READY;
 102:Core/Src/main.c **** uint32_t nst_addr_base = 0x000;
 103:Core/Src/main.c **** uint8_t nst_state = NST_READY;
 104:Core/Src/main.c **** uint32_t txMailbox;
 105:Core/Src/main.c **** uint8_t can_std_channel = 0x00;
 106:Core/Src/main.c **** uint8_t rx_nst_data[8];
 107:Core/Src/main.c **** uint8_t tx_nst_data[8];
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** /* USER CODE END PV */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 112:Core/Src/main.c **** void SystemClock_Config(void);
 113:Core/Src/main.c **** static void MX_GPIO_Init(void);
 114:Core/Src/main.c **** static void MX_CAN_Init(void);
 115:Core/Src/main.c **** static void MX_SPI1_Init(void);
 116:Core/Src/main.c **** static void MX_TIM3_Init(void);
 117:Core/Src/main.c **** static void MX_TIM16_Init(void);
 118:Core/Src/main.c **** static void MX_TIM14_Init(void);
 119:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** /* USER CODE END PFP */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 124:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** void delay_us (uint16_t us)
 127:Core/Src/main.c **** {
 128:Core/Src/main.c **** 	__HAL_TIM_SET_COUNTER(&htim16,0);  
 129:Core/Src/main.c **** 	while (__HAL_TIM_GET_COUNTER(&htim16) < us);  
 130:Core/Src/main.c **** }
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** void addr_setup() {  
 133:Core/Src/main.c ****   uint8_t a0 = HAL_GPIO_ReadPin(A0_GPIO_Port, A0_Pin) & 1;
 134:Core/Src/main.c ****   uint8_t a1 = HAL_GPIO_ReadPin(A1_GPIO_Port, A1_Pin) & 1;
 135:Core/Src/main.c ****   uint8_t a2 = HAL_GPIO_ReadPin(A2_GPIO_Port, A2_Pin) & 1;
 136:Core/Src/main.c ****   uint8_t a3 = HAL_GPIO_ReadPin(A3_GPIO_Port, A3_Pin) & 1;
 137:Core/Src/main.c ****   addr = (a3 << 3) | (a2 << 2) | (a1 << 1) | a0;
 138:Core/Src/main.c ****   addr = (~addr) & 0x0F; // remove if dip s
 139:Core/Src/main.c ****   std_addr_base = 0x100 | (addr << 4);
 140:Core/Src/main.c **** }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** void can_setup() {
 143:Core/Src/main.c ****   // txh std
 144:Core/Src/main.c ****   for (int j = 0; j < 4; j++) {
 145:Core/Src/main.c ****     txh_std[j].DLC = 4; // send only top 8 bits of ADC data
 146:Core/Src/main.c ****     txh_std[j].StdId = std_addr_base | (addr << 4) | j; // not used
 147:Core/Src/main.c ****     txh_std[j].ExtId = 0; // not used std_addr_base | std_state | j;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 4


 148:Core/Src/main.c ****     txh_std[j].IDE = CAN_ID_STD;
 149:Core/Src/main.c ****     txh_std[j].RTR = CAN_RTR_DATA;
 150:Core/Src/main.c ****     txh_std[j].TransmitGlobalTime = DISABLE;
 151:Core/Src/main.c ****   }
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   // txh nst
 154:Core/Src/main.c ****   txh_nst.DLC = 4; // default
 155:Core/Src/main.c ****   txh_nst.StdId = nst_addr_base; // not used
 156:Core/Src/main.c ****   txh_nst.ExtId = 0; // not used nst_addr_base ;
 157:Core/Src/main.c ****   txh_nst.IDE = CAN_ID_STD;
 158:Core/Src/main.c ****   txh_nst.RTR = CAN_RTR_DATA;
 159:Core/Src/main.c ****   txh_nst.TransmitGlobalTime = DISABLE;
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   // filter config
 162:Core/Src/main.c ****   filter.FilterMaskIdHigh = 0x07F0;
 163:Core/Src/main.c ****   filter.FilterMaskIdLow = 0x07F0;
 164:Core/Src/main.c ****   filter.FilterIdHigh = 0x0000;
 165:Core/Src/main.c ****   filter.FilterIdLow = 0x0000 | (addr << 4);
 166:Core/Src/main.c ****   filter.FilterMode = CAN_FILTERMODE_IDMASK;
 167:Core/Src/main.c ****   filter.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 168:Core/Src/main.c ****   filter.FilterScale = CAN_FILTERSCALE_16BIT;
 169:Core/Src/main.c ****   filter.FilterActivation = CAN_FILTER_ENABLE;
 170:Core/Src/main.c ****   filter.FilterBank = 0x00; // use first filter bank
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   HAL_CAN_ConfigFilter(&hcan, &filter);
 173:Core/Src/main.c **** }
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** void can_std_transmit(uint8_t sensor) {
 176:Core/Src/main.c ****   uint8_t* adc_ptr = (uint8_t*) adc_data;
 177:Core/Src/main.c ****   uint8_t adc_data_conv[4];
 178:Core/Src/main.c ****   adc_data_conv[0] = adc_ptr[1];
 179:Core/Src/main.c ****   adc_data_conv[1] = adc_ptr[5];
 180:Core/Src/main.c ****   adc_data_conv[2] = adc_ptr[9];
 181:Core/Src/main.c ****   adc_data_conv[3] = adc_ptr[13];
 182:Core/Src/main.c ****   
 183:Core/Src/main.c ****     while (HAL_CAN_AddTxMessage(&hcan, &(txh_std[sensor]), adc_data_conv, &txMailbox) != HAL_OK) {
 184:Core/Src/main.c ****     // too many messages! FIXME
 185:Core/Src/main.c ****     delay_us(128); // delay one message
 186:Core/Src/main.c ****   } 
 187:Core/Src/main.c **** }
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** void can_nst_transmit(uint8_t cmd, uint8_t len) {
 190:Core/Src/main.c ****   txh_nst.ExtId = nst_addr_base | nst_state | cmd;
 191:Core/Src/main.c ****   // right now we can't transmit too many messages too quickly or they will be lost
 192:Core/Src/main.c ****   // we can use TX completion interrupts and a FIFO to fix this, but it may not be necessary
 193:Core/Src/main.c ****   if (HAL_CAN_AddTxMessage(&hcan, &txh_nst, tx_nst_data, &txMailbox) != HAL_OK) {
 194:Core/Src/main.c ****     // too many messages! FIXME
 195:Core/Src/main.c ****     while (1);
 196:Core/Src/main.c ****   }
 197:Core/Src/main.c **** }
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** void can_tx_transmit_timer_handler() {
 200:Core/Src/main.c ****   can_std_transmit(can_std_channel);
 201:Core/Src/main.c ****   //can_std_channel++;
 202:Core/Src/main.c ****   //can_std_channel %= 4;
 203:Core/Src/main.c **** }
 204:Core/Src/main.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 5


 205:Core/Src/main.c **** void can_rx_handler() {
 206:Core/Src/main.c ****   // handle various commands
 207:Core/Src/main.c ****   // parameters are in rxh and rx_nst_data
 208:Core/Src/main.c **** }
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** uint32_t ads131m04_transfer_word(uint16_t word) {
 211:Core/Src/main.c ****   uint8_t lower = word & 0xff;
 212:Core/Src/main.c ****   uint8_t upper = word >> 8;
 213:Core/Src/main.c ****   uint8_t zero = 0;
 214:Core/Src/main.c ****   uint8_t recv[3];
 215:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &upper, recv, 1, 0.1); // CMD
 216:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &lower, recv+1, 1, 0.1);
 217:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &zero, recv+2, 1, 0.1);
 218:Core/Src/main.c ****   return (recv[0] << 16) | (recv[1] << 8) | recv[2];
 219:Core/Src/main.c **** }
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** void ads131m04_transfer_frame(uint32_t* out, uint16_t* words, uint16_t tx_rx_delay) {
 222:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 223:Core/Src/main.c ****   
 224:Core/Src/main.c ****   for (uint8_t i = 0; i < 6; i++) {
 225:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 226:Core/Src/main.c ****   }
 227:Core/Src/main.c ****   // need to wait length of one word. at 6mhz this is 4us
 228:Core/Src/main.c ****   delay_us(4);
 229:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 230:Core/Src/main.c **** }
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** int32_t ads131m04_adc_format_convert(int32_t data){
 233:Core/Src/main.c ****   return ((data & 0x8000) ? -0x8000 : 0x0000) + (data & 0x7FFF);
 234:Core/Src/main.c **** }
 235:Core/Src/main.c **** 
 236:Core/Src/main.c **** void ads131m04_read_adc_nonblocking(int32_t* out) {
 237:Core/Src/main.c ****   uint32_t recv[24];
 238:Core/Src/main.c ****   uint16_t words[6] = {0, 0, 0, 0, 0, 0};
 239:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 240:Core/Src/main.c ****   ads131m04_transfer_frame(recv+12, words, 0);
 241:Core/Src/main.c ****   out[0] = ads131m04_adc_format_convert(recv[1]);
 242:Core/Src/main.c ****   out[1] = ads131m04_adc_format_convert(recv[2]);
 243:Core/Src/main.c ****   out[2] = ads131m04_adc_format_convert(recv[3]);
 244:Core/Src/main.c ****   out[3] = ads131m04_adc_format_convert(recv[4]);
 245:Core/Src/main.c **** }
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** void ads131m04_drdy_exti_handler() {
 248:Core/Src/main.c ****   if (adc_configured)
 249:Core/Src/main.c ****     ads131m04_read_adc_nonblocking(adc_data);
 250:Core/Src/main.c **** }
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** void ads131m04_cmd(uint16_t cmd, uint32_t* out, uint16_t tx_rx_delay) {
 253:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 254:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 255:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 256:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, tx_rx_delay);
 257:Core/Src/main.c ****   ads131m04_transfer_frame(out+6, zeros, 0);
 258:Core/Src/main.c ****   if (tx_rx_delay) delay_us(tx_rx_delay); 
 259:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 260:Core/Src/main.c **** }
 261:Core/Src/main.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 6


 262:Core/Src/main.c **** uint16_t ads131m04_reset() {
 263:Core/Src/main.c ****     uint32_t recv[12];
 264:Core/Src/main.c ****     ads131m04_cmd(0x0011, recv, 12); // reset time
 265:Core/Src/main.c ****     return recv[9];
 266:Core/Src/main.c **** }
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** uint16_t ads131m04_status() {
 269:Core/Src/main.c ****     uint32_t recv[12];
 270:Core/Src/main.c ****     ads131m04_cmd(0x0000, recv, 0);
 271:Core/Src/main.c ****     return recv[6] >> 8;
 272:Core/Src/main.c **** }
 273:Core/Src/main.c **** 
 274:Core/Src/main.c **** uint16_t ads131m04_standby() {
 275:Core/Src/main.c ****     uint32_t recv[12];
 276:Core/Src/main.c ****     ads131m04_cmd(0x0022, recv, 0);
 277:Core/Src/main.c ****     return recv[6] >> 8;
 278:Core/Src/main.c **** }
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** uint16_t ads131m04_wake() {
 281:Core/Src/main.c ****     uint32_t recv[12];
 282:Core/Src/main.c ****     ads131m04_cmd(0x0033, recv, 0);
 283:Core/Src/main.c ****     return recv[6] >> 8;
 284:Core/Src/main.c **** }
 285:Core/Src/main.c **** 
 286:Core/Src/main.c **** uint16_t ads131m04_lock() {
 287:Core/Src/main.c ****     uint32_t recv[12];
 288:Core/Src/main.c ****     ads131m04_cmd(0x0555, recv, 0);
 289:Core/Src/main.c ****     return recv[6] >> 8;
 290:Core/Src/main.c **** }
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** uint16_t ads131m04_unlock() {
 293:Core/Src/main.c ****     uint32_t recv[12];
 294:Core/Src/main.c ****     ads131m04_cmd(0x0655, recv, 0);
 295:Core/Src/main.c ****     return recv[6] >> 8;
 296:Core/Src/main.c **** }
 297:Core/Src/main.c **** 
 298:Core/Src/main.c **** // returns register value
 299:Core/Src/main.c **** uint16_t ads131m04_rreg(uint8_t reg) {
 300:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((reg & 0x3F) << 7);
 301:Core/Src/main.c ****     uint32_t recv[12];
 302:Core/Src/main.c ****     ads131m04_cmd(cmd, recv, 0);
 303:Core/Src/main.c ****     return recv[6] >> 8;
 304:Core/Src/main.c **** }
 305:Core/Src/main.c **** 
 306:Core/Src/main.c **** // read multiple registers
 307:Core/Src/main.c **** // returns read acknowledgement in out[0]
 308:Core/Src/main.c **** // returns register i in out[1+i]
 309:Core/Src/main.c **** void ads131m04_rreg_multiple(uint8_t start_reg, uint8_t count, uint32_t* out) {
 310:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 311:Core/Src/main.c ****   // if count is 1 then just use regular rreg and duplicate out[6] to out[7]
 312:Core/Src/main.c ****   if (count == 0) return;
 313:Core/Src/main.c ****   if (count == 1) {
 314:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((start_reg & 0x3F) << 7);
 315:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 316:Core/Src/main.c ****     out[7] = out[6];
 317:Core/Src/main.c ****     return;
 318:Core/Src/main.c ****   }
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 7


 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****   // write first frame asking to read
 321:Core/Src/main.c ****   uint16_t cmd = 0xA000 | ((start_reg & 0x3F) << 7) | ((count - 1) & 0x7F);
 322:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 323:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, 0);
 324:Core/Src/main.c **** 
 325:Core/Src/main.c ****   // manually transfer the second frame
 326:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 327:Core/Src/main.c ****   
 328:Core/Src/main.c ****   // write min(6, count + 2) zero words
 329:Core/Src/main.c ****   uint8_t max = (count < 4) ? 6 : (count + 2);
 330:Core/Src/main.c ****   for (uint8_t i = 0; i < max; i++) {
 331:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 332:Core/Src/main.c ****   }
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****   delay_us(4); // need to wait length of one word. at 6mhz this is 4us
 335:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 336:Core/Src/main.c **** 
 337:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 338:Core/Src/main.c **** }
 339:Core/Src/main.c **** 
 340:Core/Src/main.c **** // returns write acknowledgement
 341:Core/Src/main.c **** uint16_t ads131m04_wreg(uint8_t reg, uint16_t data) {
 342:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 343:Core/Src/main.c ****   uint16_t cmd = 0x6000 | ((reg & 0x3F) << 7);
 344:Core/Src/main.c ****   uint32_t recv[12];
 345:Core/Src/main.c ****   uint16_t words[6] = {cmd, data, 0, 0, 0, 0};
 346:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 347:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 348:Core/Src/main.c ****   ads131m04_transfer_frame(recv+6, zeros, 0);
 349:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 350:Core/Src/main.c ****   return recv[6] >> 8;
 351:Core/Src/main.c **** }
 352:Core/Src/main.c **** 
 353:Core/Src/main.c **** // returns write acknowledgement
 354:Core/Src/main.c **** uint16_t ads131m04_wreg_multiple(uint8_t start_reg, uint8_t count, uint16_t* data) {
 355:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 356:Core/Src/main.c ****   if (count == 0) return 0;
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   uint16_t cmd = 0x6000 | ((start_reg & 0x3F) << 7) | ((count - 1) & 0x7F);
 359:Core/Src/main.c ****   // manually transfer the first frame
 360:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   // write the command
 363:Core/Src/main.c ****   ads131m04_transfer_word(cmd);
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****   // write all registers to write
 366:Core/Src/main.c ****   for (uint8_t i = 0; i < count; i++) {
 367:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 368:Core/Src/main.c ****   }
 369:Core/Src/main.c **** 
 370:Core/Src/main.c ****   // pad if not written enough (need to have written at least 6 words)
 371:Core/Src/main.c ****   for (int8_t i = 0; i < 4 - count; i++) {
 372:Core/Src/main.c ****     ads131m04_transfer_word(0);
 373:Core/Src/main.c ****   }
 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****   // write one zero word
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 8


 376:Core/Src/main.c ****   ads131m04_transfer_word(0);
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   delay_us(4); // need to wait length of one word. at 6mhz this is 4us
 379:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****   // transfer the second frame to get the write acknowledgement
 382:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 383:Core/Src/main.c ****   uint32_t recv[12];
 384:Core/Src/main.c ****   ads131m04_transfer_frame(recv, zeros, 0);
 385:Core/Src/main.c **** 
 386:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 387:Core/Src/main.c ****   return recv[6] >> 8;  
 388:Core/Src/main.c **** }
 389:Core/Src/main.c **** 
 390:Core/Src/main.c **** // returns 1 if success, 0 if failed
 391:Core/Src/main.c **** uint8_t ads131m04_test() {
 392:Core/Src/main.c ****   uint16_t id = ads131m04_rreg(0x00);
 393:Core/Src/main.c ****   return id == 0x24;
 394:Core/Src/main.c **** }
 395:Core/Src/main.c **** 
 396:Core/Src/main.c **** // returns 1 if success, 0 if failed
 397:Core/Src/main.c **** uint8_t adc_configure() {
 398:Core/Src/main.c ****   uint8_t attempts = 0;
 399:Core/Src/main.c ****   while (ads131m04_reset()) {
 400:Core/Src/main.c ****     delay_us(10);
 401:Core/Src/main.c ****     attempts++;
 402:Core/Src/main.c ****     if (attempts > 64) break;
 403:Core/Src/main.c ****   };
 404:Core/Src/main.c ****   while (!ads131m04_test()) {
 405:Core/Src/main.c ****     delay_us(10);
 406:Core/Src/main.c ****     attempts++;
 407:Core/Src/main.c ****     if (attempts > 128) break;
 408:Core/Src/main.c ****   };
 409:Core/Src/main.c ****   uint16_t mode = 0x0110; // clear reset bit, disable all CRCs
 410:Core/Src/main.c ****   ads131m04_wreg(0x02, mode);
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****   uint8_t osr = 0b100; // 2048, results in a data rate of ~1.4ksps
 413:Core/Src/main.c ****   uint16_t clock = 0x0F03 | (osr << 2); // enable all, highest precision
 414:Core/Src/main.c ****   ads131m04_wreg(0x03, clock);
 415:Core/Src/main.c **** 
 416:Core/Src/main.c ****   uint8_t gain = 0b101; // 64
 417:Core/Src/main.c ****   uint16_t gain1 = (gain << 12) | (gain << 8) | (gain << 4) | gain;
 418:Core/Src/main.c ****   ads131m04_wreg(0x04, gain1);
 419:Core/Src/main.c **** 
 420:Core/Src/main.c ****   uint16_t cfg = 0x0000; // disable global chop and current detect
 421:Core/Src/main.c ****   ads131m04_wreg(0x06, cfg);
 422:Core/Src/main.c ****   
 423:Core/Src/main.c ****   adc_configured = 1;
 424:Core/Src/main.c **** 
 425:Core/Src/main.c ****   // add calibration here if we want to do that
 426:Core/Src/main.c ****   return 1;
 427:Core/Src/main.c **** }
 428:Core/Src/main.c **** 
 429:Core/Src/main.c **** /* USER CODE END 0 */
 430:Core/Src/main.c **** 
 431:Core/Src/main.c **** /**
 432:Core/Src/main.c ****   * @brief  The application entry point.
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 9


 433:Core/Src/main.c ****   * @retval int
 434:Core/Src/main.c ****   */
 435:Core/Src/main.c **** int main(void)
 436:Core/Src/main.c **** {
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 439:Core/Src/main.c ****   // disable IRQ until it's ready
 440:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 441:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(TIM14_IRQn);
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****   /* USER CODE END 1 */
 444:Core/Src/main.c **** 
 445:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 446:Core/Src/main.c **** 
 447:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 448:Core/Src/main.c ****   HAL_Init();
 449:Core/Src/main.c **** 
 450:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****   /* USER CODE END Init */
 453:Core/Src/main.c **** 
 454:Core/Src/main.c ****   /* Configure the system clock */
 455:Core/Src/main.c ****   SystemClock_Config();
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****   /* USER CODE END SysInit */
 460:Core/Src/main.c **** 
 461:Core/Src/main.c ****   /* Initialize all configured peripherals */
 462:Core/Src/main.c ****   MX_GPIO_Init();
 463:Core/Src/main.c ****   MX_CAN_Init();
 464:Core/Src/main.c ****   MX_SPI1_Init();
 465:Core/Src/main.c ****   MX_TIM3_Init();
 466:Core/Src/main.c ****   MX_TIM16_Init();
 467:Core/Src/main.c ****   MX_TIM14_Init();
 468:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 469:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 470:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim16);
 471:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 472:Core/Src/main.c ****   
 473:Core/Src/main.c ****   addr_setup();
 474:Core/Src/main.c ****   can_setup();
 475:Core/Src/main.c ****   adc_configure();
 476:Core/Src/main.c **** 
 477:Core/Src/main.c ****   HAL_CAN_Start(&hcan);
 478:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan, CAN_IT_RX_FIFO0_MSG_PENDING);
 479:Core/Src/main.c **** 
 480:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 481:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim14);
 482:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(TIM14_IRQn);
 483:Core/Src/main.c **** 
 484:Core/Src/main.c ****   /* USER CODE END 2 */
 485:Core/Src/main.c **** 
 486:Core/Src/main.c ****   /* Infinite loop */
 487:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 488:Core/Src/main.c ****   while (1)
 489:Core/Src/main.c ****   {
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 10


 490:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 491:Core/Src/main.c ****     HAL_Delay(500);
 492:Core/Src/main.c ****     /* USER CODE END WHILE */
 493:Core/Src/main.c **** 
 494:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 495:Core/Src/main.c ****   }
 496:Core/Src/main.c ****   /* USER CODE END 3 */
 497:Core/Src/main.c **** }
 498:Core/Src/main.c **** 
 499:Core/Src/main.c **** /**
 500:Core/Src/main.c ****   * @brief System Clock Configuration
 501:Core/Src/main.c ****   * @retval None
 502:Core/Src/main.c ****   */
 503:Core/Src/main.c **** void SystemClock_Config(void)
 504:Core/Src/main.c **** {
 505:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 506:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 507:Core/Src/main.c **** 
 508:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 509:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 510:Core/Src/main.c ****   */
 511:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 512:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 513:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 514:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 515:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 516:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 517:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 518:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 519:Core/Src/main.c ****   {
 520:Core/Src/main.c ****     Error_Handler();
 521:Core/Src/main.c ****   }
 522:Core/Src/main.c **** 
 523:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 524:Core/Src/main.c ****   */
 525:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 526:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 527:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 528:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 529:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 530:Core/Src/main.c **** 
 531:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 532:Core/Src/main.c ****   {
 533:Core/Src/main.c ****     Error_Handler();
 534:Core/Src/main.c ****   }
 535:Core/Src/main.c **** }
 536:Core/Src/main.c **** 
 537:Core/Src/main.c **** /**
 538:Core/Src/main.c ****   * @brief CAN Initialization Function
 539:Core/Src/main.c ****   * @param None
 540:Core/Src/main.c ****   * @retval None
 541:Core/Src/main.c ****   */
 542:Core/Src/main.c **** static void MX_CAN_Init(void)
 543:Core/Src/main.c **** {
 544:Core/Src/main.c **** 
 545:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 0 */
 546:Core/Src/main.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 11


 547:Core/Src/main.c ****   /* USER CODE END CAN_Init 0 */
 548:Core/Src/main.c **** 
 549:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 1 */
 550:Core/Src/main.c **** 
 551:Core/Src/main.c ****   /* USER CODE END CAN_Init 1 */
 552:Core/Src/main.c ****   hcan.Instance = CAN;
 553:Core/Src/main.c ****   hcan.Init.Prescaler = 3;
 554:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 555:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 556:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 557:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 558:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 559:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 560:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
 561:Core/Src/main.c ****   hcan.Init.AutoRetransmission = DISABLE;
 562:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 563:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 564:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 565:Core/Src/main.c ****   {
 566:Core/Src/main.c ****     Error_Handler();
 567:Core/Src/main.c ****   }
 568:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 2 */
 569:Core/Src/main.c **** 
 570:Core/Src/main.c ****   /* USER CODE END CAN_Init 2 */
 571:Core/Src/main.c **** 
 572:Core/Src/main.c **** }
 573:Core/Src/main.c **** 
 574:Core/Src/main.c **** /**
 575:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 576:Core/Src/main.c ****   * @param None
 577:Core/Src/main.c ****   * @retval None
 578:Core/Src/main.c ****   */
 579:Core/Src/main.c **** static void MX_SPI1_Init(void)
 580:Core/Src/main.c **** {
 581:Core/Src/main.c **** 
 582:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 583:Core/Src/main.c **** 
 584:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 585:Core/Src/main.c **** 
 586:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 587:Core/Src/main.c **** 
 588:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 589:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 590:Core/Src/main.c ****   hspi1.Instance = SPI1;
 591:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 592:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 593:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 594:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 595:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 596:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 597:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 598:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 599:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 600:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 601:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 602:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 603:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 12


 604:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 605:Core/Src/main.c ****   {
 606:Core/Src/main.c ****     Error_Handler();
 607:Core/Src/main.c ****   }
 608:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 609:Core/Src/main.c **** 
 610:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 611:Core/Src/main.c **** 
 612:Core/Src/main.c **** }
 613:Core/Src/main.c **** 
 614:Core/Src/main.c **** /**
 615:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 616:Core/Src/main.c ****   * @param None
 617:Core/Src/main.c ****   * @retval None
 618:Core/Src/main.c ****   */
 619:Core/Src/main.c **** static void MX_TIM3_Init(void)
 620:Core/Src/main.c **** {
 621:Core/Src/main.c **** 
 622:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 623:Core/Src/main.c **** 
 624:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 625:Core/Src/main.c **** 
 626:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 627:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 628:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 629:Core/Src/main.c **** 
 630:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 631:Core/Src/main.c **** 
 632:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 633:Core/Src/main.c ****   htim3.Instance = TIM3;
 634:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 635:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 636:Core/Src/main.c ****   htim3.Init.Period = 7;
 637:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 638:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 639:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 640:Core/Src/main.c ****   {
 641:Core/Src/main.c ****     Error_Handler();
 642:Core/Src/main.c ****   }
 643:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 644:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 645:Core/Src/main.c ****   {
 646:Core/Src/main.c ****     Error_Handler();
 647:Core/Src/main.c ****   }
 648:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 649:Core/Src/main.c ****   {
 650:Core/Src/main.c ****     Error_Handler();
 651:Core/Src/main.c ****   }
 652:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 653:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 654:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 655:Core/Src/main.c ****   {
 656:Core/Src/main.c ****     Error_Handler();
 657:Core/Src/main.c ****   }
 658:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 659:Core/Src/main.c ****   sConfigOC.Pulse = 4;
 660:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 13


 661:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 662:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 663:Core/Src/main.c ****   {
 664:Core/Src/main.c ****     Error_Handler();
 665:Core/Src/main.c ****   }
 666:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 667:Core/Src/main.c **** 
 668:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 669:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 670:Core/Src/main.c **** 
 671:Core/Src/main.c **** }
 672:Core/Src/main.c **** 
 673:Core/Src/main.c **** /**
 674:Core/Src/main.c ****   * @brief TIM14 Initialization Function
 675:Core/Src/main.c ****   * @param None
 676:Core/Src/main.c ****   * @retval None
 677:Core/Src/main.c ****   */
 678:Core/Src/main.c **** static void MX_TIM14_Init(void)
 679:Core/Src/main.c **** {
 680:Core/Src/main.c **** 
 681:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 0 */
 682:Core/Src/main.c **** 
 683:Core/Src/main.c ****   /* USER CODE END TIM14_Init 0 */
 684:Core/Src/main.c **** 
 685:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 1 */
 686:Core/Src/main.c **** 
 687:Core/Src/main.c ****   /* USER CODE END TIM14_Init 1 */
 688:Core/Src/main.c ****   htim14.Instance = TIM14;
 689:Core/Src/main.c ****   htim14.Init.Prescaler = 47;
 690:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 691:Core/Src/main.c ****   htim14.Init.Period = 1000;
 692:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 693:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 694:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 695:Core/Src/main.c ****   {
 696:Core/Src/main.c ****     Error_Handler();
 697:Core/Src/main.c ****   }
 698:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 2 */
 699:Core/Src/main.c **** 
 700:Core/Src/main.c ****   /* USER CODE END TIM14_Init 2 */
 701:Core/Src/main.c **** 
 702:Core/Src/main.c **** }
 703:Core/Src/main.c **** 
 704:Core/Src/main.c **** /**
 705:Core/Src/main.c ****   * @brief TIM16 Initialization Function
 706:Core/Src/main.c ****   * @param None
 707:Core/Src/main.c ****   * @retval None
 708:Core/Src/main.c ****   */
 709:Core/Src/main.c **** static void MX_TIM16_Init(void)
 710:Core/Src/main.c **** {
 711:Core/Src/main.c **** 
 712:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 0 */
 713:Core/Src/main.c **** 
 714:Core/Src/main.c ****   /* USER CODE END TIM16_Init 0 */
 715:Core/Src/main.c **** 
 716:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 1 */
 717:Core/Src/main.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 14


 718:Core/Src/main.c ****   /* USER CODE END TIM16_Init 1 */
 719:Core/Src/main.c ****   htim16.Instance = TIM16;
 720:Core/Src/main.c ****   htim16.Init.Prescaler = 47;
 721:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 722:Core/Src/main.c ****   htim16.Init.Period = 65535;
 723:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 724:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 725:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 726:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 727:Core/Src/main.c ****   {
 728:Core/Src/main.c ****     Error_Handler();
 729:Core/Src/main.c ****   }
 730:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 2 */
 731:Core/Src/main.c **** 
 732:Core/Src/main.c ****   /* USER CODE END TIM16_Init 2 */
 733:Core/Src/main.c **** 
 734:Core/Src/main.c **** }
 735:Core/Src/main.c **** 
 736:Core/Src/main.c **** /**
 737:Core/Src/main.c ****   * @brief GPIO Initialization Function
 738:Core/Src/main.c ****   * @param None
 739:Core/Src/main.c ****   * @retval None
 740:Core/Src/main.c ****   */
 741:Core/Src/main.c **** static void MX_GPIO_Init(void)
 742:Core/Src/main.c **** {
  26              		.loc 1 742 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              		.cfi_def_cfa_offset 20
  32              		.cfi_offset 4, -20
  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              		.cfi_def_cfa_offset 56
 743:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 743 3 view .LVU1
  40              		.loc 1 743 20 is_stmt 0 view .LVU2
  41 0004 1422     		movs	r2, #20
  42 0006 0021     		movs	r1, #0
  43 0008 03A8     		add	r0, sp, #12
  44 000a FFF7FEFF 		bl	memset
  45              	.LVL0:
 744:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 745:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 746:Core/Src/main.c **** 
 747:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 748:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  46              		.loc 1 748 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 748 3 view .LVU4
  49              		.loc 1 748 3 view .LVU5
  50 000e 304B     		ldr	r3, .L2
  51 0010 5A69     		ldr	r2, [r3, #20]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 15


  52 0012 8021     		movs	r1, #128
  53 0014 C903     		lsls	r1, r1, #15
  54 0016 0A43     		orrs	r2, r1
  55 0018 5A61     		str	r2, [r3, #20]
  56              		.loc 1 748 3 view .LVU6
  57 001a 5A69     		ldr	r2, [r3, #20]
  58 001c 0A40     		ands	r2, r1
  59 001e 0092     		str	r2, [sp]
  60              		.loc 1 748 3 view .LVU7
  61 0020 009A     		ldr	r2, [sp]
  62              	.LBE4:
  63              		.loc 1 748 3 view .LVU8
 749:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  64              		.loc 1 749 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 749 3 view .LVU10
  67              		.loc 1 749 3 view .LVU11
  68 0022 5A69     		ldr	r2, [r3, #20]
  69 0024 8021     		movs	r1, #128
  70 0026 8902     		lsls	r1, r1, #10
  71 0028 0A43     		orrs	r2, r1
  72 002a 5A61     		str	r2, [r3, #20]
  73              		.loc 1 749 3 view .LVU12
  74 002c 5A69     		ldr	r2, [r3, #20]
  75 002e 0A40     		ands	r2, r1
  76 0030 0192     		str	r2, [sp, #4]
  77              		.loc 1 749 3 view .LVU13
  78 0032 019A     		ldr	r2, [sp, #4]
  79              	.LBE5:
  80              		.loc 1 749 3 view .LVU14
 750:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  81              		.loc 1 750 3 view .LVU15
  82              	.LBB6:
  83              		.loc 1 750 3 view .LVU16
  84              		.loc 1 750 3 view .LVU17
  85 0034 5A69     		ldr	r2, [r3, #20]
  86 0036 8021     		movs	r1, #128
  87 0038 C902     		lsls	r1, r1, #11
  88 003a 0A43     		orrs	r2, r1
  89 003c 5A61     		str	r2, [r3, #20]
  90              		.loc 1 750 3 view .LVU18
  91 003e 5B69     		ldr	r3, [r3, #20]
  92 0040 0B40     		ands	r3, r1
  93 0042 0293     		str	r3, [sp, #8]
  94              		.loc 1 750 3 view .LVU19
  95 0044 029B     		ldr	r3, [sp, #8]
  96              	.LBE6:
  97              		.loc 1 750 3 view .LVU20
 751:Core/Src/main.c **** 
 752:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 753:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
  98              		.loc 1 753 3 view .LVU21
  99 0046 234F     		ldr	r7, .L2+4
 100 0048 0022     		movs	r2, #0
 101 004a 0121     		movs	r1, #1
 102 004c 3800     		movs	r0, r7
 103 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 16


 104              	.LVL1:
 754:Core/Src/main.c **** 
 755:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 756:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, GPIO_PIN_RESET);
 105              		.loc 1 756 3 view .LVU22
 106 0052 9026     		movs	r6, #144
 107 0054 F605     		lsls	r6, r6, #23
 108 0056 0022     		movs	r2, #0
 109 0058 1021     		movs	r1, #16
 110 005a 3000     		movs	r0, r6
 111 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 112              	.LVL2:
 757:Core/Src/main.c **** 
 758:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 759:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
 113              		.loc 1 759 3 view .LVU23
 114              		.loc 1 759 23 is_stmt 0 view .LVU24
 115 0060 0125     		movs	r5, #1
 116 0062 0395     		str	r5, [sp, #12]
 760:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 117              		.loc 1 760 3 is_stmt 1 view .LVU25
 118              		.loc 1 760 24 is_stmt 0 view .LVU26
 119 0064 0495     		str	r5, [sp, #16]
 761:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 120              		.loc 1 761 3 is_stmt 1 view .LVU27
 121              		.loc 1 761 24 is_stmt 0 view .LVU28
 122 0066 0024     		movs	r4, #0
 123 0068 0594     		str	r4, [sp, #20]
 762:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 124              		.loc 1 762 3 is_stmt 1 view .LVU29
 125              		.loc 1 762 25 is_stmt 0 view .LVU30
 126 006a 0694     		str	r4, [sp, #24]
 763:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 127              		.loc 1 763 3 is_stmt 1 view .LVU31
 128 006c 03A9     		add	r1, sp, #12
 129 006e 3800     		movs	r0, r7
 130 0070 FFF7FEFF 		bl	HAL_GPIO_Init
 131              	.LVL3:
 764:Core/Src/main.c **** 
 765:Core/Src/main.c ****   /*Configure GPIO pin : A3_Pin */
 766:Core/Src/main.c ****   GPIO_InitStruct.Pin = A3_Pin;
 132              		.loc 1 766 3 view .LVU32
 133              		.loc 1 766 23 is_stmt 0 view .LVU33
 134 0074 0223     		movs	r3, #2
 135 0076 0393     		str	r3, [sp, #12]
 767:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 136              		.loc 1 767 3 is_stmt 1 view .LVU34
 137              		.loc 1 767 24 is_stmt 0 view .LVU35
 138 0078 0494     		str	r4, [sp, #16]
 768:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 139              		.loc 1 768 3 is_stmt 1 view .LVU36
 140              		.loc 1 768 24 is_stmt 0 view .LVU37
 141 007a 0595     		str	r5, [sp, #20]
 769:Core/Src/main.c ****   HAL_GPIO_Init(A3_GPIO_Port, &GPIO_InitStruct);
 142              		.loc 1 769 3 is_stmt 1 view .LVU38
 143 007c 03A9     		add	r1, sp, #12
 144 007e 3800     		movs	r0, r7
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 17


 145 0080 FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL4:
 770:Core/Src/main.c **** 
 771:Core/Src/main.c ****   /*Configure GPIO pins : A2_Pin A1_Pin A0_Pin */
 772:Core/Src/main.c ****   GPIO_InitStruct.Pin = A2_Pin|A1_Pin|A0_Pin;
 147              		.loc 1 772 3 view .LVU39
 148              		.loc 1 772 23 is_stmt 0 view .LVU40
 149 0084 0723     		movs	r3, #7
 150 0086 0393     		str	r3, [sp, #12]
 773:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 151              		.loc 1 773 3 is_stmt 1 view .LVU41
 152              		.loc 1 773 24 is_stmt 0 view .LVU42
 153 0088 0494     		str	r4, [sp, #16]
 774:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 154              		.loc 1 774 3 is_stmt 1 view .LVU43
 155              		.loc 1 774 24 is_stmt 0 view .LVU44
 156 008a 0595     		str	r5, [sp, #20]
 775:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 157              		.loc 1 775 3 is_stmt 1 view .LVU45
 158 008c 03A9     		add	r1, sp, #12
 159 008e 3000     		movs	r0, r6
 160 0090 FFF7FEFF 		bl	HAL_GPIO_Init
 161              	.LVL5:
 776:Core/Src/main.c **** 
 777:Core/Src/main.c ****   /*Configure GPIO pin : DRDY_Pin */
 778:Core/Src/main.c ****   GPIO_InitStruct.Pin = DRDY_Pin;
 162              		.loc 1 778 3 view .LVU46
 163              		.loc 1 778 23 is_stmt 0 view .LVU47
 164 0094 0823     		movs	r3, #8
 165 0096 0393     		str	r3, [sp, #12]
 779:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 166              		.loc 1 779 3 is_stmt 1 view .LVU48
 167              		.loc 1 779 24 is_stmt 0 view .LVU49
 168 0098 8423     		movs	r3, #132
 169 009a 9B03     		lsls	r3, r3, #14
 170 009c 0493     		str	r3, [sp, #16]
 780:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 171              		.loc 1 780 3 is_stmt 1 view .LVU50
 172              		.loc 1 780 24 is_stmt 0 view .LVU51
 173 009e 0594     		str	r4, [sp, #20]
 781:Core/Src/main.c ****   HAL_GPIO_Init(DRDY_GPIO_Port, &GPIO_InitStruct);
 174              		.loc 1 781 3 is_stmt 1 view .LVU52
 175 00a0 03A9     		add	r1, sp, #12
 176 00a2 3000     		movs	r0, r6
 177 00a4 FFF7FEFF 		bl	HAL_GPIO_Init
 178              	.LVL6:
 782:Core/Src/main.c **** 
 783:Core/Src/main.c ****   /*Configure GPIO pin : CS_Pin */
 784:Core/Src/main.c ****   GPIO_InitStruct.Pin = CS_Pin;
 179              		.loc 1 784 3 view .LVU53
 180              		.loc 1 784 23 is_stmt 0 view .LVU54
 181 00a8 1023     		movs	r3, #16
 182 00aa 0393     		str	r3, [sp, #12]
 785:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 183              		.loc 1 785 3 is_stmt 1 view .LVU55
 184              		.loc 1 785 24 is_stmt 0 view .LVU56
 185 00ac 0495     		str	r5, [sp, #16]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 18


 786:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 186              		.loc 1 786 3 is_stmt 1 view .LVU57
 187              		.loc 1 786 24 is_stmt 0 view .LVU58
 188 00ae 0594     		str	r4, [sp, #20]
 787:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 189              		.loc 1 787 3 is_stmt 1 view .LVU59
 190              		.loc 1 787 25 is_stmt 0 view .LVU60
 191 00b0 0694     		str	r4, [sp, #24]
 788:Core/Src/main.c ****   HAL_GPIO_Init(CS_GPIO_Port, &GPIO_InitStruct);
 192              		.loc 1 788 3 is_stmt 1 view .LVU61
 193 00b2 03A9     		add	r1, sp, #12
 194 00b4 3000     		movs	r0, r6
 195 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 196              	.LVL7:
 789:Core/Src/main.c **** 
 790:Core/Src/main.c ****   /* EXTI interrupt init*/
 791:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI2_3_IRQn, 0, 0);
 197              		.loc 1 791 3 view .LVU62
 198 00ba 0022     		movs	r2, #0
 199 00bc 0021     		movs	r1, #0
 200 00be 0620     		movs	r0, #6
 201 00c0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 202              	.LVL8:
 792:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 203              		.loc 1 792 3 view .LVU63
 204 00c4 0620     		movs	r0, #6
 205 00c6 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 206              	.LVL9:
 793:Core/Src/main.c **** 
 794:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 795:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 796:Core/Src/main.c **** }
 207              		.loc 1 796 1 is_stmt 0 view .LVU64
 208 00ca 09B0     		add	sp, sp, #36
 209              		@ sp needed
 210 00cc F0BD     		pop	{r4, r5, r6, r7, pc}
 211              	.L3:
 212 00ce C046     		.align	2
 213              	.L2:
 214 00d0 00100240 		.word	1073876992
 215 00d4 00140048 		.word	1207964672
 216              		.cfi_endproc
 217              	.LFE72:
 219              		.section	.text.delay_us,"ax",%progbits
 220              		.align	1
 221              		.global	delay_us
 222              		.syntax unified
 223              		.code	16
 224              		.thumb_func
 226              	delay_us:
 227              	.LVL10:
 228              	.LFB40:
 127:Core/Src/main.c **** 	__HAL_TIM_SET_COUNTER(&htim16,0);  
 229              		.loc 1 127 1 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 19


 233              		@ link register save eliminated.
 128:Core/Src/main.c **** 	while (__HAL_TIM_GET_COUNTER(&htim16) < us);  
 234              		.loc 1 128 2 view .LVU66
 235 0000 034B     		ldr	r3, .L6
 236 0002 1A68     		ldr	r2, [r3]
 237 0004 0023     		movs	r3, #0
 238 0006 5362     		str	r3, [r2, #36]
 129:Core/Src/main.c **** }
 239              		.loc 1 129 2 view .LVU67
 240              	.L5:
 129:Core/Src/main.c **** }
 241              		.loc 1 129 40 discriminator 1 view .LVU68
 129:Core/Src/main.c **** }
 242              		.loc 1 129 9 is_stmt 0 discriminator 1 view .LVU69
 243 0008 536A     		ldr	r3, [r2, #36]
 129:Core/Src/main.c **** }
 244              		.loc 1 129 40 discriminator 1 view .LVU70
 245 000a 8342     		cmp	r3, r0
 246 000c FCD3     		bcc	.L5
 130:Core/Src/main.c **** 
 247              		.loc 1 130 1 view .LVU71
 248              		@ sp needed
 249 000e 7047     		bx	lr
 250              	.L7:
 251              		.align	2
 252              	.L6:
 253 0010 00000000 		.word	htim16
 254              		.cfi_endproc
 255              	.LFE40:
 257              		.section	.text.addr_setup,"ax",%progbits
 258              		.align	1
 259              		.global	addr_setup
 260              		.syntax unified
 261              		.code	16
 262              		.thumb_func
 264              	addr_setup:
 265              	.LFB41:
 132:Core/Src/main.c ****   uint8_t a0 = HAL_GPIO_ReadPin(A0_GPIO_Port, A0_Pin) & 1;
 266              		.loc 1 132 19 is_stmt 1 view -0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 271              		.cfi_def_cfa_offset 24
 272              		.cfi_offset 3, -24
 273              		.cfi_offset 4, -20
 274              		.cfi_offset 5, -16
 275              		.cfi_offset 6, -12
 276              		.cfi_offset 7, -8
 277              		.cfi_offset 14, -4
 133:Core/Src/main.c ****   uint8_t a1 = HAL_GPIO_ReadPin(A1_GPIO_Port, A1_Pin) & 1;
 278              		.loc 1 133 3 view .LVU73
 133:Core/Src/main.c ****   uint8_t a1 = HAL_GPIO_ReadPin(A1_GPIO_Port, A1_Pin) & 1;
 279              		.loc 1 133 16 is_stmt 0 view .LVU74
 280 0002 9027     		movs	r7, #144
 281 0004 FF05     		lsls	r7, r7, #23
 282 0006 0421     		movs	r1, #4
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 20


 283 0008 3800     		movs	r0, r7
 284 000a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 285              	.LVL11:
 133:Core/Src/main.c ****   uint8_t a1 = HAL_GPIO_ReadPin(A1_GPIO_Port, A1_Pin) & 1;
 286              		.loc 1 133 11 view .LVU75
 287 000e 0124     		movs	r4, #1
 288 0010 2040     		ands	r0, r4
 289 0012 0500     		movs	r5, r0
 290              	.LVL12:
 134:Core/Src/main.c ****   uint8_t a2 = HAL_GPIO_ReadPin(A2_GPIO_Port, A2_Pin) & 1;
 291              		.loc 1 134 3 is_stmt 1 view .LVU76
 134:Core/Src/main.c ****   uint8_t a2 = HAL_GPIO_ReadPin(A2_GPIO_Port, A2_Pin) & 1;
 292              		.loc 1 134 16 is_stmt 0 view .LVU77
 293 0014 0221     		movs	r1, #2
 294 0016 3800     		movs	r0, r7
 295 0018 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 296              	.LVL13:
 134:Core/Src/main.c ****   uint8_t a2 = HAL_GPIO_ReadPin(A2_GPIO_Port, A2_Pin) & 1;
 297              		.loc 1 134 11 view .LVU78
 298 001c 2040     		ands	r0, r4
 299 001e 0600     		movs	r6, r0
 300              	.LVL14:
 135:Core/Src/main.c ****   uint8_t a3 = HAL_GPIO_ReadPin(A3_GPIO_Port, A3_Pin) & 1;
 301              		.loc 1 135 3 is_stmt 1 view .LVU79
 135:Core/Src/main.c ****   uint8_t a3 = HAL_GPIO_ReadPin(A3_GPIO_Port, A3_Pin) & 1;
 302              		.loc 1 135 16 is_stmt 0 view .LVU80
 303 0020 0121     		movs	r1, #1
 304 0022 3800     		movs	r0, r7
 305 0024 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 306              	.LVL15:
 135:Core/Src/main.c ****   uint8_t a3 = HAL_GPIO_ReadPin(A3_GPIO_Port, A3_Pin) & 1;
 307              		.loc 1 135 11 view .LVU81
 308 0028 2040     		ands	r0, r4
 309 002a 0700     		movs	r7, r0
 310              	.LVL16:
 136:Core/Src/main.c ****   addr = (a3 << 3) | (a2 << 2) | (a1 << 1) | a0;
 311              		.loc 1 136 3 is_stmt 1 view .LVU82
 136:Core/Src/main.c ****   addr = (a3 << 3) | (a2 << 2) | (a1 << 1) | a0;
 312              		.loc 1 136 16 is_stmt 0 view .LVU83
 313 002c 0221     		movs	r1, #2
 314 002e 0B48     		ldr	r0, .L9
 315 0030 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 316              	.LVL17:
 136:Core/Src/main.c ****   addr = (a3 << 3) | (a2 << 2) | (a1 << 1) | a0;
 317              		.loc 1 136 11 view .LVU84
 318 0034 0440     		ands	r4, r0
 319              	.LVL18:
 137:Core/Src/main.c ****   addr = (~addr) & 0x0F; // remove if dip s
 320              		.loc 1 137 3 is_stmt 1 view .LVU85
 137:Core/Src/main.c ****   addr = (~addr) & 0x0F; // remove if dip s
 321              		.loc 1 137 14 is_stmt 0 view .LVU86
 322 0036 E400     		lsls	r4, r4, #3
 323              	.LVL19:
 137:Core/Src/main.c ****   addr = (~addr) & 0x0F; // remove if dip s
 324              		.loc 1 137 26 view .LVU87
 325 0038 BF00     		lsls	r7, r7, #2
 326              	.LVL20:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 21


 137:Core/Src/main.c ****   addr = (~addr) & 0x0F; // remove if dip s
 327              		.loc 1 137 20 view .LVU88
 328 003a 3C43     		orrs	r4, r7
 137:Core/Src/main.c ****   addr = (~addr) & 0x0F; // remove if dip s
 329              		.loc 1 137 38 view .LVU89
 330 003c 7600     		lsls	r6, r6, #1
 331              	.LVL21:
 137:Core/Src/main.c ****   addr = (~addr) & 0x0F; // remove if dip s
 332              		.loc 1 137 32 view .LVU90
 333 003e 3443     		orrs	r4, r6
 137:Core/Src/main.c ****   addr = (~addr) & 0x0F; // remove if dip s
 334              		.loc 1 137 44 view .LVU91
 335 0040 2543     		orrs	r5, r4
 336              	.LVL22:
 137:Core/Src/main.c ****   addr = (~addr) & 0x0F; // remove if dip s
 337              		.loc 1 137 8 view .LVU92
 338 0042 074A     		ldr	r2, .L9+4
 339 0044 1570     		strb	r5, [r2]
 138:Core/Src/main.c ****   std_addr_base = 0x100 | (addr << 4);
 340              		.loc 1 138 3 is_stmt 1 view .LVU93
 138:Core/Src/main.c ****   std_addr_base = 0x100 | (addr << 4);
 341              		.loc 1 138 18 is_stmt 0 view .LVU94
 342 0046 0F23     		movs	r3, #15
 343 0048 AB43     		bics	r3, r5
 138:Core/Src/main.c ****   std_addr_base = 0x100 | (addr << 4);
 344              		.loc 1 138 8 view .LVU95
 345 004a 1370     		strb	r3, [r2]
 139:Core/Src/main.c **** }
 346              		.loc 1 139 3 is_stmt 1 view .LVU96
 139:Core/Src/main.c **** }
 347              		.loc 1 139 33 is_stmt 0 view .LVU97
 348 004c 1B01     		lsls	r3, r3, #4
 139:Core/Src/main.c **** }
 349              		.loc 1 139 25 view .LVU98
 350 004e 8022     		movs	r2, #128
 351 0050 5200     		lsls	r2, r2, #1
 352 0052 1343     		orrs	r3, r2
 139:Core/Src/main.c **** }
 353              		.loc 1 139 17 view .LVU99
 354 0054 034A     		ldr	r2, .L9+8
 355 0056 1360     		str	r3, [r2]
 140:Core/Src/main.c **** 
 356              		.loc 1 140 1 view .LVU100
 357              		@ sp needed
 358 0058 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 359              	.L10:
 360 005a C046     		.align	2
 361              	.L9:
 362 005c 00140048 		.word	1207964672
 363 0060 00000000 		.word	addr
 364 0064 00000000 		.word	std_addr_base
 365              		.cfi_endproc
 366              	.LFE41:
 368              		.section	.text.can_setup,"ax",%progbits
 369              		.align	1
 370              		.global	can_setup
 371              		.syntax unified
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 22


 372              		.code	16
 373              		.thumb_func
 375              	can_setup:
 376              	.LFB42:
 142:Core/Src/main.c ****   // txh std
 377              		.loc 1 142 18 is_stmt 1 view -0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381 0000 70B5     		push	{r4, r5, r6, lr}
 382              		.cfi_def_cfa_offset 16
 383              		.cfi_offset 4, -16
 384              		.cfi_offset 5, -12
 385              		.cfi_offset 6, -8
 386              		.cfi_offset 14, -4
 144:Core/Src/main.c ****     txh_std[j].DLC = 4; // send only top 8 bits of ADC data
 387              		.loc 1 144 3 view .LVU102
 388              	.LBB7:
 144:Core/Src/main.c ****     txh_std[j].DLC = 4; // send only top 8 bits of ADC data
 389              		.loc 1 144 8 view .LVU103
 390              	.LVL23:
 144:Core/Src/main.c ****     txh_std[j].DLC = 4; // send only top 8 bits of ADC data
 391              		.loc 1 144 12 is_stmt 0 view .LVU104
 392 0002 0024     		movs	r4, #0
 144:Core/Src/main.c ****     txh_std[j].DLC = 4; // send only top 8 bits of ADC data
 393              		.loc 1 144 3 view .LVU105
 394 0004 16E0     		b	.L12
 395              	.LVL24:
 396              	.L13:
 145:Core/Src/main.c ****     txh_std[j].StdId = std_addr_base | (addr << 4) | j; // not used
 397              		.loc 1 145 5 is_stmt 1 discriminator 3 view .LVU106
 145:Core/Src/main.c ****     txh_std[j].StdId = std_addr_base | (addr << 4) | j; // not used
 398              		.loc 1 145 20 is_stmt 0 discriminator 3 view .LVU107
 399 0006 1C4D     		ldr	r5, .L14
 400 0008 6100     		lsls	r1, r4, #1
 401 000a 0A19     		adds	r2, r1, r4
 402 000c D300     		lsls	r3, r2, #3
 403 000e EB18     		adds	r3, r5, r3
 404 0010 0422     		movs	r2, #4
 405 0012 1A61     		str	r2, [r3, #16]
 146:Core/Src/main.c ****     txh_std[j].ExtId = 0; // not used std_addr_base | std_state | j;
 406              		.loc 1 146 5 is_stmt 1 discriminator 3 view .LVU108
 146:Core/Src/main.c ****     txh_std[j].ExtId = 0; // not used std_addr_base | std_state | j;
 407              		.loc 1 146 46 is_stmt 0 discriminator 3 view .LVU109
 408 0014 194A     		ldr	r2, .L14+4
 409 0016 1278     		ldrb	r2, [r2]
 410 0018 1201     		lsls	r2, r2, #4
 146:Core/Src/main.c ****     txh_std[j].ExtId = 0; // not used std_addr_base | std_state | j;
 411              		.loc 1 146 38 discriminator 3 view .LVU110
 412 001a 1948     		ldr	r0, .L14+8
 413 001c 0068     		ldr	r0, [r0]
 414 001e 0243     		orrs	r2, r0
 146:Core/Src/main.c ****     txh_std[j].ExtId = 0; // not used std_addr_base | std_state | j;
 415              		.loc 1 146 52 discriminator 3 view .LVU111
 416 0020 2243     		orrs	r2, r4
 146:Core/Src/main.c ****     txh_std[j].ExtId = 0; // not used std_addr_base | std_state | j;
 417              		.loc 1 146 22 discriminator 3 view .LVU112
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 23


 418 0022 0919     		adds	r1, r1, r4
 419 0024 C800     		lsls	r0, r1, #3
 420 0026 4251     		str	r2, [r0, r5]
 147:Core/Src/main.c ****     txh_std[j].IDE = CAN_ID_STD;
 421              		.loc 1 147 5 is_stmt 1 discriminator 3 view .LVU113
 147:Core/Src/main.c ****     txh_std[j].IDE = CAN_ID_STD;
 422              		.loc 1 147 22 is_stmt 0 discriminator 3 view .LVU114
 423 0028 0022     		movs	r2, #0
 424 002a 5A60     		str	r2, [r3, #4]
 148:Core/Src/main.c ****     txh_std[j].RTR = CAN_RTR_DATA;
 425              		.loc 1 148 5 is_stmt 1 discriminator 3 view .LVU115
 148:Core/Src/main.c ****     txh_std[j].RTR = CAN_RTR_DATA;
 426              		.loc 1 148 20 is_stmt 0 discriminator 3 view .LVU116
 427 002c 9A60     		str	r2, [r3, #8]
 149:Core/Src/main.c ****     txh_std[j].TransmitGlobalTime = DISABLE;
 428              		.loc 1 149 5 is_stmt 1 discriminator 3 view .LVU117
 149:Core/Src/main.c ****     txh_std[j].TransmitGlobalTime = DISABLE;
 429              		.loc 1 149 20 is_stmt 0 discriminator 3 view .LVU118
 430 002e DA60     		str	r2, [r3, #12]
 150:Core/Src/main.c ****   }
 431              		.loc 1 150 5 is_stmt 1 discriminator 3 view .LVU119
 150:Core/Src/main.c ****   }
 432              		.loc 1 150 35 is_stmt 0 discriminator 3 view .LVU120
 433 0030 1A75     		strb	r2, [r3, #20]
 144:Core/Src/main.c ****     txh_std[j].DLC = 4; // send only top 8 bits of ADC data
 434              		.loc 1 144 27 is_stmt 1 discriminator 3 view .LVU121
 435 0032 0134     		adds	r4, r4, #1
 436              	.LVL25:
 437              	.L12:
 144:Core/Src/main.c ****     txh_std[j].DLC = 4; // send only top 8 bits of ADC data
 438              		.loc 1 144 21 discriminator 1 view .LVU122
 439 0034 032C     		cmp	r4, #3
 440 0036 E6DD     		ble	.L13
 441              	.LBE7:
 154:Core/Src/main.c ****   txh_nst.StdId = nst_addr_base; // not used
 442              		.loc 1 154 3 view .LVU123
 154:Core/Src/main.c ****   txh_nst.StdId = nst_addr_base; // not used
 443              		.loc 1 154 15 is_stmt 0 view .LVU124
 444 0038 124A     		ldr	r2, .L14+12
 445 003a 0423     		movs	r3, #4
 446 003c 1361     		str	r3, [r2, #16]
 155:Core/Src/main.c ****   txh_nst.ExtId = 0; // not used nst_addr_base ;
 447              		.loc 1 155 3 is_stmt 1 view .LVU125
 155:Core/Src/main.c ****   txh_nst.ExtId = 0; // not used nst_addr_base ;
 448              		.loc 1 155 17 is_stmt 0 view .LVU126
 449 003e 124B     		ldr	r3, .L14+16
 450 0040 1B68     		ldr	r3, [r3]
 451 0042 1360     		str	r3, [r2]
 156:Core/Src/main.c ****   txh_nst.IDE = CAN_ID_STD;
 452              		.loc 1 156 3 is_stmt 1 view .LVU127
 156:Core/Src/main.c ****   txh_nst.IDE = CAN_ID_STD;
 453              		.loc 1 156 17 is_stmt 0 view .LVU128
 454 0044 0023     		movs	r3, #0
 455 0046 5360     		str	r3, [r2, #4]
 157:Core/Src/main.c ****   txh_nst.RTR = CAN_RTR_DATA;
 456              		.loc 1 157 3 is_stmt 1 view .LVU129
 157:Core/Src/main.c ****   txh_nst.RTR = CAN_RTR_DATA;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 24


 457              		.loc 1 157 15 is_stmt 0 view .LVU130
 458 0048 9360     		str	r3, [r2, #8]
 158:Core/Src/main.c ****   txh_nst.TransmitGlobalTime = DISABLE;
 459              		.loc 1 158 3 is_stmt 1 view .LVU131
 158:Core/Src/main.c ****   txh_nst.TransmitGlobalTime = DISABLE;
 460              		.loc 1 158 15 is_stmt 0 view .LVU132
 461 004a D360     		str	r3, [r2, #12]
 159:Core/Src/main.c **** 
 462              		.loc 1 159 3 is_stmt 1 view .LVU133
 159:Core/Src/main.c **** 
 463              		.loc 1 159 30 is_stmt 0 view .LVU134
 464 004c 1375     		strb	r3, [r2, #20]
 162:Core/Src/main.c ****   filter.FilterMaskIdLow = 0x07F0;
 465              		.loc 1 162 3 is_stmt 1 view .LVU135
 162:Core/Src/main.c ****   filter.FilterMaskIdLow = 0x07F0;
 466              		.loc 1 162 27 is_stmt 0 view .LVU136
 467 004e 0F49     		ldr	r1, .L14+20
 468 0050 FE22     		movs	r2, #254
 469 0052 D200     		lsls	r2, r2, #3
 470 0054 8A60     		str	r2, [r1, #8]
 163:Core/Src/main.c ****   filter.FilterIdHigh = 0x0000;
 471              		.loc 1 163 3 is_stmt 1 view .LVU137
 163:Core/Src/main.c ****   filter.FilterIdHigh = 0x0000;
 472              		.loc 1 163 26 is_stmt 0 view .LVU138
 473 0056 CA60     		str	r2, [r1, #12]
 164:Core/Src/main.c ****   filter.FilterIdLow = 0x0000 | (addr << 4);
 474              		.loc 1 164 3 is_stmt 1 view .LVU139
 164:Core/Src/main.c ****   filter.FilterIdLow = 0x0000 | (addr << 4);
 475              		.loc 1 164 23 is_stmt 0 view .LVU140
 476 0058 0B60     		str	r3, [r1]
 165:Core/Src/main.c ****   filter.FilterMode = CAN_FILTERMODE_IDMASK;
 477              		.loc 1 165 3 is_stmt 1 view .LVU141
 165:Core/Src/main.c ****   filter.FilterMode = CAN_FILTERMODE_IDMASK;
 478              		.loc 1 165 31 is_stmt 0 view .LVU142
 479 005a 084A     		ldr	r2, .L14+4
 480 005c 1278     		ldrb	r2, [r2]
 481 005e 1201     		lsls	r2, r2, #4
 165:Core/Src/main.c ****   filter.FilterMode = CAN_FILTERMODE_IDMASK;
 482              		.loc 1 165 22 view .LVU143
 483 0060 4A60     		str	r2, [r1, #4]
 166:Core/Src/main.c ****   filter.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 484              		.loc 1 166 3 is_stmt 1 view .LVU144
 166:Core/Src/main.c ****   filter.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 485              		.loc 1 166 21 is_stmt 0 view .LVU145
 486 0062 8B61     		str	r3, [r1, #24]
 167:Core/Src/main.c ****   filter.FilterScale = CAN_FILTERSCALE_16BIT;
 487              		.loc 1 167 3 is_stmt 1 view .LVU146
 167:Core/Src/main.c ****   filter.FilterScale = CAN_FILTERSCALE_16BIT;
 488              		.loc 1 167 31 is_stmt 0 view .LVU147
 489 0064 0B61     		str	r3, [r1, #16]
 168:Core/Src/main.c ****   filter.FilterActivation = CAN_FILTER_ENABLE;
 490              		.loc 1 168 3 is_stmt 1 view .LVU148
 168:Core/Src/main.c ****   filter.FilterActivation = CAN_FILTER_ENABLE;
 491              		.loc 1 168 22 is_stmt 0 view .LVU149
 492 0066 CB61     		str	r3, [r1, #28]
 169:Core/Src/main.c ****   filter.FilterBank = 0x00; // use first filter bank
 493              		.loc 1 169 3 is_stmt 1 view .LVU150
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 25


 169:Core/Src/main.c ****   filter.FilterBank = 0x00; // use first filter bank
 494              		.loc 1 169 27 is_stmt 0 view .LVU151
 495 0068 0122     		movs	r2, #1
 496 006a 0A62     		str	r2, [r1, #32]
 170:Core/Src/main.c **** 
 497              		.loc 1 170 3 is_stmt 1 view .LVU152
 170:Core/Src/main.c **** 
 498              		.loc 1 170 21 is_stmt 0 view .LVU153
 499 006c 4B61     		str	r3, [r1, #20]
 172:Core/Src/main.c **** }
 500              		.loc 1 172 3 is_stmt 1 view .LVU154
 501 006e 0848     		ldr	r0, .L14+24
 502 0070 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 503              	.LVL26:
 173:Core/Src/main.c **** 
 504              		.loc 1 173 1 is_stmt 0 view .LVU155
 505              		@ sp needed
 506              	.LVL27:
 173:Core/Src/main.c **** 
 507              		.loc 1 173 1 view .LVU156
 508 0074 70BD     		pop	{r4, r5, r6, pc}
 509              	.L15:
 510 0076 C046     		.align	2
 511              	.L14:
 512 0078 00000000 		.word	txh_std
 513 007c 00000000 		.word	addr
 514 0080 00000000 		.word	std_addr_base
 515 0084 00000000 		.word	txh_nst
 516 0088 00000000 		.word	nst_addr_base
 517 008c 00000000 		.word	filter
 518 0090 00000000 		.word	hcan
 519              		.cfi_endproc
 520              	.LFE42:
 522              		.section	.text.can_std_transmit,"ax",%progbits
 523              		.align	1
 524              		.global	can_std_transmit
 525              		.syntax unified
 526              		.code	16
 527              		.thumb_func
 529              	can_std_transmit:
 530              	.LVL28:
 531              	.LFB43:
 175:Core/Src/main.c ****   uint8_t* adc_ptr = (uint8_t*) adc_data;
 532              		.loc 1 175 39 is_stmt 1 view -0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 8
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 175:Core/Src/main.c ****   uint8_t* adc_ptr = (uint8_t*) adc_data;
 536              		.loc 1 175 39 is_stmt 0 view .LVU158
 537 0000 10B5     		push	{r4, lr}
 538              		.cfi_def_cfa_offset 8
 539              		.cfi_offset 4, -8
 540              		.cfi_offset 14, -4
 541 0002 82B0     		sub	sp, sp, #8
 542              		.cfi_def_cfa_offset 16
 543 0004 0400     		movs	r4, r0
 176:Core/Src/main.c ****   uint8_t adc_data_conv[4];
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 26


 544              		.loc 1 176 3 is_stmt 1 view .LVU159
 545              	.LVL29:
 177:Core/Src/main.c ****   adc_data_conv[0] = adc_ptr[1];
 546              		.loc 1 177 3 view .LVU160
 178:Core/Src/main.c ****   adc_data_conv[1] = adc_ptr[5];
 547              		.loc 1 178 3 view .LVU161
 178:Core/Src/main.c ****   adc_data_conv[1] = adc_ptr[5];
 548              		.loc 1 178 20 is_stmt 0 view .LVU162
 549 0006 01AB     		add	r3, sp, #4
 550 0008 0D4A     		ldr	r2, .L19
 551 000a 5178     		ldrb	r1, [r2, #1]
 552 000c 1970     		strb	r1, [r3]
 179:Core/Src/main.c ****   adc_data_conv[2] = adc_ptr[9];
 553              		.loc 1 179 3 is_stmt 1 view .LVU163
 179:Core/Src/main.c ****   adc_data_conv[2] = adc_ptr[9];
 554              		.loc 1 179 20 is_stmt 0 view .LVU164
 555 000e 5179     		ldrb	r1, [r2, #5]
 556 0010 5970     		strb	r1, [r3, #1]
 180:Core/Src/main.c ****   adc_data_conv[3] = adc_ptr[13];
 557              		.loc 1 180 3 is_stmt 1 view .LVU165
 180:Core/Src/main.c ****   adc_data_conv[3] = adc_ptr[13];
 558              		.loc 1 180 20 is_stmt 0 view .LVU166
 559 0012 517A     		ldrb	r1, [r2, #9]
 560 0014 9970     		strb	r1, [r3, #2]
 181:Core/Src/main.c ****   
 561              		.loc 1 181 3 is_stmt 1 view .LVU167
 181:Core/Src/main.c ****   
 562              		.loc 1 181 20 is_stmt 0 view .LVU168
 563 0016 527B     		ldrb	r2, [r2, #13]
 564 0018 DA70     		strb	r2, [r3, #3]
 183:Core/Src/main.c ****     // too many messages! FIXME
 565              		.loc 1 183 5 is_stmt 1 view .LVU169
 183:Core/Src/main.c ****     // too many messages! FIXME
 566              		.loc 1 183 11 is_stmt 0 view .LVU170
 567 001a 02E0     		b	.L17
 568              	.LVL30:
 569              	.L18:
 185:Core/Src/main.c ****   } 
 570              		.loc 1 185 5 is_stmt 1 view .LVU171
 571 001c 8020     		movs	r0, #128
 572 001e FFF7FEFF 		bl	delay_us
 573              	.LVL31:
 574              	.L17:
 183:Core/Src/main.c ****     // too many messages! FIXME
 575              		.loc 1 183 87 view .LVU172
 183:Core/Src/main.c ****     // too many messages! FIXME
 576              		.loc 1 183 40 is_stmt 0 view .LVU173
 577 0022 6100     		lsls	r1, r4, #1
 578 0024 0919     		adds	r1, r1, r4
 579 0026 C900     		lsls	r1, r1, #3
 580 0028 064B     		ldr	r3, .L19+4
 581 002a C918     		adds	r1, r1, r3
 183:Core/Src/main.c ****     // too many messages! FIXME
 582              		.loc 1 183 12 view .LVU174
 583 002c 064B     		ldr	r3, .L19+8
 584 002e 0748     		ldr	r0, .L19+12
 585 0030 01AA     		add	r2, sp, #4
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 27


 586 0032 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 587              	.LVL32:
 183:Core/Src/main.c ****     // too many messages! FIXME
 588              		.loc 1 183 87 view .LVU175
 589 0036 0028     		cmp	r0, #0
 590 0038 F0D1     		bne	.L18
 187:Core/Src/main.c **** 
 591              		.loc 1 187 1 view .LVU176
 592 003a 02B0     		add	sp, sp, #8
 593              		@ sp needed
 594 003c 10BD     		pop	{r4, pc}
 595              	.L20:
 596 003e C046     		.align	2
 597              	.L19:
 598 0040 00000000 		.word	adc_data
 599 0044 00000000 		.word	txh_std
 600 0048 00000000 		.word	txMailbox
 601 004c 00000000 		.word	hcan
 602              		.cfi_endproc
 603              	.LFE43:
 605              		.section	.text.can_nst_transmit,"ax",%progbits
 606              		.align	1
 607              		.global	can_nst_transmit
 608              		.syntax unified
 609              		.code	16
 610              		.thumb_func
 612              	can_nst_transmit:
 613              	.LVL33:
 614              	.LFB44:
 189:Core/Src/main.c ****   txh_nst.ExtId = nst_addr_base | nst_state | cmd;
 615              		.loc 1 189 49 is_stmt 1 view -0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 189:Core/Src/main.c ****   txh_nst.ExtId = nst_addr_base | nst_state | cmd;
 619              		.loc 1 189 49 is_stmt 0 view .LVU178
 620 0000 10B5     		push	{r4, lr}
 621              		.cfi_def_cfa_offset 8
 622              		.cfi_offset 4, -8
 623              		.cfi_offset 14, -4
 190:Core/Src/main.c ****   // right now we can't transmit too many messages too quickly or they will be lost
 624              		.loc 1 190 3 is_stmt 1 view .LVU179
 190:Core/Src/main.c ****   // right now we can't transmit too many messages too quickly or they will be lost
 625              		.loc 1 190 33 is_stmt 0 view .LVU180
 626 0002 084B     		ldr	r3, .L24
 627 0004 1B78     		ldrb	r3, [r3]
 628 0006 084A     		ldr	r2, .L24+4
 629 0008 1268     		ldr	r2, [r2]
 630 000a 1343     		orrs	r3, r2
 190:Core/Src/main.c ****   // right now we can't transmit too many messages too quickly or they will be lost
 631              		.loc 1 190 45 view .LVU181
 632 000c 1843     		orrs	r0, r3
 633              	.LVL34:
 190:Core/Src/main.c ****   // right now we can't transmit too many messages too quickly or they will be lost
 634              		.loc 1 190 17 view .LVU182
 635 000e 0749     		ldr	r1, .L24+8
 636              	.LVL35:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 28


 190:Core/Src/main.c ****   // right now we can't transmit too many messages too quickly or they will be lost
 637              		.loc 1 190 17 view .LVU183
 638 0010 4860     		str	r0, [r1, #4]
 193:Core/Src/main.c ****     // too many messages! FIXME
 639              		.loc 1 193 3 is_stmt 1 view .LVU184
 193:Core/Src/main.c ****     // too many messages! FIXME
 640              		.loc 1 193 7 is_stmt 0 view .LVU185
 641 0012 074B     		ldr	r3, .L24+12
 642 0014 074A     		ldr	r2, .L24+16
 643 0016 0848     		ldr	r0, .L24+20
 644 0018 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 645              	.LVL36:
 193:Core/Src/main.c ****     // too many messages! FIXME
 646              		.loc 1 193 6 view .LVU186
 647 001c 0028     		cmp	r0, #0
 648 001e 00D0     		beq	.L21
 649              	.L23:
 195:Core/Src/main.c ****   }
 650              		.loc 1 195 5 is_stmt 1 discriminator 1 view .LVU187
 195:Core/Src/main.c ****   }
 651              		.loc 1 195 11 discriminator 1 view .LVU188
 652 0020 FEE7     		b	.L23
 653              	.L21:
 197:Core/Src/main.c **** 
 654              		.loc 1 197 1 is_stmt 0 view .LVU189
 655              		@ sp needed
 656 0022 10BD     		pop	{r4, pc}
 657              	.L25:
 658              		.align	2
 659              	.L24:
 660 0024 00000000 		.word	nst_state
 661 0028 00000000 		.word	nst_addr_base
 662 002c 00000000 		.word	txh_nst
 663 0030 00000000 		.word	txMailbox
 664 0034 00000000 		.word	tx_nst_data
 665 0038 00000000 		.word	hcan
 666              		.cfi_endproc
 667              	.LFE44:
 669              		.section	.text.can_tx_transmit_timer_handler,"ax",%progbits
 670              		.align	1
 671              		.global	can_tx_transmit_timer_handler
 672              		.syntax unified
 673              		.code	16
 674              		.thumb_func
 676              	can_tx_transmit_timer_handler:
 677              	.LFB45:
 199:Core/Src/main.c ****   can_std_transmit(can_std_channel);
 678              		.loc 1 199 38 is_stmt 1 view -0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 0
 681              		@ frame_needed = 0, uses_anonymous_args = 0
 682 0000 10B5     		push	{r4, lr}
 683              		.cfi_def_cfa_offset 8
 684              		.cfi_offset 4, -8
 685              		.cfi_offset 14, -4
 200:Core/Src/main.c ****   //can_std_channel++;
 686              		.loc 1 200 3 view .LVU191
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 29


 687 0002 024B     		ldr	r3, .L27
 688 0004 1878     		ldrb	r0, [r3]
 689 0006 FFF7FEFF 		bl	can_std_transmit
 690              	.LVL37:
 203:Core/Src/main.c **** 
 691              		.loc 1 203 1 is_stmt 0 view .LVU192
 692              		@ sp needed
 693 000a 10BD     		pop	{r4, pc}
 694              	.L28:
 695              		.align	2
 696              	.L27:
 697 000c 00000000 		.word	can_std_channel
 698              		.cfi_endproc
 699              	.LFE45:
 701              		.section	.text.can_rx_handler,"ax",%progbits
 702              		.align	1
 703              		.global	can_rx_handler
 704              		.syntax unified
 705              		.code	16
 706              		.thumb_func
 708              	can_rx_handler:
 709              	.LFB46:
 205:Core/Src/main.c ****   // handle various commands
 710              		.loc 1 205 23 is_stmt 1 view -0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714              		@ link register save eliminated.
 208:Core/Src/main.c **** 
 715              		.loc 1 208 1 view .LVU194
 716              		@ sp needed
 717 0000 7047     		bx	lr
 718              		.cfi_endproc
 719              	.LFE46:
 721              		.section	.text.ads131m04_transfer_word,"ax",%progbits
 722              		.align	1
 723              		.global	ads131m04_transfer_word
 724              		.syntax unified
 725              		.code	16
 726              		.thumb_func
 728              	ads131m04_transfer_word:
 729              	.LVL38:
 730              	.LFB47:
 210:Core/Src/main.c ****   uint8_t lower = word & 0xff;
 731              		.loc 1 210 49 view -0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 8
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 210:Core/Src/main.c ****   uint8_t lower = word & 0xff;
 735              		.loc 1 210 49 is_stmt 0 view .LVU196
 736 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 737              		.cfi_def_cfa_offset 20
 738              		.cfi_offset 4, -20
 739              		.cfi_offset 5, -16
 740              		.cfi_offset 6, -12
 741              		.cfi_offset 7, -8
 742              		.cfi_offset 14, -4
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 30


 743 0002 C646     		mov	lr, r8
 744 0004 00B5     		push	{lr}
 745              		.cfi_def_cfa_offset 24
 746              		.cfi_offset 8, -24
 747 0006 84B0     		sub	sp, sp, #16
 748              		.cfi_def_cfa_offset 40
 211:Core/Src/main.c ****   uint8_t upper = word >> 8;
 749              		.loc 1 211 3 is_stmt 1 view .LVU197
 211:Core/Src/main.c ****   uint8_t upper = word >> 8;
 750              		.loc 1 211 11 is_stmt 0 view .LVU198
 751 0008 0F23     		movs	r3, #15
 752 000a 6B44     		add	r3, r3, sp
 753 000c 9846     		mov	r8, r3
 754 000e 1870     		strb	r0, [r3]
 212:Core/Src/main.c ****   uint8_t zero = 0;
 755              		.loc 1 212 3 is_stmt 1 view .LVU199
 212:Core/Src/main.c ****   uint8_t zero = 0;
 756              		.loc 1 212 11 is_stmt 0 view .LVU200
 757 0010 0E21     		movs	r1, #14
 758 0012 6944     		add	r1, r1, sp
 759 0014 000A     		lsrs	r0, r0, #8
 760              	.LVL39:
 212:Core/Src/main.c ****   uint8_t zero = 0;
 761              		.loc 1 212 11 view .LVU201
 762 0016 0870     		strb	r0, [r1]
 213:Core/Src/main.c ****   uint8_t recv[3];
 763              		.loc 1 213 3 is_stmt 1 view .LVU202
 213:Core/Src/main.c ****   uint8_t recv[3];
 764              		.loc 1 213 11 is_stmt 0 view .LVU203
 765 0018 0D27     		movs	r7, #13
 766 001a 6F44     		add	r7, r7, sp
 767 001c 0026     		movs	r6, #0
 768 001e 3E70     		strb	r6, [r7]
 214:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &upper, recv, 1, 0.1); // CMD
 769              		.loc 1 214 3 is_stmt 1 view .LVU204
 215:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &lower, recv+1, 1, 0.1);
 770              		.loc 1 215 3 view .LVU205
 771 0020 02AC     		add	r4, sp, #8
 772 0022 114D     		ldr	r5, .L31
 773 0024 0096     		str	r6, [sp]
 774 0026 0123     		movs	r3, #1
 775 0028 2200     		movs	r2, r4
 776 002a 2800     		movs	r0, r5
 777 002c FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 778              	.LVL40:
 216:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &zero, recv+2, 1, 0.1);
 779              		.loc 1 216 3 view .LVU206
 780 0030 0096     		str	r6, [sp]
 781 0032 0123     		movs	r3, #1
 782 0034 0922     		movs	r2, #9
 783 0036 6A44     		add	r2, r2, sp
 784 0038 4146     		mov	r1, r8
 785 003a 2800     		movs	r0, r5
 786 003c FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 787              	.LVL41:
 217:Core/Src/main.c ****   return (recv[0] << 16) | (recv[1] << 8) | recv[2];
 788              		.loc 1 217 3 view .LVU207
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 31


 789 0040 0096     		str	r6, [sp]
 790 0042 0123     		movs	r3, #1
 791 0044 0A22     		movs	r2, #10
 792 0046 6A44     		add	r2, r2, sp
 793 0048 3900     		movs	r1, r7
 794 004a 2800     		movs	r0, r5
 795 004c FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 796              	.LVL42:
 218:Core/Src/main.c **** }
 797              		.loc 1 218 3 view .LVU208
 218:Core/Src/main.c **** }
 798              		.loc 1 218 15 is_stmt 0 view .LVU209
 799 0050 2078     		ldrb	r0, [r4]
 218:Core/Src/main.c **** }
 800              		.loc 1 218 19 view .LVU210
 801 0052 0004     		lsls	r0, r0, #16
 218:Core/Src/main.c **** }
 802              		.loc 1 218 33 view .LVU211
 803 0054 6378     		ldrb	r3, [r4, #1]
 218:Core/Src/main.c **** }
 804              		.loc 1 218 37 view .LVU212
 805 0056 1B02     		lsls	r3, r3, #8
 218:Core/Src/main.c **** }
 806              		.loc 1 218 26 view .LVU213
 807 0058 1843     		orrs	r0, r3
 218:Core/Src/main.c **** }
 808              		.loc 1 218 49 view .LVU214
 809 005a A378     		ldrb	r3, [r4, #2]
 218:Core/Src/main.c **** }
 810              		.loc 1 218 43 view .LVU215
 811 005c 1843     		orrs	r0, r3
 219:Core/Src/main.c **** 
 812              		.loc 1 219 1 view .LVU216
 813 005e 04B0     		add	sp, sp, #16
 814              		@ sp needed
 815 0060 80BC     		pop	{r7}
 816 0062 B846     		mov	r8, r7
 817 0064 F0BD     		pop	{r4, r5, r6, r7, pc}
 818              	.L32:
 819 0066 C046     		.align	2
 820              	.L31:
 821 0068 00000000 		.word	hspi1
 822              		.cfi_endproc
 823              	.LFE47:
 825              		.section	.text.ads131m04_transfer_frame,"ax",%progbits
 826              		.align	1
 827              		.global	ads131m04_transfer_frame
 828              		.syntax unified
 829              		.code	16
 830              		.thumb_func
 832              	ads131m04_transfer_frame:
 833              	.LVL43:
 834              	.LFB48:
 221:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 835              		.loc 1 221 85 is_stmt 1 view -0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 32


 838              		@ frame_needed = 0, uses_anonymous_args = 0
 221:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 839              		.loc 1 221 85 is_stmt 0 view .LVU218
 840 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 841              		.cfi_def_cfa_offset 24
 842              		.cfi_offset 3, -24
 843              		.cfi_offset 4, -20
 844              		.cfi_offset 5, -16
 845              		.cfi_offset 6, -12
 846              		.cfi_offset 7, -8
 847              		.cfi_offset 14, -4
 848 0002 0700     		movs	r7, r0
 849 0004 0E00     		movs	r6, r1
 222:Core/Src/main.c ****   
 850              		.loc 1 222 3 is_stmt 1 view .LVU219
 851 0006 9020     		movs	r0, #144
 852              	.LVL44:
 222:Core/Src/main.c ****   
 853              		.loc 1 222 3 is_stmt 0 view .LVU220
 854 0008 0022     		movs	r2, #0
 855              	.LVL45:
 222:Core/Src/main.c ****   
 856              		.loc 1 222 3 view .LVU221
 857 000a 1021     		movs	r1, #16
 858              	.LVL46:
 222:Core/Src/main.c ****   
 859              		.loc 1 222 3 view .LVU222
 860 000c C005     		lsls	r0, r0, #23
 861 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 862              	.LVL47:
 224:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 863              		.loc 1 224 3 is_stmt 1 view .LVU223
 864              	.LBB8:
 224:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 865              		.loc 1 224 8 view .LVU224
 224:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 866              		.loc 1 224 16 is_stmt 0 view .LVU225
 867 0012 0024     		movs	r4, #0
 224:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 868              		.loc 1 224 3 view .LVU226
 869 0014 08E0     		b	.L34
 870              	.LVL48:
 871              	.L35:
 225:Core/Src/main.c ****   }
 872              		.loc 1 225 5 is_stmt 1 discriminator 3 view .LVU227
 225:Core/Src/main.c ****   }
 873              		.loc 1 225 43 is_stmt 0 discriminator 3 view .LVU228
 874 0016 6300     		lsls	r3, r4, #1
 225:Core/Src/main.c ****   }
 875              		.loc 1 225 8 discriminator 3 view .LVU229
 876 0018 A500     		lsls	r5, r4, #2
 877 001a 7D19     		adds	r5, r7, r5
 225:Core/Src/main.c ****   }
 878              		.loc 1 225 14 discriminator 3 view .LVU230
 879 001c F05A     		ldrh	r0, [r6, r3]
 880 001e FFF7FEFF 		bl	ads131m04_transfer_word
 881              	.LVL49:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 33


 225:Core/Src/main.c ****   }
 882              		.loc 1 225 12 discriminator 3 view .LVU231
 883 0022 2860     		str	r0, [r5]
 224:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 884              		.loc 1 224 31 is_stmt 1 discriminator 3 view .LVU232
 885 0024 0134     		adds	r4, r4, #1
 886              	.LVL50:
 224:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 887              		.loc 1 224 31 is_stmt 0 discriminator 3 view .LVU233
 888 0026 E4B2     		uxtb	r4, r4
 889              	.LVL51:
 890              	.L34:
 224:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 891              		.loc 1 224 25 is_stmt 1 discriminator 1 view .LVU234
 892 0028 052C     		cmp	r4, #5
 893 002a F4D9     		bls	.L35
 894              	.LBE8:
 228:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 895              		.loc 1 228 3 view .LVU235
 896 002c 0420     		movs	r0, #4
 897 002e FFF7FEFF 		bl	delay_us
 898              	.LVL52:
 229:Core/Src/main.c **** }
 899              		.loc 1 229 3 view .LVU236
 900 0032 9020     		movs	r0, #144
 901 0034 0122     		movs	r2, #1
 902 0036 1021     		movs	r1, #16
 903 0038 C005     		lsls	r0, r0, #23
 904 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 905              	.LVL53:
 230:Core/Src/main.c **** 
 906              		.loc 1 230 1 is_stmt 0 view .LVU237
 907              		@ sp needed
 908              	.LVL54:
 909              	.LVL55:
 910              	.LVL56:
 230:Core/Src/main.c **** 
 911              		.loc 1 230 1 view .LVU238
 912 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 913              		.cfi_endproc
 914              	.LFE48:
 916              		.section	.text.ads131m04_adc_format_convert,"ax",%progbits
 917              		.align	1
 918              		.global	ads131m04_adc_format_convert
 919              		.syntax unified
 920              		.code	16
 921              		.thumb_func
 923              	ads131m04_adc_format_convert:
 924              	.LVL57:
 925              	.LFB49:
 232:Core/Src/main.c ****   return ((data & 0x8000) ? -0x8000 : 0x0000) + (data & 0x7FFF);
 926              		.loc 1 232 51 is_stmt 1 view -0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 0
 929              		@ frame_needed = 0, uses_anonymous_args = 0
 930              		@ link register save eliminated.
 233:Core/Src/main.c **** }
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 34


 931              		.loc 1 233 3 view .LVU240
 233:Core/Src/main.c **** }
 932              		.loc 1 233 17 is_stmt 0 view .LVU241
 933 0000 8023     		movs	r3, #128
 934 0002 1B02     		lsls	r3, r3, #8
 935 0004 0200     		movs	r2, r0
 936 0006 1A40     		ands	r2, r3
 233:Core/Src/main.c **** }
 937              		.loc 1 233 37 view .LVU242
 938 0008 1842     		tst	r0, r3
 939 000a 00D0     		beq	.L37
 940 000c 024A     		ldr	r2, .L38
 941              	.L37:
 233:Core/Src/main.c **** }
 942              		.loc 1 233 55 discriminator 4 view .LVU243
 943 000e 4004     		lsls	r0, r0, #17
 944              	.LVL58:
 233:Core/Src/main.c **** }
 945              		.loc 1 233 55 discriminator 4 view .LVU244
 946 0010 400C     		lsrs	r0, r0, #17
 233:Core/Src/main.c **** }
 947              		.loc 1 233 47 discriminator 4 view .LVU245
 948 0012 8018     		adds	r0, r0, r2
 234:Core/Src/main.c **** 
 949              		.loc 1 234 1 discriminator 4 view .LVU246
 950              		@ sp needed
 951 0014 7047     		bx	lr
 952              	.L39:
 953 0016 C046     		.align	2
 954              	.L38:
 955 0018 0080FFFF 		.word	-32768
 956              		.cfi_endproc
 957              	.LFE49:
 959              		.section	.text.ads131m04_read_adc_nonblocking,"ax",%progbits
 960              		.align	1
 961              		.global	ads131m04_read_adc_nonblocking
 962              		.syntax unified
 963              		.code	16
 964              		.thumb_func
 966              	ads131m04_read_adc_nonblocking:
 967              	.LVL59:
 968              	.LFB50:
 236:Core/Src/main.c ****   uint32_t recv[24];
 969              		.loc 1 236 51 is_stmt 1 view -0
 970              		.cfi_startproc
 971              		@ args = 0, pretend = 0, frame = 112
 972              		@ frame_needed = 0, uses_anonymous_args = 0
 236:Core/Src/main.c ****   uint32_t recv[24];
 973              		.loc 1 236 51 is_stmt 0 view .LVU248
 974 0000 10B5     		push	{r4, lr}
 975              		.cfi_def_cfa_offset 8
 976              		.cfi_offset 4, -8
 977              		.cfi_offset 14, -4
 978 0002 9CB0     		sub	sp, sp, #112
 979              		.cfi_def_cfa_offset 120
 980 0004 0400     		movs	r4, r0
 237:Core/Src/main.c ****   uint16_t words[6] = {0, 0, 0, 0, 0, 0};
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 35


 981              		.loc 1 237 3 is_stmt 1 view .LVU249
 238:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 982              		.loc 1 238 3 view .LVU250
 238:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 983              		.loc 1 238 12 is_stmt 0 view .LVU251
 984 0006 0C22     		movs	r2, #12
 985 0008 0021     		movs	r1, #0
 986 000a 01A8     		add	r0, sp, #4
 987              	.LVL60:
 238:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 988              		.loc 1 238 12 view .LVU252
 989 000c FFF7FEFF 		bl	memset
 990              	.LVL61:
 239:Core/Src/main.c ****   ads131m04_transfer_frame(recv+12, words, 0);
 991              		.loc 1 239 3 is_stmt 1 view .LVU253
 992 0010 0022     		movs	r2, #0
 993 0012 01A9     		add	r1, sp, #4
 994 0014 04A8     		add	r0, sp, #16
 995 0016 FFF7FEFF 		bl	ads131m04_transfer_frame
 996              	.LVL62:
 240:Core/Src/main.c ****   out[0] = ads131m04_adc_format_convert(recv[1]);
 997              		.loc 1 240 3 view .LVU254
 998 001a 0022     		movs	r2, #0
 999 001c 01A9     		add	r1, sp, #4
 1000 001e 10A8     		add	r0, sp, #64
 1001 0020 FFF7FEFF 		bl	ads131m04_transfer_frame
 1002              	.LVL63:
 241:Core/Src/main.c ****   out[1] = ads131m04_adc_format_convert(recv[2]);
 1003              		.loc 1 241 3 view .LVU255
 241:Core/Src/main.c ****   out[1] = ads131m04_adc_format_convert(recv[2]);
 1004              		.loc 1 241 45 is_stmt 0 view .LVU256
 1005 0024 0598     		ldr	r0, [sp, #20]
 241:Core/Src/main.c ****   out[1] = ads131m04_adc_format_convert(recv[2]);
 1006              		.loc 1 241 12 view .LVU257
 1007 0026 FFF7FEFF 		bl	ads131m04_adc_format_convert
 1008              	.LVL64:
 241:Core/Src/main.c ****   out[1] = ads131m04_adc_format_convert(recv[2]);
 1009              		.loc 1 241 10 view .LVU258
 1010 002a 2060     		str	r0, [r4]
 242:Core/Src/main.c ****   out[2] = ads131m04_adc_format_convert(recv[3]);
 1011              		.loc 1 242 3 is_stmt 1 view .LVU259
 242:Core/Src/main.c ****   out[2] = ads131m04_adc_format_convert(recv[3]);
 1012              		.loc 1 242 45 is_stmt 0 view .LVU260
 1013 002c 0698     		ldr	r0, [sp, #24]
 242:Core/Src/main.c ****   out[2] = ads131m04_adc_format_convert(recv[3]);
 1014              		.loc 1 242 12 view .LVU261
 1015 002e FFF7FEFF 		bl	ads131m04_adc_format_convert
 1016              	.LVL65:
 242:Core/Src/main.c ****   out[2] = ads131m04_adc_format_convert(recv[3]);
 1017              		.loc 1 242 10 view .LVU262
 1018 0032 6060     		str	r0, [r4, #4]
 243:Core/Src/main.c ****   out[3] = ads131m04_adc_format_convert(recv[4]);
 1019              		.loc 1 243 3 is_stmt 1 view .LVU263
 243:Core/Src/main.c ****   out[3] = ads131m04_adc_format_convert(recv[4]);
 1020              		.loc 1 243 45 is_stmt 0 view .LVU264
 1021 0034 0798     		ldr	r0, [sp, #28]
 243:Core/Src/main.c ****   out[3] = ads131m04_adc_format_convert(recv[4]);
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 36


 1022              		.loc 1 243 12 view .LVU265
 1023 0036 FFF7FEFF 		bl	ads131m04_adc_format_convert
 1024              	.LVL66:
 243:Core/Src/main.c ****   out[3] = ads131m04_adc_format_convert(recv[4]);
 1025              		.loc 1 243 10 view .LVU266
 1026 003a A060     		str	r0, [r4, #8]
 244:Core/Src/main.c **** }
 1027              		.loc 1 244 3 is_stmt 1 view .LVU267
 244:Core/Src/main.c **** }
 1028              		.loc 1 244 45 is_stmt 0 view .LVU268
 1029 003c 0898     		ldr	r0, [sp, #32]
 244:Core/Src/main.c **** }
 1030              		.loc 1 244 12 view .LVU269
 1031 003e FFF7FEFF 		bl	ads131m04_adc_format_convert
 1032              	.LVL67:
 244:Core/Src/main.c **** }
 1033              		.loc 1 244 10 view .LVU270
 1034 0042 E060     		str	r0, [r4, #12]
 245:Core/Src/main.c **** 
 1035              		.loc 1 245 1 view .LVU271
 1036 0044 1CB0     		add	sp, sp, #112
 1037              		@ sp needed
 1038              	.LVL68:
 245:Core/Src/main.c **** 
 1039              		.loc 1 245 1 view .LVU272
 1040 0046 10BD     		pop	{r4, pc}
 1041              		.cfi_endproc
 1042              	.LFE50:
 1044              		.section	.text.ads131m04_drdy_exti_handler,"ax",%progbits
 1045              		.align	1
 1046              		.global	ads131m04_drdy_exti_handler
 1047              		.syntax unified
 1048              		.code	16
 1049              		.thumb_func
 1051              	ads131m04_drdy_exti_handler:
 1052              	.LFB51:
 247:Core/Src/main.c ****   if (adc_configured)
 1053              		.loc 1 247 36 is_stmt 1 view -0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 0
 1056              		@ frame_needed = 0, uses_anonymous_args = 0
 1057 0000 10B5     		push	{r4, lr}
 1058              		.cfi_def_cfa_offset 8
 1059              		.cfi_offset 4, -8
 1060              		.cfi_offset 14, -4
 248:Core/Src/main.c ****     ads131m04_read_adc_nonblocking(adc_data);
 1061              		.loc 1 248 3 view .LVU274
 248:Core/Src/main.c ****     ads131m04_read_adc_nonblocking(adc_data);
 1062              		.loc 1 248 7 is_stmt 0 view .LVU275
 1063 0002 044B     		ldr	r3, .L44
 1064 0004 1B78     		ldrb	r3, [r3]
 248:Core/Src/main.c ****     ads131m04_read_adc_nonblocking(adc_data);
 1065              		.loc 1 248 6 view .LVU276
 1066 0006 002B     		cmp	r3, #0
 1067 0008 00D1     		bne	.L43
 1068              	.L41:
 250:Core/Src/main.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 37


 1069              		.loc 1 250 1 view .LVU277
 1070              		@ sp needed
 1071 000a 10BD     		pop	{r4, pc}
 1072              	.L43:
 249:Core/Src/main.c **** }
 1073              		.loc 1 249 5 is_stmt 1 view .LVU278
 1074 000c 0248     		ldr	r0, .L44+4
 1075 000e FFF7FEFF 		bl	ads131m04_read_adc_nonblocking
 1076              	.LVL69:
 250:Core/Src/main.c **** 
 1077              		.loc 1 250 1 is_stmt 0 view .LVU279
 1078 0012 FAE7     		b	.L41
 1079              	.L45:
 1080              		.align	2
 1081              	.L44:
 1082 0014 00000000 		.word	adc_configured
 1083 0018 00000000 		.word	adc_data
 1084              		.cfi_endproc
 1085              	.LFE51:
 1087              		.section	.text.ads131m04_cmd,"ax",%progbits
 1088              		.align	1
 1089              		.global	ads131m04_cmd
 1090              		.syntax unified
 1091              		.code	16
 1092              		.thumb_func
 1094              	ads131m04_cmd:
 1095              	.LVL70:
 1096              	.LFB52:
 252:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1097              		.loc 1 252 71 is_stmt 1 view -0
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 24
 1100              		@ frame_needed = 0, uses_anonymous_args = 0
 252:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1101              		.loc 1 252 71 is_stmt 0 view .LVU281
 1102 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1103              		.cfi_def_cfa_offset 20
 1104              		.cfi_offset 4, -20
 1105              		.cfi_offset 5, -16
 1106              		.cfi_offset 6, -12
 1107              		.cfi_offset 7, -8
 1108              		.cfi_offset 14, -4
 1109 0002 87B0     		sub	sp, sp, #28
 1110              		.cfi_def_cfa_offset 48
 1111 0004 0700     		movs	r7, r0
 1112 0006 0D00     		movs	r5, r1
 1113 0008 1600     		movs	r6, r2
 253:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 1114              		.loc 1 253 3 is_stmt 1 view .LVU282
 1115 000a 0620     		movs	r0, #6
 1116              	.LVL71:
 253:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 1117              		.loc 1 253 3 is_stmt 0 view .LVU283
 1118 000c FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1119              	.LVL72:
 254:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 1120              		.loc 1 254 3 is_stmt 1 view .LVU284
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 38


 254:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 1121              		.loc 1 254 12 is_stmt 0 view .LVU285
 1122 0010 03AC     		add	r4, sp, #12
 1123 0012 2780     		strh	r7, [r4]
 1124 0014 0023     		movs	r3, #0
 1125 0016 6380     		strh	r3, [r4, #2]
 1126 0018 A380     		strh	r3, [r4, #4]
 1127 001a E380     		strh	r3, [r4, #6]
 1128 001c 2381     		strh	r3, [r4, #8]
 1129 001e 6381     		strh	r3, [r4, #10]
 255:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, tx_rx_delay);
 1130              		.loc 1 255 3 is_stmt 1 view .LVU286
 255:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, tx_rx_delay);
 1131              		.loc 1 255 12 is_stmt 0 view .LVU287
 1132 0020 0C22     		movs	r2, #12
 1133 0022 0021     		movs	r1, #0
 1134 0024 6846     		mov	r0, sp
 1135 0026 FFF7FEFF 		bl	memset
 1136              	.LVL73:
 256:Core/Src/main.c ****   ads131m04_transfer_frame(out+6, zeros, 0);
 1137              		.loc 1 256 3 is_stmt 1 view .LVU288
 1138 002a 3200     		movs	r2, r6
 1139 002c 2100     		movs	r1, r4
 1140 002e 2800     		movs	r0, r5
 1141 0030 FFF7FEFF 		bl	ads131m04_transfer_frame
 1142              	.LVL74:
 257:Core/Src/main.c ****   if (tx_rx_delay) delay_us(tx_rx_delay); 
 1143              		.loc 1 257 3 view .LVU289
 1144 0034 2800     		movs	r0, r5
 1145 0036 1830     		adds	r0, r0, #24
 1146 0038 0022     		movs	r2, #0
 1147 003a 6946     		mov	r1, sp
 1148 003c FFF7FEFF 		bl	ads131m04_transfer_frame
 1149              	.LVL75:
 258:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 1150              		.loc 1 258 3 view .LVU290
 258:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 1151              		.loc 1 258 6 is_stmt 0 view .LVU291
 1152 0040 002E     		cmp	r6, #0
 1153 0042 04D1     		bne	.L48
 1154              	.L47:
 259:Core/Src/main.c **** }
 1155              		.loc 1 259 3 is_stmt 1 view .LVU292
 1156 0044 0620     		movs	r0, #6
 1157 0046 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1158              	.LVL76:
 260:Core/Src/main.c **** 
 1159              		.loc 1 260 1 is_stmt 0 view .LVU293
 1160 004a 07B0     		add	sp, sp, #28
 1161              		@ sp needed
 1162              	.LVL77:
 260:Core/Src/main.c **** 
 1163              		.loc 1 260 1 view .LVU294
 1164 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 1165              	.LVL78:
 1166              	.L48:
 258:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 39


 1167              		.loc 1 258 20 is_stmt 1 discriminator 1 view .LVU295
 1168 004e 3000     		movs	r0, r6
 1169 0050 FFF7FEFF 		bl	delay_us
 1170              	.LVL79:
 1171 0054 F6E7     		b	.L47
 1172              		.cfi_endproc
 1173              	.LFE52:
 1175              		.section	.text.ads131m04_reset,"ax",%progbits
 1176              		.align	1
 1177              		.global	ads131m04_reset
 1178              		.syntax unified
 1179              		.code	16
 1180              		.thumb_func
 1182              	ads131m04_reset:
 1183              	.LFB53:
 262:Core/Src/main.c ****     uint32_t recv[12];
 1184              		.loc 1 262 28 view -0
 1185              		.cfi_startproc
 1186              		@ args = 0, pretend = 0, frame = 48
 1187              		@ frame_needed = 0, uses_anonymous_args = 0
 1188 0000 00B5     		push	{lr}
 1189              		.cfi_def_cfa_offset 4
 1190              		.cfi_offset 14, -4
 1191 0002 8DB0     		sub	sp, sp, #52
 1192              		.cfi_def_cfa_offset 56
 263:Core/Src/main.c ****     ads131m04_cmd(0x0011, recv, 12); // reset time
 1193              		.loc 1 263 5 view .LVU297
 264:Core/Src/main.c ****     return recv[9];
 1194              		.loc 1 264 5 view .LVU298
 1195 0004 0C22     		movs	r2, #12
 1196 0006 6946     		mov	r1, sp
 1197 0008 1120     		movs	r0, #17
 1198 000a FFF7FEFF 		bl	ads131m04_cmd
 1199              	.LVL80:
 265:Core/Src/main.c **** }
 1200              		.loc 1 265 5 view .LVU299
 265:Core/Src/main.c **** }
 1201              		.loc 1 265 16 is_stmt 0 view .LVU300
 1202 000e 6B46     		mov	r3, sp
 1203 0010 988C     		ldrh	r0, [r3, #36]
 266:Core/Src/main.c **** 
 1204              		.loc 1 266 1 view .LVU301
 1205 0012 0DB0     		add	sp, sp, #52
 1206              		@ sp needed
 1207 0014 00BD     		pop	{pc}
 1208              		.cfi_endproc
 1209              	.LFE53:
 1211              		.section	.text.ads131m04_status,"ax",%progbits
 1212              		.align	1
 1213              		.global	ads131m04_status
 1214              		.syntax unified
 1215              		.code	16
 1216              		.thumb_func
 1218              	ads131m04_status:
 1219              	.LFB54:
 268:Core/Src/main.c ****     uint32_t recv[12];
 1220              		.loc 1 268 29 is_stmt 1 view -0
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 40


 1221              		.cfi_startproc
 1222              		@ args = 0, pretend = 0, frame = 48
 1223              		@ frame_needed = 0, uses_anonymous_args = 0
 1224 0000 00B5     		push	{lr}
 1225              		.cfi_def_cfa_offset 4
 1226              		.cfi_offset 14, -4
 1227 0002 8DB0     		sub	sp, sp, #52
 1228              		.cfi_def_cfa_offset 56
 269:Core/Src/main.c ****     ads131m04_cmd(0x0000, recv, 0);
 1229              		.loc 1 269 5 view .LVU303
 270:Core/Src/main.c ****     return recv[6] >> 8;
 1230              		.loc 1 270 5 view .LVU304
 1231 0004 0022     		movs	r2, #0
 1232 0006 6946     		mov	r1, sp
 1233 0008 0020     		movs	r0, #0
 1234 000a FFF7FEFF 		bl	ads131m04_cmd
 1235              	.LVL81:
 271:Core/Src/main.c **** }
 1236              		.loc 1 271 5 view .LVU305
 271:Core/Src/main.c **** }
 1237              		.loc 1 271 16 is_stmt 0 view .LVU306
 1238 000e 0698     		ldr	r0, [sp, #24]
 271:Core/Src/main.c **** }
 1239              		.loc 1 271 20 view .LVU307
 1240 0010 000A     		lsrs	r0, r0, #8
 1241 0012 80B2     		uxth	r0, r0
 272:Core/Src/main.c **** 
 1242              		.loc 1 272 1 view .LVU308
 1243 0014 0DB0     		add	sp, sp, #52
 1244              		@ sp needed
 1245 0016 00BD     		pop	{pc}
 1246              		.cfi_endproc
 1247              	.LFE54:
 1249              		.section	.text.ads131m04_standby,"ax",%progbits
 1250              		.align	1
 1251              		.global	ads131m04_standby
 1252              		.syntax unified
 1253              		.code	16
 1254              		.thumb_func
 1256              	ads131m04_standby:
 1257              	.LFB55:
 274:Core/Src/main.c ****     uint32_t recv[12];
 1258              		.loc 1 274 30 is_stmt 1 view -0
 1259              		.cfi_startproc
 1260              		@ args = 0, pretend = 0, frame = 48
 1261              		@ frame_needed = 0, uses_anonymous_args = 0
 1262 0000 00B5     		push	{lr}
 1263              		.cfi_def_cfa_offset 4
 1264              		.cfi_offset 14, -4
 1265 0002 8DB0     		sub	sp, sp, #52
 1266              		.cfi_def_cfa_offset 56
 275:Core/Src/main.c ****     ads131m04_cmd(0x0022, recv, 0);
 1267              		.loc 1 275 5 view .LVU310
 276:Core/Src/main.c ****     return recv[6] >> 8;
 1268              		.loc 1 276 5 view .LVU311
 1269 0004 0022     		movs	r2, #0
 1270 0006 6946     		mov	r1, sp
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 41


 1271 0008 2220     		movs	r0, #34
 1272 000a FFF7FEFF 		bl	ads131m04_cmd
 1273              	.LVL82:
 277:Core/Src/main.c **** }
 1274              		.loc 1 277 5 view .LVU312
 277:Core/Src/main.c **** }
 1275              		.loc 1 277 16 is_stmt 0 view .LVU313
 1276 000e 0698     		ldr	r0, [sp, #24]
 277:Core/Src/main.c **** }
 1277              		.loc 1 277 20 view .LVU314
 1278 0010 000A     		lsrs	r0, r0, #8
 1279 0012 80B2     		uxth	r0, r0
 278:Core/Src/main.c **** 
 1280              		.loc 1 278 1 view .LVU315
 1281 0014 0DB0     		add	sp, sp, #52
 1282              		@ sp needed
 1283 0016 00BD     		pop	{pc}
 1284              		.cfi_endproc
 1285              	.LFE55:
 1287              		.section	.text.ads131m04_wake,"ax",%progbits
 1288              		.align	1
 1289              		.global	ads131m04_wake
 1290              		.syntax unified
 1291              		.code	16
 1292              		.thumb_func
 1294              	ads131m04_wake:
 1295              	.LFB56:
 280:Core/Src/main.c ****     uint32_t recv[12];
 1296              		.loc 1 280 27 is_stmt 1 view -0
 1297              		.cfi_startproc
 1298              		@ args = 0, pretend = 0, frame = 48
 1299              		@ frame_needed = 0, uses_anonymous_args = 0
 1300 0000 00B5     		push	{lr}
 1301              		.cfi_def_cfa_offset 4
 1302              		.cfi_offset 14, -4
 1303 0002 8DB0     		sub	sp, sp, #52
 1304              		.cfi_def_cfa_offset 56
 281:Core/Src/main.c ****     ads131m04_cmd(0x0033, recv, 0);
 1305              		.loc 1 281 5 view .LVU317
 282:Core/Src/main.c ****     return recv[6] >> 8;
 1306              		.loc 1 282 5 view .LVU318
 1307 0004 0022     		movs	r2, #0
 1308 0006 6946     		mov	r1, sp
 1309 0008 3320     		movs	r0, #51
 1310 000a FFF7FEFF 		bl	ads131m04_cmd
 1311              	.LVL83:
 283:Core/Src/main.c **** }
 1312              		.loc 1 283 5 view .LVU319
 283:Core/Src/main.c **** }
 1313              		.loc 1 283 16 is_stmt 0 view .LVU320
 1314 000e 0698     		ldr	r0, [sp, #24]
 283:Core/Src/main.c **** }
 1315              		.loc 1 283 20 view .LVU321
 1316 0010 000A     		lsrs	r0, r0, #8
 1317 0012 80B2     		uxth	r0, r0
 284:Core/Src/main.c **** 
 1318              		.loc 1 284 1 view .LVU322
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 42


 1319 0014 0DB0     		add	sp, sp, #52
 1320              		@ sp needed
 1321 0016 00BD     		pop	{pc}
 1322              		.cfi_endproc
 1323              	.LFE56:
 1325              		.section	.text.ads131m04_lock,"ax",%progbits
 1326              		.align	1
 1327              		.global	ads131m04_lock
 1328              		.syntax unified
 1329              		.code	16
 1330              		.thumb_func
 1332              	ads131m04_lock:
 1333              	.LFB57:
 286:Core/Src/main.c ****     uint32_t recv[12];
 1334              		.loc 1 286 27 is_stmt 1 view -0
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 48
 1337              		@ frame_needed = 0, uses_anonymous_args = 0
 1338 0000 00B5     		push	{lr}
 1339              		.cfi_def_cfa_offset 4
 1340              		.cfi_offset 14, -4
 1341 0002 8DB0     		sub	sp, sp, #52
 1342              		.cfi_def_cfa_offset 56
 287:Core/Src/main.c ****     ads131m04_cmd(0x0555, recv, 0);
 1343              		.loc 1 287 5 view .LVU324
 288:Core/Src/main.c ****     return recv[6] >> 8;
 1344              		.loc 1 288 5 view .LVU325
 1345 0004 0022     		movs	r2, #0
 1346 0006 6946     		mov	r1, sp
 1347 0008 0348     		ldr	r0, .L54
 1348 000a FFF7FEFF 		bl	ads131m04_cmd
 1349              	.LVL84:
 289:Core/Src/main.c **** }
 1350              		.loc 1 289 5 view .LVU326
 289:Core/Src/main.c **** }
 1351              		.loc 1 289 16 is_stmt 0 view .LVU327
 1352 000e 0698     		ldr	r0, [sp, #24]
 289:Core/Src/main.c **** }
 1353              		.loc 1 289 20 view .LVU328
 1354 0010 000A     		lsrs	r0, r0, #8
 1355 0012 80B2     		uxth	r0, r0
 290:Core/Src/main.c **** 
 1356              		.loc 1 290 1 view .LVU329
 1357 0014 0DB0     		add	sp, sp, #52
 1358              		@ sp needed
 1359 0016 00BD     		pop	{pc}
 1360              	.L55:
 1361              		.align	2
 1362              	.L54:
 1363 0018 55050000 		.word	1365
 1364              		.cfi_endproc
 1365              	.LFE57:
 1367              		.section	.text.ads131m04_unlock,"ax",%progbits
 1368              		.align	1
 1369              		.global	ads131m04_unlock
 1370              		.syntax unified
 1371              		.code	16
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 43


 1372              		.thumb_func
 1374              	ads131m04_unlock:
 1375              	.LFB58:
 292:Core/Src/main.c ****     uint32_t recv[12];
 1376              		.loc 1 292 29 is_stmt 1 view -0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 48
 1379              		@ frame_needed = 0, uses_anonymous_args = 0
 1380 0000 00B5     		push	{lr}
 1381              		.cfi_def_cfa_offset 4
 1382              		.cfi_offset 14, -4
 1383 0002 8DB0     		sub	sp, sp, #52
 1384              		.cfi_def_cfa_offset 56
 293:Core/Src/main.c ****     ads131m04_cmd(0x0655, recv, 0);
 1385              		.loc 1 293 5 view .LVU331
 294:Core/Src/main.c ****     return recv[6] >> 8;
 1386              		.loc 1 294 5 view .LVU332
 1387 0004 0022     		movs	r2, #0
 1388 0006 6946     		mov	r1, sp
 1389 0008 0348     		ldr	r0, .L57
 1390 000a FFF7FEFF 		bl	ads131m04_cmd
 1391              	.LVL85:
 295:Core/Src/main.c **** }
 1392              		.loc 1 295 5 view .LVU333
 295:Core/Src/main.c **** }
 1393              		.loc 1 295 16 is_stmt 0 view .LVU334
 1394 000e 0698     		ldr	r0, [sp, #24]
 295:Core/Src/main.c **** }
 1395              		.loc 1 295 20 view .LVU335
 1396 0010 000A     		lsrs	r0, r0, #8
 1397 0012 80B2     		uxth	r0, r0
 296:Core/Src/main.c **** 
 1398              		.loc 1 296 1 view .LVU336
 1399 0014 0DB0     		add	sp, sp, #52
 1400              		@ sp needed
 1401 0016 00BD     		pop	{pc}
 1402              	.L58:
 1403              		.align	2
 1404              	.L57:
 1405 0018 55060000 		.word	1621
 1406              		.cfi_endproc
 1407              	.LFE58:
 1409              		.section	.text.ads131m04_rreg,"ax",%progbits
 1410              		.align	1
 1411              		.global	ads131m04_rreg
 1412              		.syntax unified
 1413              		.code	16
 1414              		.thumb_func
 1416              	ads131m04_rreg:
 1417              	.LVL86:
 1418              	.LFB59:
 299:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((reg & 0x3F) << 7);
 1419              		.loc 1 299 38 is_stmt 1 view -0
 1420              		.cfi_startproc
 1421              		@ args = 0, pretend = 0, frame = 48
 1422              		@ frame_needed = 0, uses_anonymous_args = 0
 299:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((reg & 0x3F) << 7);
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 44


 1423              		.loc 1 299 38 is_stmt 0 view .LVU338
 1424 0000 00B5     		push	{lr}
 1425              		.cfi_def_cfa_offset 4
 1426              		.cfi_offset 14, -4
 1427 0002 8DB0     		sub	sp, sp, #52
 1428              		.cfi_def_cfa_offset 56
 300:Core/Src/main.c ****     uint32_t recv[12];
 1429              		.loc 1 300 5 is_stmt 1 view .LVU339
 300:Core/Src/main.c ****     uint32_t recv[12];
 1430              		.loc 1 300 43 is_stmt 0 view .LVU340
 1431 0004 C301     		lsls	r3, r0, #7
 1432 0006 FC22     		movs	r2, #252
 1433 0008 5201     		lsls	r2, r2, #5
 1434 000a 1340     		ands	r3, r2
 300:Core/Src/main.c ****     uint32_t recv[12];
 1435              		.loc 1 300 27 view .LVU341
 1436 000c 0548     		ldr	r0, .L60
 1437              	.LVL87:
 300:Core/Src/main.c ****     uint32_t recv[12];
 1438              		.loc 1 300 27 view .LVU342
 1439 000e 1843     		orrs	r0, r3
 300:Core/Src/main.c ****     uint32_t recv[12];
 1440              		.loc 1 300 14 view .LVU343
 1441 0010 80B2     		uxth	r0, r0
 1442              	.LVL88:
 301:Core/Src/main.c ****     ads131m04_cmd(cmd, recv, 0);
 1443              		.loc 1 301 5 is_stmt 1 view .LVU344
 302:Core/Src/main.c ****     return recv[6] >> 8;
 1444              		.loc 1 302 5 view .LVU345
 1445 0012 0022     		movs	r2, #0
 1446 0014 6946     		mov	r1, sp
 1447 0016 FFF7FEFF 		bl	ads131m04_cmd
 1448              	.LVL89:
 303:Core/Src/main.c **** }
 1449              		.loc 1 303 5 view .LVU346
 303:Core/Src/main.c **** }
 1450              		.loc 1 303 16 is_stmt 0 view .LVU347
 1451 001a 0698     		ldr	r0, [sp, #24]
 303:Core/Src/main.c **** }
 1452              		.loc 1 303 20 view .LVU348
 1453 001c 000A     		lsrs	r0, r0, #8
 1454 001e 80B2     		uxth	r0, r0
 304:Core/Src/main.c **** 
 1455              		.loc 1 304 1 view .LVU349
 1456 0020 0DB0     		add	sp, sp, #52
 1457              		@ sp needed
 1458 0022 00BD     		pop	{pc}
 1459              	.L61:
 1460              		.align	2
 1461              	.L60:
 1462 0024 00A0FFFF 		.word	-24576
 1463              		.cfi_endproc
 1464              	.LFE59:
 1466              		.section	.text.ads131m04_rreg_multiple,"ax",%progbits
 1467              		.align	1
 1468              		.global	ads131m04_rreg_multiple
 1469              		.syntax unified
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 45


 1470              		.code	16
 1471              		.thumb_func
 1473              	ads131m04_rreg_multiple:
 1474              	.LVL90:
 1475              	.LFB60:
 309:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1476              		.loc 1 309 79 is_stmt 1 view -0
 1477              		.cfi_startproc
 1478              		@ args = 0, pretend = 0, frame = 16
 1479              		@ frame_needed = 0, uses_anonymous_args = 0
 309:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1480              		.loc 1 309 79 is_stmt 0 view .LVU351
 1481 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1482              		.cfi_def_cfa_offset 20
 1483              		.cfi_offset 4, -20
 1484              		.cfi_offset 5, -16
 1485              		.cfi_offset 6, -12
 1486              		.cfi_offset 7, -8
 1487              		.cfi_offset 14, -4
 1488 0002 85B0     		sub	sp, sp, #20
 1489              		.cfi_def_cfa_offset 40
 1490 0004 0400     		movs	r4, r0
 1491 0006 0D00     		movs	r5, r1
 1492 0008 1600     		movs	r6, r2
 310:Core/Src/main.c ****   // if count is 1 then just use regular rreg and duplicate out[6] to out[7]
 1493              		.loc 1 310 3 is_stmt 1 view .LVU352
 1494 000a 0620     		movs	r0, #6
 1495              	.LVL91:
 310:Core/Src/main.c ****   // if count is 1 then just use regular rreg and duplicate out[6] to out[7]
 1496              		.loc 1 310 3 is_stmt 0 view .LVU353
 1497 000c FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1498              	.LVL92:
 312:Core/Src/main.c ****   if (count == 1) {
 1499              		.loc 1 312 3 is_stmt 1 view .LVU354
 312:Core/Src/main.c ****   if (count == 1) {
 1500              		.loc 1 312 6 is_stmt 0 view .LVU355
 1501 0010 002D     		cmp	r5, #0
 1502 0012 49D0     		beq	.L62
 313:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((start_reg & 0x3F) << 7);
 1503              		.loc 1 313 3 is_stmt 1 view .LVU356
 313:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((start_reg & 0x3F) << 7);
 1504              		.loc 1 313 6 is_stmt 0 view .LVU357
 1505 0014 012D     		cmp	r5, #1
 1506 0016 23D0     		beq	.L69
 321:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 1507              		.loc 1 321 3 is_stmt 1 view .LVU358
 321:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 1508              		.loc 1 321 47 is_stmt 0 view .LVU359
 1509 0018 E401     		lsls	r4, r4, #7
 1510 001a FC23     		movs	r3, #252
 1511 001c 5B01     		lsls	r3, r3, #5
 1512 001e 1C40     		ands	r4, r3
 321:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 1513              		.loc 1 321 25 view .LVU360
 1514 0020 224A     		ldr	r2, .L70
 1515 0022 2243     		orrs	r2, r4
 321:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 46


 1516              		.loc 1 321 63 view .LVU361
 1517 0024 6B1E     		subs	r3, r5, #1
 321:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 1518              		.loc 1 321 12 view .LVU362
 1519 0026 7F21     		movs	r1, #127
 1520 0028 0B40     		ands	r3, r1
 1521 002a 1343     		orrs	r3, r2
 1522              	.LVL93:
 322:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, 0);
 1523              		.loc 1 322 3 is_stmt 1 view .LVU363
 322:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, 0);
 1524              		.loc 1 322 12 is_stmt 0 view .LVU364
 1525 002c 01A9     		add	r1, sp, #4
 1526 002e 0B80     		strh	r3, [r1]
 1527 0030 0023     		movs	r3, #0
 1528              	.LVL94:
 322:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, 0);
 1529              		.loc 1 322 12 view .LVU365
 1530 0032 4B80     		strh	r3, [r1, #2]
 1531 0034 8B80     		strh	r3, [r1, #4]
 1532 0036 CB80     		strh	r3, [r1, #6]
 1533 0038 0B81     		strh	r3, [r1, #8]
 1534 003a 4B81     		strh	r3, [r1, #10]
 323:Core/Src/main.c **** 
 1535              		.loc 1 323 3 is_stmt 1 view .LVU366
 1536 003c 0022     		movs	r2, #0
 1537 003e 3000     		movs	r0, r6
 1538 0040 FFF7FEFF 		bl	ads131m04_transfer_frame
 1539              	.LVL95:
 326:Core/Src/main.c ****   
 1540              		.loc 1 326 3 view .LVU367
 1541 0044 9020     		movs	r0, #144
 1542 0046 0022     		movs	r2, #0
 1543 0048 1021     		movs	r1, #16
 1544 004a C005     		lsls	r0, r0, #23
 1545 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1546              	.LVL96:
 329:Core/Src/main.c ****   for (uint8_t i = 0; i < max; i++) {
 1547              		.loc 1 329 3 view .LVU368
 329:Core/Src/main.c ****   for (uint8_t i = 0; i < max; i++) {
 1548              		.loc 1 329 11 is_stmt 0 view .LVU369
 1549 0050 2F1C     		adds	r7, r5, #0
 1550 0052 032D     		cmp	r5, #3
 1551 0054 00D8     		bhi	.L65
 1552 0056 0427     		movs	r7, #4
 1553              	.L65:
 1554 0058 0237     		adds	r7, r7, #2
 1555 005a FFB2     		uxtb	r7, r7
 1556              	.LVL97:
 330:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1557              		.loc 1 330 3 is_stmt 1 view .LVU370
 1558              	.LBB9:
 330:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1559              		.loc 1 330 8 view .LVU371
 330:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1560              		.loc 1 330 16 is_stmt 0 view .LVU372
 1561 005c 0024     		movs	r4, #0
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 47


 1562              	.LVL98:
 330:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1563              		.loc 1 330 3 view .LVU373
 1564 005e 15E0     		b	.L66
 1565              	.LVL99:
 1566              	.L69:
 330:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1567              		.loc 1 330 3 view .LVU374
 1568              	.LBE9:
 1569              	.LBB10:
 314:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 1570              		.loc 1 314 5 is_stmt 1 view .LVU375
 314:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 1571              		.loc 1 314 49 is_stmt 0 view .LVU376
 1572 0060 E401     		lsls	r4, r4, #7
 1573 0062 FC23     		movs	r3, #252
 1574 0064 5B01     		lsls	r3, r3, #5
 1575 0066 1C40     		ands	r4, r3
 314:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 1576              		.loc 1 314 27 view .LVU377
 1577 0068 1048     		ldr	r0, .L70
 1578 006a 2043     		orrs	r0, r4
 314:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 1579              		.loc 1 314 14 view .LVU378
 1580 006c 80B2     		uxth	r0, r0
 1581              	.LVL100:
 315:Core/Src/main.c ****     out[7] = out[6];
 1582              		.loc 1 315 5 is_stmt 1 view .LVU379
 1583 006e 0022     		movs	r2, #0
 1584 0070 3100     		movs	r1, r6
 1585 0072 FFF7FEFF 		bl	ads131m04_cmd
 1586              	.LVL101:
 316:Core/Src/main.c ****     return;
 1587              		.loc 1 316 5 view .LVU380
 316:Core/Src/main.c ****     return;
 1588              		.loc 1 316 12 is_stmt 0 view .LVU381
 1589 0076 B369     		ldr	r3, [r6, #24]
 1590 0078 F361     		str	r3, [r6, #28]
 317:Core/Src/main.c ****   }
 1591              		.loc 1 317 5 is_stmt 1 view .LVU382
 1592 007a 15E0     		b	.L62
 1593              	.LVL102:
 1594              	.L67:
 317:Core/Src/main.c ****   }
 1595              		.loc 1 317 5 is_stmt 0 view .LVU383
 1596              	.LBE10:
 1597              	.LBB11:
 331:Core/Src/main.c ****   }
 1598              		.loc 1 331 5 is_stmt 1 discriminator 3 view .LVU384
 331:Core/Src/main.c ****   }
 1599              		.loc 1 331 8 is_stmt 0 discriminator 3 view .LVU385
 1600 007c A500     		lsls	r5, r4, #2
 1601 007e 7519     		adds	r5, r6, r5
 331:Core/Src/main.c ****   }
 1602              		.loc 1 331 14 discriminator 3 view .LVU386
 1603 0080 0020     		movs	r0, #0
 1604 0082 FFF7FEFF 		bl	ads131m04_transfer_word
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 48


 1605              	.LVL103:
 331:Core/Src/main.c ****   }
 1606              		.loc 1 331 12 discriminator 3 view .LVU387
 1607 0086 2860     		str	r0, [r5]
 330:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1608              		.loc 1 330 33 is_stmt 1 discriminator 3 view .LVU388
 1609 0088 0134     		adds	r4, r4, #1
 1610              	.LVL104:
 330:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1611              		.loc 1 330 33 is_stmt 0 discriminator 3 view .LVU389
 1612 008a E4B2     		uxtb	r4, r4
 1613              	.LVL105:
 1614              	.L66:
 330:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1615              		.loc 1 330 25 is_stmt 1 discriminator 1 view .LVU390
 1616 008c BC42     		cmp	r4, r7
 1617 008e F5D3     		bcc	.L67
 1618              	.LBE11:
 334:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 1619              		.loc 1 334 3 view .LVU391
 1620 0090 0420     		movs	r0, #4
 1621 0092 FFF7FEFF 		bl	delay_us
 1622              	.LVL106:
 335:Core/Src/main.c **** 
 1623              		.loc 1 335 3 view .LVU392
 1624 0096 9020     		movs	r0, #144
 1625 0098 0122     		movs	r2, #1
 1626 009a 1021     		movs	r1, #16
 1627 009c C005     		lsls	r0, r0, #23
 1628 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1629              	.LVL107:
 337:Core/Src/main.c **** }
 1630              		.loc 1 337 3 view .LVU393
 1631 00a2 0620     		movs	r0, #6
 1632 00a4 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1633              	.LVL108:
 1634              	.L62:
 338:Core/Src/main.c **** 
 1635              		.loc 1 338 1 is_stmt 0 view .LVU394
 1636 00a8 05B0     		add	sp, sp, #20
 1637              		@ sp needed
 1638              	.LVL109:
 338:Core/Src/main.c **** 
 1639              		.loc 1 338 1 view .LVU395
 1640 00aa F0BD     		pop	{r4, r5, r6, r7, pc}
 1641              	.L71:
 1642              		.align	2
 1643              	.L70:
 1644 00ac 00A0FFFF 		.word	-24576
 1645              		.cfi_endproc
 1646              	.LFE60:
 1648              		.section	.text.ads131m04_wreg,"ax",%progbits
 1649              		.align	1
 1650              		.global	ads131m04_wreg
 1651              		.syntax unified
 1652              		.code	16
 1653              		.thumb_func
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 49


 1655              	ads131m04_wreg:
 1656              	.LVL110:
 1657              	.LFB61:
 341:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1658              		.loc 1 341 53 is_stmt 1 view -0
 1659              		.cfi_startproc
 1660              		@ args = 0, pretend = 0, frame = 72
 1661              		@ frame_needed = 0, uses_anonymous_args = 0
 341:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1662              		.loc 1 341 53 is_stmt 0 view .LVU397
 1663 0000 30B5     		push	{r4, r5, lr}
 1664              		.cfi_def_cfa_offset 12
 1665              		.cfi_offset 4, -12
 1666              		.cfi_offset 5, -8
 1667              		.cfi_offset 14, -4
 1668 0002 93B0     		sub	sp, sp, #76
 1669              		.cfi_def_cfa_offset 88
 1670 0004 0400     		movs	r4, r0
 1671 0006 0D00     		movs	r5, r1
 342:Core/Src/main.c ****   uint16_t cmd = 0x6000 | ((reg & 0x3F) << 7);
 1672              		.loc 1 342 3 is_stmt 1 view .LVU398
 1673 0008 0620     		movs	r0, #6
 1674              	.LVL111:
 342:Core/Src/main.c ****   uint16_t cmd = 0x6000 | ((reg & 0x3F) << 7);
 1675              		.loc 1 342 3 is_stmt 0 view .LVU399
 1676 000a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1677              	.LVL112:
 343:Core/Src/main.c ****   uint32_t recv[12];
 1678              		.loc 1 343 3 is_stmt 1 view .LVU400
 343:Core/Src/main.c ****   uint32_t recv[12];
 1679              		.loc 1 343 41 is_stmt 0 view .LVU401
 1680 000e E401     		lsls	r4, r4, #7
 1681 0010 FC23     		movs	r3, #252
 1682 0012 5B01     		lsls	r3, r3, #5
 1683 0014 1C40     		ands	r4, r3
 343:Core/Src/main.c ****   uint32_t recv[12];
 1684              		.loc 1 343 12 view .LVU402
 1685 0016 C023     		movs	r3, #192
 1686 0018 DB01     		lsls	r3, r3, #7
 1687 001a 2343     		orrs	r3, r4
 1688              	.LVL113:
 344:Core/Src/main.c ****   uint16_t words[6] = {cmd, data, 0, 0, 0, 0};
 1689              		.loc 1 344 3 is_stmt 1 view .LVU403
 345:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 1690              		.loc 1 345 3 view .LVU404
 345:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 1691              		.loc 1 345 12 is_stmt 0 view .LVU405
 1692 001c 03AC     		add	r4, sp, #12
 1693 001e 2380     		strh	r3, [r4]
 1694 0020 6580     		strh	r5, [r4, #2]
 1695 0022 0023     		movs	r3, #0
 1696              	.LVL114:
 345:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 1697              		.loc 1 345 12 view .LVU406
 1698 0024 A380     		strh	r3, [r4, #4]
 1699 0026 E380     		strh	r3, [r4, #6]
 1700 0028 2381     		strh	r3, [r4, #8]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 50


 1701 002a 6381     		strh	r3, [r4, #10]
 346:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 1702              		.loc 1 346 3 is_stmt 1 view .LVU407
 346:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 1703              		.loc 1 346 12 is_stmt 0 view .LVU408
 1704 002c 0C22     		movs	r2, #12
 1705 002e 0021     		movs	r1, #0
 1706 0030 6846     		mov	r0, sp
 1707 0032 FFF7FEFF 		bl	memset
 1708              	.LVL115:
 347:Core/Src/main.c ****   ads131m04_transfer_frame(recv+6, zeros, 0);
 1709              		.loc 1 347 3 is_stmt 1 view .LVU409
 1710 0036 0022     		movs	r2, #0
 1711 0038 2100     		movs	r1, r4
 1712 003a 06A8     		add	r0, sp, #24
 1713 003c FFF7FEFF 		bl	ads131m04_transfer_frame
 1714              	.LVL116:
 348:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 1715              		.loc 1 348 3 view .LVU410
 1716 0040 0022     		movs	r2, #0
 1717 0042 6946     		mov	r1, sp
 1718 0044 0CA8     		add	r0, sp, #48
 1719 0046 FFF7FEFF 		bl	ads131m04_transfer_frame
 1720              	.LVL117:
 349:Core/Src/main.c ****   return recv[6] >> 8;
 1721              		.loc 1 349 3 view .LVU411
 1722 004a 0620     		movs	r0, #6
 1723 004c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1724              	.LVL118:
 350:Core/Src/main.c **** }
 1725              		.loc 1 350 3 view .LVU412
 350:Core/Src/main.c **** }
 1726              		.loc 1 350 14 is_stmt 0 view .LVU413
 1727 0050 0C98     		ldr	r0, [sp, #48]
 350:Core/Src/main.c **** }
 1728              		.loc 1 350 18 view .LVU414
 1729 0052 000A     		lsrs	r0, r0, #8
 1730 0054 80B2     		uxth	r0, r0
 351:Core/Src/main.c **** 
 1731              		.loc 1 351 1 view .LVU415
 1732 0056 13B0     		add	sp, sp, #76
 1733              		@ sp needed
 1734 0058 30BD     		pop	{r4, r5, pc}
 1735              		.cfi_endproc
 1736              	.LFE61:
 1738              		.section	.text.ads131m04_wreg_multiple,"ax",%progbits
 1739              		.align	1
 1740              		.global	ads131m04_wreg_multiple
 1741              		.syntax unified
 1742              		.code	16
 1743              		.thumb_func
 1745              	ads131m04_wreg_multiple:
 1746              	.LVL119:
 1747              	.LFB62:
 354:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1748              		.loc 1 354 84 is_stmt 1 view -0
 1749              		.cfi_startproc
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 51


 1750              		@ args = 0, pretend = 0, frame = 64
 1751              		@ frame_needed = 0, uses_anonymous_args = 0
 354:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1752              		.loc 1 354 84 is_stmt 0 view .LVU417
 1753 0000 70B5     		push	{r4, r5, r6, lr}
 1754              		.cfi_def_cfa_offset 16
 1755              		.cfi_offset 4, -16
 1756              		.cfi_offset 5, -12
 1757              		.cfi_offset 6, -8
 1758              		.cfi_offset 14, -4
 1759 0002 90B0     		sub	sp, sp, #64
 1760              		.cfi_def_cfa_offset 80
 1761 0004 0400     		movs	r4, r0
 1762 0006 0D00     		movs	r5, r1
 1763 0008 1600     		movs	r6, r2
 355:Core/Src/main.c ****   if (count == 0) return 0;
 1764              		.loc 1 355 3 is_stmt 1 view .LVU418
 1765 000a 0620     		movs	r0, #6
 1766              	.LVL120:
 355:Core/Src/main.c ****   if (count == 0) return 0;
 1767              		.loc 1 355 3 is_stmt 0 view .LVU419
 1768 000c FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1769              	.LVL121:
 356:Core/Src/main.c **** 
 1770              		.loc 1 356 3 is_stmt 1 view .LVU420
 356:Core/Src/main.c **** 
 1771              		.loc 1 356 6 is_stmt 0 view .LVU421
 1772 0010 002D     		cmp	r5, #0
 1773 0012 02D1     		bne	.L80
 356:Core/Src/main.c **** 
 1774              		.loc 1 356 26 view .LVU422
 1775 0014 0020     		movs	r0, #0
 1776              	.L74:
 388:Core/Src/main.c **** 
 1777              		.loc 1 388 1 view .LVU423
 1778 0016 10B0     		add	sp, sp, #64
 1779              		@ sp needed
 1780              	.LVL122:
 388:Core/Src/main.c **** 
 1781              		.loc 1 388 1 view .LVU424
 1782 0018 70BD     		pop	{r4, r5, r6, pc}
 1783              	.LVL123:
 1784              	.L80:
 358:Core/Src/main.c ****   // manually transfer the first frame
 1785              		.loc 1 358 3 is_stmt 1 view .LVU425
 358:Core/Src/main.c ****   // manually transfer the first frame
 1786              		.loc 1 358 47 is_stmt 0 view .LVU426
 1787 001a E401     		lsls	r4, r4, #7
 1788 001c FC23     		movs	r3, #252
 1789 001e 5B01     		lsls	r3, r3, #5
 1790 0020 1C40     		ands	r4, r3
 358:Core/Src/main.c ****   // manually transfer the first frame
 1791              		.loc 1 358 25 view .LVU427
 1792 0022 C022     		movs	r2, #192
 1793 0024 D201     		lsls	r2, r2, #7
 1794 0026 2243     		orrs	r2, r4
 358:Core/Src/main.c ****   // manually transfer the first frame
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 52


 1795              		.loc 1 358 63 view .LVU428
 1796 0028 6B1E     		subs	r3, r5, #1
 358:Core/Src/main.c ****   // manually transfer the first frame
 1797              		.loc 1 358 12 view .LVU429
 1798 002a 7F21     		movs	r1, #127
 1799 002c 1C00     		movs	r4, r3
 1800 002e 0C40     		ands	r4, r1
 1801 0030 1443     		orrs	r4, r2
 1802              	.LVL124:
 360:Core/Src/main.c **** 
 1803              		.loc 1 360 3 is_stmt 1 view .LVU430
 1804 0032 9020     		movs	r0, #144
 1805 0034 0022     		movs	r2, #0
 1806 0036 6F39     		subs	r1, r1, #111
 1807 0038 C005     		lsls	r0, r0, #23
 1808 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1809              	.LVL125:
 363:Core/Src/main.c **** 
 1810              		.loc 1 363 3 view .LVU431
 1811 003e 2000     		movs	r0, r4
 1812 0040 FFF7FEFF 		bl	ads131m04_transfer_word
 1813              	.LVL126:
 366:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1814              		.loc 1 366 3 view .LVU432
 1815              	.LBB12:
 366:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1816              		.loc 1 366 8 view .LVU433
 366:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1817              		.loc 1 366 16 is_stmt 0 view .LVU434
 1818 0044 0024     		movs	r4, #0
 1819              	.LVL127:
 366:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1820              		.loc 1 366 3 view .LVU435
 1821 0046 05E0     		b	.L75
 1822              	.LVL128:
 1823              	.L76:
 367:Core/Src/main.c ****   }
 1824              		.loc 1 367 5 is_stmt 1 discriminator 3 view .LVU436
 367:Core/Src/main.c ****   }
 1825              		.loc 1 367 33 is_stmt 0 discriminator 3 view .LVU437
 1826 0048 6300     		lsls	r3, r4, #1
 367:Core/Src/main.c ****   }
 1827              		.loc 1 367 5 discriminator 3 view .LVU438
 1828 004a F05A     		ldrh	r0, [r6, r3]
 1829 004c FFF7FEFF 		bl	ads131m04_transfer_word
 1830              	.LVL129:
 366:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1831              		.loc 1 366 35 is_stmt 1 discriminator 3 view .LVU439
 1832 0050 0134     		adds	r4, r4, #1
 1833              	.LVL130:
 366:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1834              		.loc 1 366 35 is_stmt 0 discriminator 3 view .LVU440
 1835 0052 E4B2     		uxtb	r4, r4
 1836              	.LVL131:
 1837              	.L75:
 366:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1838              		.loc 1 366 25 is_stmt 1 discriminator 1 view .LVU441
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 53


 1839 0054 AC42     		cmp	r4, r5
 1840 0056 F7D3     		bcc	.L76
 1841              	.LBE12:
 1842              	.LBB13:
 371:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1843              		.loc 1 371 15 is_stmt 0 view .LVU442
 1844 0058 0024     		movs	r4, #0
 1845              	.LVL132:
 371:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1846              		.loc 1 371 15 view .LVU443
 1847 005a 04E0     		b	.L77
 1848              	.LVL133:
 1849              	.L78:
 372:Core/Src/main.c ****   }
 1850              		.loc 1 372 5 is_stmt 1 discriminator 3 view .LVU444
 1851 005c 0020     		movs	r0, #0
 1852 005e FFF7FEFF 		bl	ads131m04_transfer_word
 1853              	.LVL134:
 371:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1854              		.loc 1 371 38 discriminator 3 view .LVU445
 1855 0062 0134     		adds	r4, r4, #1
 1856              	.LVL135:
 371:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1857              		.loc 1 371 38 is_stmt 0 discriminator 3 view .LVU446
 1858 0064 64B2     		sxtb	r4, r4
 1859              	.LVL136:
 1860              	.L77:
 371:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1861              		.loc 1 371 24 is_stmt 1 discriminator 1 view .LVU447
 371:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1862              		.loc 1 371 28 is_stmt 0 discriminator 1 view .LVU448
 1863 0066 0423     		movs	r3, #4
 1864 0068 5B1B     		subs	r3, r3, r5
 371:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1865              		.loc 1 371 24 discriminator 1 view .LVU449
 1866 006a 9C42     		cmp	r4, r3
 1867 006c F6DB     		blt	.L78
 1868              	.LBE13:
 376:Core/Src/main.c **** 
 1869              		.loc 1 376 3 is_stmt 1 view .LVU450
 1870 006e 0020     		movs	r0, #0
 1871 0070 FFF7FEFF 		bl	ads131m04_transfer_word
 1872              	.LVL137:
 378:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 1873              		.loc 1 378 3 view .LVU451
 1874 0074 0420     		movs	r0, #4
 1875 0076 FFF7FEFF 		bl	delay_us
 1876              	.LVL138:
 379:Core/Src/main.c **** 
 1877              		.loc 1 379 3 view .LVU452
 1878 007a 9020     		movs	r0, #144
 1879 007c 0122     		movs	r2, #1
 1880 007e 1021     		movs	r1, #16
 1881 0080 C005     		lsls	r0, r0, #23
 1882 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1883              	.LVL139:
 382:Core/Src/main.c ****   uint32_t recv[12];
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 54


 1884              		.loc 1 382 3 view .LVU453
 382:Core/Src/main.c ****   uint32_t recv[12];
 1885              		.loc 1 382 12 is_stmt 0 view .LVU454
 1886 0086 0C22     		movs	r2, #12
 1887 0088 0021     		movs	r1, #0
 1888 008a 0DA8     		add	r0, sp, #52
 1889 008c FFF7FEFF 		bl	memset
 1890              	.LVL140:
 383:Core/Src/main.c ****   ads131m04_transfer_frame(recv, zeros, 0);
 1891              		.loc 1 383 3 is_stmt 1 view .LVU455
 384:Core/Src/main.c **** 
 1892              		.loc 1 384 3 view .LVU456
 1893 0090 0022     		movs	r2, #0
 1894 0092 0DA9     		add	r1, sp, #52
 1895 0094 01A8     		add	r0, sp, #4
 1896 0096 FFF7FEFF 		bl	ads131m04_transfer_frame
 1897              	.LVL141:
 386:Core/Src/main.c ****   return recv[6] >> 8;  
 1898              		.loc 1 386 3 view .LVU457
 1899 009a 0620     		movs	r0, #6
 1900 009c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1901              	.LVL142:
 387:Core/Src/main.c **** }
 1902              		.loc 1 387 3 view .LVU458
 387:Core/Src/main.c **** }
 1903              		.loc 1 387 14 is_stmt 0 view .LVU459
 1904 00a0 0798     		ldr	r0, [sp, #28]
 387:Core/Src/main.c **** }
 1905              		.loc 1 387 18 view .LVU460
 1906 00a2 000A     		lsrs	r0, r0, #8
 1907 00a4 80B2     		uxth	r0, r0
 1908 00a6 B6E7     		b	.L74
 1909              		.cfi_endproc
 1910              	.LFE62:
 1912              		.section	.text.ads131m04_test,"ax",%progbits
 1913              		.align	1
 1914              		.global	ads131m04_test
 1915              		.syntax unified
 1916              		.code	16
 1917              		.thumb_func
 1919              	ads131m04_test:
 1920              	.LFB63:
 391:Core/Src/main.c ****   uint16_t id = ads131m04_rreg(0x00);
 1921              		.loc 1 391 26 is_stmt 1 view -0
 1922              		.cfi_startproc
 1923              		@ args = 0, pretend = 0, frame = 0
 1924              		@ frame_needed = 0, uses_anonymous_args = 0
 1925 0000 10B5     		push	{r4, lr}
 1926              		.cfi_def_cfa_offset 8
 1927              		.cfi_offset 4, -8
 1928              		.cfi_offset 14, -4
 392:Core/Src/main.c ****   return id == 0x24;
 1929              		.loc 1 392 3 view .LVU462
 392:Core/Src/main.c ****   return id == 0x24;
 1930              		.loc 1 392 17 is_stmt 0 view .LVU463
 1931 0002 0020     		movs	r0, #0
 1932 0004 FFF7FEFF 		bl	ads131m04_rreg
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 55


 1933              	.LVL143:
 393:Core/Src/main.c **** }
 1934              		.loc 1 393 3 is_stmt 1 view .LVU464
 393:Core/Src/main.c **** }
 1935              		.loc 1 393 13 is_stmt 0 view .LVU465
 1936 0008 2438     		subs	r0, r0, #36
 1937              	.LVL144:
 393:Core/Src/main.c **** }
 1938              		.loc 1 393 13 view .LVU466
 1939 000a 4342     		rsbs	r3, r0, #0
 1940 000c 5841     		adcs	r0, r0, r3
 1941 000e C0B2     		uxtb	r0, r0
 394:Core/Src/main.c **** 
 1942              		.loc 1 394 1 view .LVU467
 1943              		@ sp needed
 1944 0010 10BD     		pop	{r4, pc}
 1945              		.cfi_endproc
 1946              	.LFE63:
 1948              		.section	.text.adc_configure,"ax",%progbits
 1949              		.align	1
 1950              		.global	adc_configure
 1951              		.syntax unified
 1952              		.code	16
 1953              		.thumb_func
 1955              	adc_configure:
 1956              	.LFB64:
 397:Core/Src/main.c ****   uint8_t attempts = 0;
 1957              		.loc 1 397 25 is_stmt 1 view -0
 1958              		.cfi_startproc
 1959              		@ args = 0, pretend = 0, frame = 0
 1960              		@ frame_needed = 0, uses_anonymous_args = 0
 1961 0000 10B5     		push	{r4, lr}
 1962              		.cfi_def_cfa_offset 8
 1963              		.cfi_offset 4, -8
 1964              		.cfi_offset 14, -4
 398:Core/Src/main.c ****   while (ads131m04_reset()) {
 1965              		.loc 1 398 3 view .LVU469
 1966              	.LVL145:
 399:Core/Src/main.c ****     delay_us(10);
 1967              		.loc 1 399 3 view .LVU470
 398:Core/Src/main.c ****   while (ads131m04_reset()) {
 1968              		.loc 1 398 11 is_stmt 0 view .LVU471
 1969 0002 0024     		movs	r4, #0
 1970              	.LVL146:
 1971              	.L83:
 399:Core/Src/main.c ****     delay_us(10);
 1972              		.loc 1 399 10 is_stmt 1 view .LVU472
 1973 0004 FFF7FEFF 		bl	ads131m04_reset
 1974              	.LVL147:
 1975 0008 0028     		cmp	r0, #0
 1976 000a 06D0     		beq	.L87
 400:Core/Src/main.c ****     attempts++;
 1977              		.loc 1 400 5 view .LVU473
 1978 000c 0A20     		movs	r0, #10
 1979 000e FFF7FEFF 		bl	delay_us
 1980              	.LVL148:
 401:Core/Src/main.c ****     if (attempts > 64) break;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 56


 1981              		.loc 1 401 5 view .LVU474
 401:Core/Src/main.c ****     if (attempts > 64) break;
 1982              		.loc 1 401 13 is_stmt 0 view .LVU475
 1983 0012 0134     		adds	r4, r4, #1
 1984              	.LVL149:
 401:Core/Src/main.c ****     if (attempts > 64) break;
 1985              		.loc 1 401 13 view .LVU476
 1986 0014 E4B2     		uxtb	r4, r4
 1987              	.LVL150:
 402:Core/Src/main.c ****   };
 1988              		.loc 1 402 5 is_stmt 1 view .LVU477
 402:Core/Src/main.c ****   };
 1989              		.loc 1 402 8 is_stmt 0 view .LVU478
 1990 0016 402C     		cmp	r4, #64
 1991 0018 F4D9     		bls	.L83
 1992              	.L87:
 404:Core/Src/main.c ****     delay_us(10);
 1993              		.loc 1 404 10 is_stmt 1 view .LVU479
 404:Core/Src/main.c ****     delay_us(10);
 1994              		.loc 1 404 11 is_stmt 0 view .LVU480
 1995 001a FFF7FEFF 		bl	ads131m04_test
 1996              	.LVL151:
 404:Core/Src/main.c ****     delay_us(10);
 1997              		.loc 1 404 10 view .LVU481
 1998 001e 0028     		cmp	r0, #0
 1999 0020 06D1     		bne	.L86
 405:Core/Src/main.c ****     attempts++;
 2000              		.loc 1 405 5 is_stmt 1 view .LVU482
 2001 0022 0A20     		movs	r0, #10
 2002 0024 FFF7FEFF 		bl	delay_us
 2003              	.LVL152:
 406:Core/Src/main.c ****     if (attempts > 128) break;
 2004              		.loc 1 406 5 view .LVU483
 406:Core/Src/main.c ****     if (attempts > 128) break;
 2005              		.loc 1 406 13 is_stmt 0 view .LVU484
 2006 0028 0134     		adds	r4, r4, #1
 2007              	.LVL153:
 406:Core/Src/main.c ****     if (attempts > 128) break;
 2008              		.loc 1 406 13 view .LVU485
 2009 002a E4B2     		uxtb	r4, r4
 2010              	.LVL154:
 407:Core/Src/main.c ****   };
 2011              		.loc 1 407 5 is_stmt 1 view .LVU486
 407:Core/Src/main.c ****   };
 2012              		.loc 1 407 8 is_stmt 0 view .LVU487
 2013 002c 802C     		cmp	r4, #128
 2014 002e F4D9     		bls	.L87
 2015              	.L86:
 408:Core/Src/main.c ****   uint16_t mode = 0x0110; // clear reset bit, disable all CRCs
 2016              		.loc 1 408 4 is_stmt 1 view .LVU488
 409:Core/Src/main.c ****   ads131m04_wreg(0x02, mode);
 2017              		.loc 1 409 3 view .LVU489
 2018              	.LVL155:
 410:Core/Src/main.c **** 
 2019              		.loc 1 410 3 view .LVU490
 2020 0030 8821     		movs	r1, #136
 2021 0032 4900     		lsls	r1, r1, #1
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 57


 2022 0034 0220     		movs	r0, #2
 2023 0036 FFF7FEFF 		bl	ads131m04_wreg
 2024              	.LVL156:
 412:Core/Src/main.c ****   uint16_t clock = 0x0F03 | (osr << 2); // enable all, highest precision
 2025              		.loc 1 412 3 view .LVU491
 413:Core/Src/main.c ****   ads131m04_wreg(0x03, clock);
 2026              		.loc 1 413 3 view .LVU492
 414:Core/Src/main.c **** 
 2027              		.loc 1 414 3 view .LVU493
 2028 003a 0849     		ldr	r1, .L89
 2029 003c 0320     		movs	r0, #3
 2030 003e FFF7FEFF 		bl	ads131m04_wreg
 2031              	.LVL157:
 416:Core/Src/main.c ****   uint16_t gain1 = (gain << 12) | (gain << 8) | (gain << 4) | gain;
 2032              		.loc 1 416 3 view .LVU494
 417:Core/Src/main.c ****   ads131m04_wreg(0x04, gain1);
 2033              		.loc 1 417 3 view .LVU495
 418:Core/Src/main.c **** 
 2034              		.loc 1 418 3 view .LVU496
 2035 0042 0749     		ldr	r1, .L89+4
 2036 0044 0420     		movs	r0, #4
 2037 0046 FFF7FEFF 		bl	ads131m04_wreg
 2038              	.LVL158:
 420:Core/Src/main.c ****   ads131m04_wreg(0x06, cfg);
 2039              		.loc 1 420 3 view .LVU497
 421:Core/Src/main.c ****   
 2040              		.loc 1 421 3 view .LVU498
 2041 004a 0021     		movs	r1, #0
 2042 004c 0620     		movs	r0, #6
 2043 004e FFF7FEFF 		bl	ads131m04_wreg
 2044              	.LVL159:
 423:Core/Src/main.c **** 
 2045              		.loc 1 423 3 view .LVU499
 423:Core/Src/main.c **** 
 2046              		.loc 1 423 18 is_stmt 0 view .LVU500
 2047 0052 044B     		ldr	r3, .L89+8
 2048 0054 0122     		movs	r2, #1
 2049 0056 1A70     		strb	r2, [r3]
 426:Core/Src/main.c **** }
 2050              		.loc 1 426 3 is_stmt 1 view .LVU501
 427:Core/Src/main.c **** 
 2051              		.loc 1 427 1 is_stmt 0 view .LVU502
 2052 0058 0120     		movs	r0, #1
 2053              		@ sp needed
 2054              	.LVL160:
 427:Core/Src/main.c **** 
 2055              		.loc 1 427 1 view .LVU503
 2056 005a 10BD     		pop	{r4, pc}
 2057              	.L90:
 2058              		.align	2
 2059              	.L89:
 2060 005c 130F0000 		.word	3859
 2061 0060 55550000 		.word	21845
 2062 0064 00000000 		.word	adc_configured
 2063              		.cfi_endproc
 2064              	.LFE64:
 2066              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 58


 2067              		.align	1
 2068              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 2069              		.syntax unified
 2070              		.code	16
 2071              		.thumb_func
 2073              	HAL_CAN_RxFifo0MsgPendingCallback:
 2074              	.LVL161:
 2075              	.LFB73:
 797:Core/Src/main.c **** 
 798:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 799:Core/Src/main.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan) {
 2076              		.loc 1 799 65 is_stmt 1 view -0
 2077              		.cfi_startproc
 2078              		@ args = 0, pretend = 0, frame = 0
 2079              		@ frame_needed = 0, uses_anonymous_args = 0
 2080              		.loc 1 799 65 is_stmt 0 view .LVU505
 2081 0000 10B5     		push	{r4, lr}
 2082              		.cfi_def_cfa_offset 8
 2083              		.cfi_offset 4, -8
 2084              		.cfi_offset 14, -4
 800:Core/Src/main.c ****   HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &rxh_nst, rx_nst_data);
 2085              		.loc 1 800 3 is_stmt 1 view .LVU506
 2086 0002 034B     		ldr	r3, .L92
 2087 0004 034A     		ldr	r2, .L92+4
 2088 0006 0021     		movs	r1, #0
 2089 0008 FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 2090              	.LVL162:
 801:Core/Src/main.c ****   can_rx_handler();
 2091              		.loc 1 801 3 view .LVU507
 802:Core/Src/main.c **** }
 2092              		.loc 1 802 1 is_stmt 0 view .LVU508
 2093              		@ sp needed
 2094 000c 10BD     		pop	{r4, pc}
 2095              	.L93:
 2096 000e C046     		.align	2
 2097              	.L92:
 2098 0010 00000000 		.word	rx_nst_data
 2099 0014 00000000 		.word	rxh_nst
 2100              		.cfi_endproc
 2101              	.LFE73:
 2103              		.section	.text.Error_Handler,"ax",%progbits
 2104              		.align	1
 2105              		.global	Error_Handler
 2106              		.syntax unified
 2107              		.code	16
 2108              		.thumb_func
 2110              	Error_Handler:
 2111              	.LFB74:
 803:Core/Src/main.c **** /* USER CODE END 4 */
 804:Core/Src/main.c **** 
 805:Core/Src/main.c **** /**
 806:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 807:Core/Src/main.c ****   * @retval None
 808:Core/Src/main.c ****   */
 809:Core/Src/main.c **** void Error_Handler(void)
 810:Core/Src/main.c **** {
 2112              		.loc 1 810 1 is_stmt 1 view -0
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 59


 2113              		.cfi_startproc
 2114              		@ Volatile: function does not return.
 2115              		@ args = 0, pretend = 0, frame = 0
 2116              		@ frame_needed = 0, uses_anonymous_args = 0
 2117              		@ link register save eliminated.
 811:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 812:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 813:Core/Src/main.c ****   __disable_irq();
 2118              		.loc 1 813 3 view .LVU510
 2119              	.LBB14:
 2120              	.LBI14:
 2121              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 60


  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 61


 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 2122              		.loc 2 140 27 view .LVU511
 2123              	.LBB15:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2124              		.loc 2 142 3 view .LVU512
 2125              		.syntax divided
 2126              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2127 0000 72B6     		cpsid i
 2128              	@ 0 "" 2
 2129              		.thumb
 2130              		.syntax unified
 2131              	.L95:
 2132              	.LBE15:
 2133              	.LBE14:
 814:Core/Src/main.c ****   while (1)
 2134              		.loc 1 814 3 discriminator 1 view .LVU513
 815:Core/Src/main.c ****   {
 816:Core/Src/main.c ****   }
 2135              		.loc 1 816 3 discriminator 1 view .LVU514
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 62


 814:Core/Src/main.c ****   while (1)
 2136              		.loc 1 814 9 discriminator 1 view .LVU515
 2137 0002 FEE7     		b	.L95
 2138              		.cfi_endproc
 2139              	.LFE74:
 2141              		.section	.text.MX_CAN_Init,"ax",%progbits
 2142              		.align	1
 2143              		.syntax unified
 2144              		.code	16
 2145              		.thumb_func
 2147              	MX_CAN_Init:
 2148              	.LFB67:
 543:Core/Src/main.c **** 
 2149              		.loc 1 543 1 view -0
 2150              		.cfi_startproc
 2151              		@ args = 0, pretend = 0, frame = 0
 2152              		@ frame_needed = 0, uses_anonymous_args = 0
 2153 0000 10B5     		push	{r4, lr}
 2154              		.cfi_def_cfa_offset 8
 2155              		.cfi_offset 4, -8
 2156              		.cfi_offset 14, -4
 552:Core/Src/main.c ****   hcan.Init.Prescaler = 3;
 2157              		.loc 1 552 3 view .LVU517
 552:Core/Src/main.c ****   hcan.Init.Prescaler = 3;
 2158              		.loc 1 552 17 is_stmt 0 view .LVU518
 2159 0002 0E48     		ldr	r0, .L99
 2160 0004 0E4B     		ldr	r3, .L99+4
 2161 0006 0360     		str	r3, [r0]
 553:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 2162              		.loc 1 553 3 is_stmt 1 view .LVU519
 553:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 2163              		.loc 1 553 23 is_stmt 0 view .LVU520
 2164 0008 0323     		movs	r3, #3
 2165 000a 4360     		str	r3, [r0, #4]
 554:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 2166              		.loc 1 554 3 is_stmt 1 view .LVU521
 554:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 2167              		.loc 1 554 18 is_stmt 0 view .LVU522
 2168 000c 0023     		movs	r3, #0
 2169 000e 8360     		str	r3, [r0, #8]
 555:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 2170              		.loc 1 555 3 is_stmt 1 view .LVU523
 555:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 2171              		.loc 1 555 27 is_stmt 0 view .LVU524
 2172 0010 8022     		movs	r2, #128
 2173 0012 5204     		lsls	r2, r2, #17
 2174 0014 C260     		str	r2, [r0, #12]
 556:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 2175              		.loc 1 556 3 is_stmt 1 view .LVU525
 556:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 2176              		.loc 1 556 22 is_stmt 0 view .LVU526
 2177 0016 C022     		movs	r2, #192
 2178 0018 1203     		lsls	r2, r2, #12
 2179 001a 0261     		str	r2, [r0, #16]
 557:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 2180              		.loc 1 557 3 is_stmt 1 view .LVU527
 557:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 63


 2181              		.loc 1 557 22 is_stmt 0 view .LVU528
 2182 001c 8022     		movs	r2, #128
 2183 001e 5203     		lsls	r2, r2, #13
 2184 0020 4261     		str	r2, [r0, #20]
 558:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 2185              		.loc 1 558 3 is_stmt 1 view .LVU529
 558:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 2186              		.loc 1 558 31 is_stmt 0 view .LVU530
 2187 0022 0376     		strb	r3, [r0, #24]
 559:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
 2188              		.loc 1 559 3 is_stmt 1 view .LVU531
 559:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
 2189              		.loc 1 559 24 is_stmt 0 view .LVU532
 2190 0024 4376     		strb	r3, [r0, #25]
 560:Core/Src/main.c ****   hcan.Init.AutoRetransmission = DISABLE;
 2191              		.loc 1 560 3 is_stmt 1 view .LVU533
 560:Core/Src/main.c ****   hcan.Init.AutoRetransmission = DISABLE;
 2192              		.loc 1 560 24 is_stmt 0 view .LVU534
 2193 0026 8376     		strb	r3, [r0, #26]
 561:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 2194              		.loc 1 561 3 is_stmt 1 view .LVU535
 561:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 2195              		.loc 1 561 32 is_stmt 0 view .LVU536
 2196 0028 C376     		strb	r3, [r0, #27]
 562:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 2197              		.loc 1 562 3 is_stmt 1 view .LVU537
 562:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 2198              		.loc 1 562 31 is_stmt 0 view .LVU538
 2199 002a 0377     		strb	r3, [r0, #28]
 563:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 2200              		.loc 1 563 3 is_stmt 1 view .LVU539
 563:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 2201              		.loc 1 563 34 is_stmt 0 view .LVU540
 2202 002c 4377     		strb	r3, [r0, #29]
 564:Core/Src/main.c ****   {
 2203              		.loc 1 564 3 is_stmt 1 view .LVU541
 564:Core/Src/main.c ****   {
 2204              		.loc 1 564 7 is_stmt 0 view .LVU542
 2205 002e FFF7FEFF 		bl	HAL_CAN_Init
 2206              	.LVL163:
 564:Core/Src/main.c ****   {
 2207              		.loc 1 564 6 view .LVU543
 2208 0032 0028     		cmp	r0, #0
 2209 0034 00D1     		bne	.L98
 572:Core/Src/main.c **** 
 2210              		.loc 1 572 1 view .LVU544
 2211              		@ sp needed
 2212 0036 10BD     		pop	{r4, pc}
 2213              	.L98:
 566:Core/Src/main.c ****   }
 2214              		.loc 1 566 5 is_stmt 1 view .LVU545
 2215 0038 FFF7FEFF 		bl	Error_Handler
 2216              	.LVL164:
 2217              	.L100:
 2218              		.align	2
 2219              	.L99:
 2220 003c 00000000 		.word	hcan
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 64


 2221 0040 00640040 		.word	1073767424
 2222              		.cfi_endproc
 2223              	.LFE67:
 2225              		.section	.text.MX_SPI1_Init,"ax",%progbits
 2226              		.align	1
 2227              		.syntax unified
 2228              		.code	16
 2229              		.thumb_func
 2231              	MX_SPI1_Init:
 2232              	.LFB68:
 580:Core/Src/main.c **** 
 2233              		.loc 1 580 1 view -0
 2234              		.cfi_startproc
 2235              		@ args = 0, pretend = 0, frame = 0
 2236              		@ frame_needed = 0, uses_anonymous_args = 0
 2237 0000 10B5     		push	{r4, lr}
 2238              		.cfi_def_cfa_offset 8
 2239              		.cfi_offset 4, -8
 2240              		.cfi_offset 14, -4
 590:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 2241              		.loc 1 590 3 view .LVU547
 590:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 2242              		.loc 1 590 18 is_stmt 0 view .LVU548
 2243 0002 1148     		ldr	r0, .L104
 2244 0004 114B     		ldr	r3, .L104+4
 2245 0006 0360     		str	r3, [r0]
 591:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 2246              		.loc 1 591 3 is_stmt 1 view .LVU549
 591:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 2247              		.loc 1 591 19 is_stmt 0 view .LVU550
 2248 0008 8223     		movs	r3, #130
 2249 000a 5B00     		lsls	r3, r3, #1
 2250 000c 4360     		str	r3, [r0, #4]
 592:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 2251              		.loc 1 592 3 is_stmt 1 view .LVU551
 592:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 2252              		.loc 1 592 24 is_stmt 0 view .LVU552
 2253 000e 0023     		movs	r3, #0
 2254 0010 8360     		str	r3, [r0, #8]
 593:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 2255              		.loc 1 593 3 is_stmt 1 view .LVU553
 593:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 2256              		.loc 1 593 23 is_stmt 0 view .LVU554
 2257 0012 E022     		movs	r2, #224
 2258 0014 D200     		lsls	r2, r2, #3
 2259 0016 C260     		str	r2, [r0, #12]
 594:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 2260              		.loc 1 594 3 is_stmt 1 view .LVU555
 594:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 2261              		.loc 1 594 26 is_stmt 0 view .LVU556
 2262 0018 0361     		str	r3, [r0, #16]
 595:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 2263              		.loc 1 595 3 is_stmt 1 view .LVU557
 595:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 2264              		.loc 1 595 23 is_stmt 0 view .LVU558
 2265 001a 0122     		movs	r2, #1
 2266 001c 4261     		str	r2, [r0, #20]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 65


 596:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 2267              		.loc 1 596 3 is_stmt 1 view .LVU559
 596:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 2268              		.loc 1 596 18 is_stmt 0 view .LVU560
 2269 001e 8022     		movs	r2, #128
 2270 0020 9200     		lsls	r2, r2, #2
 2271 0022 8261     		str	r2, [r0, #24]
 597:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2272              		.loc 1 597 3 is_stmt 1 view .LVU561
 597:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2273              		.loc 1 597 32 is_stmt 0 view .LVU562
 2274 0024 E93A     		subs	r2, r2, #233
 2275 0026 FF3A     		subs	r2, r2, #255
 2276 0028 C261     		str	r2, [r0, #28]
 598:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 2277              		.loc 1 598 3 is_stmt 1 view .LVU563
 598:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 2278              		.loc 1 598 23 is_stmt 0 view .LVU564
 2279 002a 0362     		str	r3, [r0, #32]
 599:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2280              		.loc 1 599 3 is_stmt 1 view .LVU565
 599:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2281              		.loc 1 599 21 is_stmt 0 view .LVU566
 2282 002c 4362     		str	r3, [r0, #36]
 600:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 2283              		.loc 1 600 3 is_stmt 1 view .LVU567
 600:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 2284              		.loc 1 600 29 is_stmt 0 view .LVU568
 2285 002e 8362     		str	r3, [r0, #40]
 601:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 2286              		.loc 1 601 3 is_stmt 1 view .LVU569
 601:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 2287              		.loc 1 601 28 is_stmt 0 view .LVU570
 2288 0030 113A     		subs	r2, r2, #17
 2289 0032 C262     		str	r2, [r0, #44]
 602:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 2290              		.loc 1 602 3 is_stmt 1 view .LVU571
 602:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 2291              		.loc 1 602 24 is_stmt 0 view .LVU572
 2292 0034 0363     		str	r3, [r0, #48]
 603:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 2293              		.loc 1 603 3 is_stmt 1 view .LVU573
 603:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 2294              		.loc 1 603 23 is_stmt 0 view .LVU574
 2295 0036 4363     		str	r3, [r0, #52]
 604:Core/Src/main.c ****   {
 2296              		.loc 1 604 3 is_stmt 1 view .LVU575
 604:Core/Src/main.c ****   {
 2297              		.loc 1 604 7 is_stmt 0 view .LVU576
 2298 0038 FFF7FEFF 		bl	HAL_SPI_Init
 2299              	.LVL165:
 604:Core/Src/main.c ****   {
 2300              		.loc 1 604 6 view .LVU577
 2301 003c 0028     		cmp	r0, #0
 2302 003e 00D1     		bne	.L103
 612:Core/Src/main.c **** 
 2303              		.loc 1 612 1 view .LVU578
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 66


 2304              		@ sp needed
 2305 0040 10BD     		pop	{r4, pc}
 2306              	.L103:
 606:Core/Src/main.c ****   }
 2307              		.loc 1 606 5 is_stmt 1 view .LVU579
 2308 0042 FFF7FEFF 		bl	Error_Handler
 2309              	.LVL166:
 2310              	.L105:
 2311 0046 C046     		.align	2
 2312              	.L104:
 2313 0048 00000000 		.word	hspi1
 2314 004c 00300140 		.word	1073819648
 2315              		.cfi_endproc
 2316              	.LFE68:
 2318              		.section	.text.MX_TIM3_Init,"ax",%progbits
 2319              		.align	1
 2320              		.syntax unified
 2321              		.code	16
 2322              		.thumb_func
 2324              	MX_TIM3_Init:
 2325              	.LFB69:
 620:Core/Src/main.c **** 
 2326              		.loc 1 620 1 view -0
 2327              		.cfi_startproc
 2328              		@ args = 0, pretend = 0, frame = 56
 2329              		@ frame_needed = 0, uses_anonymous_args = 0
 2330 0000 00B5     		push	{lr}
 2331              		.cfi_def_cfa_offset 4
 2332              		.cfi_offset 14, -4
 2333 0002 8FB0     		sub	sp, sp, #60
 2334              		.cfi_def_cfa_offset 64
 626:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2335              		.loc 1 626 3 view .LVU581
 626:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2336              		.loc 1 626 26 is_stmt 0 view .LVU582
 2337 0004 1022     		movs	r2, #16
 2338 0006 0021     		movs	r1, #0
 2339 0008 0AA8     		add	r0, sp, #40
 2340 000a FFF7FEFF 		bl	memset
 2341              	.LVL167:
 627:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2342              		.loc 1 627 3 is_stmt 1 view .LVU583
 627:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2343              		.loc 1 627 27 is_stmt 0 view .LVU584
 2344 000e 0822     		movs	r2, #8
 2345 0010 0021     		movs	r1, #0
 2346 0012 08A8     		add	r0, sp, #32
 2347 0014 FFF7FEFF 		bl	memset
 2348              	.LVL168:
 628:Core/Src/main.c **** 
 2349              		.loc 1 628 3 is_stmt 1 view .LVU585
 628:Core/Src/main.c **** 
 2350              		.loc 1 628 22 is_stmt 0 view .LVU586
 2351 0018 1C22     		movs	r2, #28
 2352 001a 0021     		movs	r1, #0
 2353 001c 01A8     		add	r0, sp, #4
 2354 001e FFF7FEFF 		bl	memset
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 67


 2355              	.LVL169:
 633:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 2356              		.loc 1 633 3 is_stmt 1 view .LVU587
 633:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 2357              		.loc 1 633 18 is_stmt 0 view .LVU588
 2358 0022 2148     		ldr	r0, .L117
 2359 0024 214B     		ldr	r3, .L117+4
 2360 0026 0360     		str	r3, [r0]
 634:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2361              		.loc 1 634 3 is_stmt 1 view .LVU589
 634:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2362              		.loc 1 634 24 is_stmt 0 view .LVU590
 2363 0028 0023     		movs	r3, #0
 2364 002a 4360     		str	r3, [r0, #4]
 635:Core/Src/main.c ****   htim3.Init.Period = 7;
 2365              		.loc 1 635 3 is_stmt 1 view .LVU591
 635:Core/Src/main.c ****   htim3.Init.Period = 7;
 2366              		.loc 1 635 26 is_stmt 0 view .LVU592
 2367 002c 8360     		str	r3, [r0, #8]
 636:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2368              		.loc 1 636 3 is_stmt 1 view .LVU593
 636:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2369              		.loc 1 636 21 is_stmt 0 view .LVU594
 2370 002e 0722     		movs	r2, #7
 2371 0030 C260     		str	r2, [r0, #12]
 637:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2372              		.loc 1 637 3 is_stmt 1 view .LVU595
 637:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2373              		.loc 1 637 28 is_stmt 0 view .LVU596
 2374 0032 0361     		str	r3, [r0, #16]
 638:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 2375              		.loc 1 638 3 is_stmt 1 view .LVU597
 638:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 2376              		.loc 1 638 32 is_stmt 0 view .LVU598
 2377 0034 8361     		str	r3, [r0, #24]
 639:Core/Src/main.c ****   {
 2378              		.loc 1 639 3 is_stmt 1 view .LVU599
 639:Core/Src/main.c ****   {
 2379              		.loc 1 639 7 is_stmt 0 view .LVU600
 2380 0036 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2381              	.LVL170:
 639:Core/Src/main.c ****   {
 2382              		.loc 1 639 6 view .LVU601
 2383 003a 0028     		cmp	r0, #0
 2384 003c 29D1     		bne	.L112
 643:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 2385              		.loc 1 643 3 is_stmt 1 view .LVU602
 643:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 2386              		.loc 1 643 34 is_stmt 0 view .LVU603
 2387 003e 8023     		movs	r3, #128
 2388 0040 5B01     		lsls	r3, r3, #5
 2389 0042 0A93     		str	r3, [sp, #40]
 644:Core/Src/main.c ****   {
 2390              		.loc 1 644 3 is_stmt 1 view .LVU604
 644:Core/Src/main.c ****   {
 2391              		.loc 1 644 7 is_stmt 0 view .LVU605
 2392 0044 1848     		ldr	r0, .L117
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 68


 2393 0046 0AA9     		add	r1, sp, #40
 2394 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2395              	.LVL171:
 644:Core/Src/main.c ****   {
 2396              		.loc 1 644 6 view .LVU606
 2397 004c 0028     		cmp	r0, #0
 2398 004e 22D1     		bne	.L113
 648:Core/Src/main.c ****   {
 2399              		.loc 1 648 3 is_stmt 1 view .LVU607
 648:Core/Src/main.c ****   {
 2400              		.loc 1 648 7 is_stmt 0 view .LVU608
 2401 0050 1548     		ldr	r0, .L117
 2402 0052 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2403              	.LVL172:
 648:Core/Src/main.c ****   {
 2404              		.loc 1 648 6 view .LVU609
 2405 0056 0028     		cmp	r0, #0
 2406 0058 1FD1     		bne	.L114
 652:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2407              		.loc 1 652 3 is_stmt 1 view .LVU610
 652:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2408              		.loc 1 652 37 is_stmt 0 view .LVU611
 2409 005a 0023     		movs	r3, #0
 2410 005c 0893     		str	r3, [sp, #32]
 653:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2411              		.loc 1 653 3 is_stmt 1 view .LVU612
 653:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2412              		.loc 1 653 33 is_stmt 0 view .LVU613
 2413 005e 0993     		str	r3, [sp, #36]
 654:Core/Src/main.c ****   {
 2414              		.loc 1 654 3 is_stmt 1 view .LVU614
 654:Core/Src/main.c ****   {
 2415              		.loc 1 654 7 is_stmt 0 view .LVU615
 2416 0060 1148     		ldr	r0, .L117
 2417 0062 08A9     		add	r1, sp, #32
 2418 0064 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2419              	.LVL173:
 654:Core/Src/main.c ****   {
 2420              		.loc 1 654 6 view .LVU616
 2421 0068 0028     		cmp	r0, #0
 2422 006a 18D1     		bne	.L115
 658:Core/Src/main.c ****   sConfigOC.Pulse = 4;
 2423              		.loc 1 658 3 is_stmt 1 view .LVU617
 658:Core/Src/main.c ****   sConfigOC.Pulse = 4;
 2424              		.loc 1 658 20 is_stmt 0 view .LVU618
 2425 006c 6023     		movs	r3, #96
 2426 006e 0193     		str	r3, [sp, #4]
 659:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2427              		.loc 1 659 3 is_stmt 1 view .LVU619
 659:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2428              		.loc 1 659 19 is_stmt 0 view .LVU620
 2429 0070 5C3B     		subs	r3, r3, #92
 2430 0072 0293     		str	r3, [sp, #8]
 660:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 2431              		.loc 1 660 3 is_stmt 1 view .LVU621
 660:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 2432              		.loc 1 660 24 is_stmt 0 view .LVU622
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 69


 2433 0074 0022     		movs	r2, #0
 2434 0076 0392     		str	r2, [sp, #12]
 661:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 2435              		.loc 1 661 3 is_stmt 1 view .LVU623
 661:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 2436              		.loc 1 661 24 is_stmt 0 view .LVU624
 2437 0078 0593     		str	r3, [sp, #20]
 662:Core/Src/main.c ****   {
 2438              		.loc 1 662 3 is_stmt 1 view .LVU625
 662:Core/Src/main.c ****   {
 2439              		.loc 1 662 7 is_stmt 0 view .LVU626
 2440 007a 0B48     		ldr	r0, .L117
 2441 007c 0C32     		adds	r2, r2, #12
 2442 007e 01A9     		add	r1, sp, #4
 2443 0080 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2444              	.LVL174:
 662:Core/Src/main.c ****   {
 2445              		.loc 1 662 6 view .LVU627
 2446 0084 0028     		cmp	r0, #0
 2447 0086 0CD1     		bne	.L116
 669:Core/Src/main.c **** 
 2448              		.loc 1 669 3 is_stmt 1 view .LVU628
 2449 0088 0748     		ldr	r0, .L117
 2450 008a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2451              	.LVL175:
 671:Core/Src/main.c **** 
 2452              		.loc 1 671 1 is_stmt 0 view .LVU629
 2453 008e 0FB0     		add	sp, sp, #60
 2454              		@ sp needed
 2455 0090 00BD     		pop	{pc}
 2456              	.L112:
 641:Core/Src/main.c ****   }
 2457              		.loc 1 641 5 is_stmt 1 view .LVU630
 2458 0092 FFF7FEFF 		bl	Error_Handler
 2459              	.LVL176:
 2460              	.L113:
 646:Core/Src/main.c ****   }
 2461              		.loc 1 646 5 view .LVU631
 2462 0096 FFF7FEFF 		bl	Error_Handler
 2463              	.LVL177:
 2464              	.L114:
 650:Core/Src/main.c ****   }
 2465              		.loc 1 650 5 view .LVU632
 2466 009a FFF7FEFF 		bl	Error_Handler
 2467              	.LVL178:
 2468              	.L115:
 656:Core/Src/main.c ****   }
 2469              		.loc 1 656 5 view .LVU633
 2470 009e FFF7FEFF 		bl	Error_Handler
 2471              	.LVL179:
 2472              	.L116:
 664:Core/Src/main.c ****   }
 2473              		.loc 1 664 5 view .LVU634
 2474 00a2 FFF7FEFF 		bl	Error_Handler
 2475              	.LVL180:
 2476              	.L118:
 2477 00a6 C046     		.align	2
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 70


 2478              	.L117:
 2479 00a8 00000000 		.word	htim3
 2480 00ac 00040040 		.word	1073742848
 2481              		.cfi_endproc
 2482              	.LFE69:
 2484              		.section	.text.MX_TIM16_Init,"ax",%progbits
 2485              		.align	1
 2486              		.syntax unified
 2487              		.code	16
 2488              		.thumb_func
 2490              	MX_TIM16_Init:
 2491              	.LFB71:
 710:Core/Src/main.c **** 
 2492              		.loc 1 710 1 view -0
 2493              		.cfi_startproc
 2494              		@ args = 0, pretend = 0, frame = 0
 2495              		@ frame_needed = 0, uses_anonymous_args = 0
 2496 0000 10B5     		push	{r4, lr}
 2497              		.cfi_def_cfa_offset 8
 2498              		.cfi_offset 4, -8
 2499              		.cfi_offset 14, -4
 719:Core/Src/main.c ****   htim16.Init.Prescaler = 47;
 2500              		.loc 1 719 3 view .LVU636
 719:Core/Src/main.c ****   htim16.Init.Prescaler = 47;
 2501              		.loc 1 719 19 is_stmt 0 view .LVU637
 2502 0002 0948     		ldr	r0, .L122
 2503 0004 094B     		ldr	r3, .L122+4
 2504 0006 0360     		str	r3, [r0]
 720:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 2505              		.loc 1 720 3 is_stmt 1 view .LVU638
 720:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 2506              		.loc 1 720 25 is_stmt 0 view .LVU639
 2507 0008 2F23     		movs	r3, #47
 2508 000a 4360     		str	r3, [r0, #4]
 721:Core/Src/main.c ****   htim16.Init.Period = 65535;
 2509              		.loc 1 721 3 is_stmt 1 view .LVU640
 721:Core/Src/main.c ****   htim16.Init.Period = 65535;
 2510              		.loc 1 721 27 is_stmt 0 view .LVU641
 2511 000c 0023     		movs	r3, #0
 2512 000e 8360     		str	r3, [r0, #8]
 722:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2513              		.loc 1 722 3 is_stmt 1 view .LVU642
 722:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2514              		.loc 1 722 22 is_stmt 0 view .LVU643
 2515 0010 074A     		ldr	r2, .L122+8
 2516 0012 C260     		str	r2, [r0, #12]
 723:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 2517              		.loc 1 723 3 is_stmt 1 view .LVU644
 723:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 2518              		.loc 1 723 29 is_stmt 0 view .LVU645
 2519 0014 0361     		str	r3, [r0, #16]
 724:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2520              		.loc 1 724 3 is_stmt 1 view .LVU646
 724:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2521              		.loc 1 724 33 is_stmt 0 view .LVU647
 2522 0016 4361     		str	r3, [r0, #20]
 725:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 71


 2523              		.loc 1 725 3 is_stmt 1 view .LVU648
 725:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 2524              		.loc 1 725 33 is_stmt 0 view .LVU649
 2525 0018 8361     		str	r3, [r0, #24]
 726:Core/Src/main.c ****   {
 2526              		.loc 1 726 3 is_stmt 1 view .LVU650
 726:Core/Src/main.c ****   {
 2527              		.loc 1 726 7 is_stmt 0 view .LVU651
 2528 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 2529              	.LVL181:
 726:Core/Src/main.c ****   {
 2530              		.loc 1 726 6 view .LVU652
 2531 001e 0028     		cmp	r0, #0
 2532 0020 00D1     		bne	.L121
 734:Core/Src/main.c **** 
 2533              		.loc 1 734 1 view .LVU653
 2534              		@ sp needed
 2535 0022 10BD     		pop	{r4, pc}
 2536              	.L121:
 728:Core/Src/main.c ****   }
 2537              		.loc 1 728 5 is_stmt 1 view .LVU654
 2538 0024 FFF7FEFF 		bl	Error_Handler
 2539              	.LVL182:
 2540              	.L123:
 2541              		.align	2
 2542              	.L122:
 2543 0028 00000000 		.word	htim16
 2544 002c 00440140 		.word	1073824768
 2545 0030 FFFF0000 		.word	65535
 2546              		.cfi_endproc
 2547              	.LFE71:
 2549              		.section	.text.MX_TIM14_Init,"ax",%progbits
 2550              		.align	1
 2551              		.syntax unified
 2552              		.code	16
 2553              		.thumb_func
 2555              	MX_TIM14_Init:
 2556              	.LFB70:
 679:Core/Src/main.c **** 
 2557              		.loc 1 679 1 view -0
 2558              		.cfi_startproc
 2559              		@ args = 0, pretend = 0, frame = 0
 2560              		@ frame_needed = 0, uses_anonymous_args = 0
 2561 0000 10B5     		push	{r4, lr}
 2562              		.cfi_def_cfa_offset 8
 2563              		.cfi_offset 4, -8
 2564              		.cfi_offset 14, -4
 688:Core/Src/main.c ****   htim14.Init.Prescaler = 47;
 2565              		.loc 1 688 3 view .LVU656
 688:Core/Src/main.c ****   htim14.Init.Prescaler = 47;
 2566              		.loc 1 688 19 is_stmt 0 view .LVU657
 2567 0002 0948     		ldr	r0, .L127
 2568 0004 094B     		ldr	r3, .L127+4
 2569 0006 0360     		str	r3, [r0]
 689:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 2570              		.loc 1 689 3 is_stmt 1 view .LVU658
 689:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 72


 2571              		.loc 1 689 25 is_stmt 0 view .LVU659
 2572 0008 2F23     		movs	r3, #47
 2573 000a 4360     		str	r3, [r0, #4]
 690:Core/Src/main.c ****   htim14.Init.Period = 1000;
 2574              		.loc 1 690 3 is_stmt 1 view .LVU660
 690:Core/Src/main.c ****   htim14.Init.Period = 1000;
 2575              		.loc 1 690 27 is_stmt 0 view .LVU661
 2576 000c 0023     		movs	r3, #0
 2577 000e 8360     		str	r3, [r0, #8]
 691:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2578              		.loc 1 691 3 is_stmt 1 view .LVU662
 691:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2579              		.loc 1 691 22 is_stmt 0 view .LVU663
 2580 0010 FA22     		movs	r2, #250
 2581 0012 9200     		lsls	r2, r2, #2
 2582 0014 C260     		str	r2, [r0, #12]
 692:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2583              		.loc 1 692 3 is_stmt 1 view .LVU664
 692:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2584              		.loc 1 692 29 is_stmt 0 view .LVU665
 2585 0016 0361     		str	r3, [r0, #16]
 693:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 2586              		.loc 1 693 3 is_stmt 1 view .LVU666
 693:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 2587              		.loc 1 693 33 is_stmt 0 view .LVU667
 2588 0018 8361     		str	r3, [r0, #24]
 694:Core/Src/main.c ****   {
 2589              		.loc 1 694 3 is_stmt 1 view .LVU668
 694:Core/Src/main.c ****   {
 2590              		.loc 1 694 7 is_stmt 0 view .LVU669
 2591 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 2592              	.LVL183:
 694:Core/Src/main.c ****   {
 2593              		.loc 1 694 6 view .LVU670
 2594 001e 0028     		cmp	r0, #0
 2595 0020 00D1     		bne	.L126
 702:Core/Src/main.c **** 
 2596              		.loc 1 702 1 view .LVU671
 2597              		@ sp needed
 2598 0022 10BD     		pop	{r4, pc}
 2599              	.L126:
 696:Core/Src/main.c ****   }
 2600              		.loc 1 696 5 is_stmt 1 view .LVU672
 2601 0024 FFF7FEFF 		bl	Error_Handler
 2602              	.LVL184:
 2603              	.L128:
 2604              		.align	2
 2605              	.L127:
 2606 0028 00000000 		.word	htim14
 2607 002c 00200040 		.word	1073750016
 2608              		.cfi_endproc
 2609              	.LFE70:
 2611              		.section	.text.SystemClock_Config,"ax",%progbits
 2612              		.align	1
 2613              		.global	SystemClock_Config
 2614              		.syntax unified
 2615              		.code	16
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 73


 2616              		.thumb_func
 2618              	SystemClock_Config:
 2619              	.LFB66:
 504:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2620              		.loc 1 504 1 view -0
 2621              		.cfi_startproc
 2622              		@ args = 0, pretend = 0, frame = 72
 2623              		@ frame_needed = 0, uses_anonymous_args = 0
 2624 0000 00B5     		push	{lr}
 2625              		.cfi_def_cfa_offset 4
 2626              		.cfi_offset 14, -4
 2627 0002 93B0     		sub	sp, sp, #76
 2628              		.cfi_def_cfa_offset 80
 505:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2629              		.loc 1 505 3 view .LVU674
 505:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2630              		.loc 1 505 22 is_stmt 0 view .LVU675
 2631 0004 3422     		movs	r2, #52
 2632 0006 0021     		movs	r1, #0
 2633 0008 05A8     		add	r0, sp, #20
 2634 000a FFF7FEFF 		bl	memset
 2635              	.LVL185:
 506:Core/Src/main.c **** 
 2636              		.loc 1 506 3 is_stmt 1 view .LVU676
 506:Core/Src/main.c **** 
 2637              		.loc 1 506 22 is_stmt 0 view .LVU677
 2638 000e 1022     		movs	r2, #16
 2639 0010 0021     		movs	r1, #0
 2640 0012 01A8     		add	r0, sp, #4
 2641 0014 FFF7FEFF 		bl	memset
 2642              	.LVL186:
 511:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2643              		.loc 1 511 3 is_stmt 1 view .LVU678
 511:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2644              		.loc 1 511 36 is_stmt 0 view .LVU679
 2645 0018 0223     		movs	r3, #2
 2646 001a 0593     		str	r3, [sp, #20]
 512:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2647              		.loc 1 512 3 is_stmt 1 view .LVU680
 512:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2648              		.loc 1 512 30 is_stmt 0 view .LVU681
 2649 001c 0122     		movs	r2, #1
 2650 001e 0892     		str	r2, [sp, #32]
 513:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2651              		.loc 1 513 3 is_stmt 1 view .LVU682
 513:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2652              		.loc 1 513 41 is_stmt 0 view .LVU683
 2653 0020 0F32     		adds	r2, r2, #15
 2654 0022 0992     		str	r2, [sp, #36]
 514:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 2655              		.loc 1 514 3 is_stmt 1 view .LVU684
 514:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 2656              		.loc 1 514 34 is_stmt 0 view .LVU685
 2657 0024 0E93     		str	r3, [sp, #56]
 515:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 2658              		.loc 1 515 3 is_stmt 1 view .LVU686
 515:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 74


 2659              		.loc 1 515 35 is_stmt 0 view .LVU687
 2660 0026 8023     		movs	r3, #128
 2661 0028 1B02     		lsls	r3, r3, #8
 2662 002a 0F93     		str	r3, [sp, #60]
 516:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 2663              		.loc 1 516 3 is_stmt 1 view .LVU688
 516:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 2664              		.loc 1 516 32 is_stmt 0 view .LVU689
 2665 002c 8023     		movs	r3, #128
 2666 002e 5B03     		lsls	r3, r3, #13
 2667 0030 1093     		str	r3, [sp, #64]
 517:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2668              		.loc 1 517 3 is_stmt 1 view .LVU690
 518:Core/Src/main.c ****   {
 2669              		.loc 1 518 3 view .LVU691
 518:Core/Src/main.c ****   {
 2670              		.loc 1 518 7 is_stmt 0 view .LVU692
 2671 0032 05A8     		add	r0, sp, #20
 2672 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 2673              	.LVL187:
 518:Core/Src/main.c ****   {
 2674              		.loc 1 518 6 view .LVU693
 2675 0038 0028     		cmp	r0, #0
 2676 003a 0ED1     		bne	.L132
 525:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 2677              		.loc 1 525 3 is_stmt 1 view .LVU694
 525:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 2678              		.loc 1 525 31 is_stmt 0 view .LVU695
 2679 003c 0723     		movs	r3, #7
 2680 003e 0193     		str	r3, [sp, #4]
 527:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2681              		.loc 1 527 3 is_stmt 1 view .LVU696
 527:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2682              		.loc 1 527 34 is_stmt 0 view .LVU697
 2683 0040 053B     		subs	r3, r3, #5
 2684 0042 0293     		str	r3, [sp, #8]
 528:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2685              		.loc 1 528 3 is_stmt 1 view .LVU698
 528:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2686              		.loc 1 528 35 is_stmt 0 view .LVU699
 2687 0044 0023     		movs	r3, #0
 2688 0046 0393     		str	r3, [sp, #12]
 529:Core/Src/main.c **** 
 2689              		.loc 1 529 3 is_stmt 1 view .LVU700
 529:Core/Src/main.c **** 
 2690              		.loc 1 529 36 is_stmt 0 view .LVU701
 2691 0048 0493     		str	r3, [sp, #16]
 531:Core/Src/main.c ****   {
 2692              		.loc 1 531 3 is_stmt 1 view .LVU702
 531:Core/Src/main.c ****   {
 2693              		.loc 1 531 7 is_stmt 0 view .LVU703
 2694 004a 0121     		movs	r1, #1
 2695 004c 01A8     		add	r0, sp, #4
 2696 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2697              	.LVL188:
 531:Core/Src/main.c ****   {
 2698              		.loc 1 531 6 view .LVU704
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 75


 2699 0052 0028     		cmp	r0, #0
 2700 0054 03D1     		bne	.L133
 535:Core/Src/main.c **** 
 2701              		.loc 1 535 1 view .LVU705
 2702 0056 13B0     		add	sp, sp, #76
 2703              		@ sp needed
 2704 0058 00BD     		pop	{pc}
 2705              	.L132:
 520:Core/Src/main.c ****   }
 2706              		.loc 1 520 5 is_stmt 1 view .LVU706
 2707 005a FFF7FEFF 		bl	Error_Handler
 2708              	.LVL189:
 2709              	.L133:
 533:Core/Src/main.c ****   }
 2710              		.loc 1 533 5 view .LVU707
 2711 005e FFF7FEFF 		bl	Error_Handler
 2712              	.LVL190:
 2713              		.cfi_endproc
 2714              	.LFE66:
 2716              		.section	.text.main,"ax",%progbits
 2717              		.align	1
 2718              		.global	main
 2719              		.syntax unified
 2720              		.code	16
 2721              		.thumb_func
 2723              	main:
 2724              	.LFB65:
 436:Core/Src/main.c **** 
 2725              		.loc 1 436 1 view -0
 2726              		.cfi_startproc
 2727              		@ Volatile: function does not return.
 2728              		@ args = 0, pretend = 0, frame = 0
 2729              		@ frame_needed = 0, uses_anonymous_args = 0
 2730 0000 10B5     		push	{r4, lr}
 2731              		.cfi_def_cfa_offset 8
 2732              		.cfi_offset 4, -8
 2733              		.cfi_offset 14, -4
 440:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(TIM14_IRQn);
 2734              		.loc 1 440 3 view .LVU709
 2735 0002 0620     		movs	r0, #6
 2736 0004 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 2737              	.LVL191:
 441:Core/Src/main.c **** 
 2738              		.loc 1 441 3 view .LVU710
 2739 0008 1320     		movs	r0, #19
 2740 000a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 2741              	.LVL192:
 448:Core/Src/main.c **** 
 2742              		.loc 1 448 3 view .LVU711
 2743 000e FFF7FEFF 		bl	HAL_Init
 2744              	.LVL193:
 455:Core/Src/main.c **** 
 2745              		.loc 1 455 3 view .LVU712
 2746 0012 FFF7FEFF 		bl	SystemClock_Config
 2747              	.LVL194:
 462:Core/Src/main.c ****   MX_CAN_Init();
 2748              		.loc 1 462 3 view .LVU713
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 76


 2749 0016 FFF7FEFF 		bl	MX_GPIO_Init
 2750              	.LVL195:
 463:Core/Src/main.c ****   MX_SPI1_Init();
 2751              		.loc 1 463 3 view .LVU714
 2752 001a FFF7FEFF 		bl	MX_CAN_Init
 2753              	.LVL196:
 464:Core/Src/main.c ****   MX_TIM3_Init();
 2754              		.loc 1 464 3 view .LVU715
 2755 001e FFF7FEFF 		bl	MX_SPI1_Init
 2756              	.LVL197:
 465:Core/Src/main.c ****   MX_TIM16_Init();
 2757              		.loc 1 465 3 view .LVU716
 2758 0022 FFF7FEFF 		bl	MX_TIM3_Init
 2759              	.LVL198:
 466:Core/Src/main.c ****   MX_TIM14_Init();
 2760              		.loc 1 466 3 view .LVU717
 2761 0026 FFF7FEFF 		bl	MX_TIM16_Init
 2762              	.LVL199:
 467:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 2763              		.loc 1 467 3 view .LVU718
 2764 002a FFF7FEFF 		bl	MX_TIM14_Init
 2765              	.LVL200:
 469:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim16);
 2766              		.loc 1 469 3 view .LVU719
 2767 002e 1648     		ldr	r0, .L136
 2768 0030 0C21     		movs	r1, #12
 2769 0032 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 2770              	.LVL201:
 470:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 2771              		.loc 1 470 3 view .LVU720
 2772 0036 1548     		ldr	r0, .L136+4
 2773 0038 FFF7FEFF 		bl	HAL_TIM_Base_Start
 2774              	.LVL202:
 471:Core/Src/main.c ****   
 2775              		.loc 1 471 3 view .LVU721
 2776 003c 9020     		movs	r0, #144
 2777 003e 0122     		movs	r2, #1
 2778 0040 1021     		movs	r1, #16
 2779 0042 C005     		lsls	r0, r0, #23
 2780 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2781              	.LVL203:
 473:Core/Src/main.c ****   can_setup();
 2782              		.loc 1 473 3 view .LVU722
 2783 0048 FFF7FEFF 		bl	addr_setup
 2784              	.LVL204:
 474:Core/Src/main.c ****   adc_configure();
 2785              		.loc 1 474 3 view .LVU723
 2786 004c FFF7FEFF 		bl	can_setup
 2787              	.LVL205:
 475:Core/Src/main.c **** 
 2788              		.loc 1 475 3 view .LVU724
 2789 0050 FFF7FEFF 		bl	adc_configure
 2790              	.LVL206:
 477:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan, CAN_IT_RX_FIFO0_MSG_PENDING);
 2791              		.loc 1 477 3 view .LVU725
 2792 0054 0E4C     		ldr	r4, .L136+8
 2793 0056 2000     		movs	r0, r4
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 77


 2794 0058 FFF7FEFF 		bl	HAL_CAN_Start
 2795              	.LVL207:
 478:Core/Src/main.c **** 
 2796              		.loc 1 478 3 view .LVU726
 2797 005c 0221     		movs	r1, #2
 2798 005e 2000     		movs	r0, r4
 2799 0060 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 2800              	.LVL208:
 480:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim14);
 2801              		.loc 1 480 3 view .LVU727
 2802 0064 0620     		movs	r0, #6
 2803 0066 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 2804              	.LVL209:
 481:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(TIM14_IRQn);
 2805              		.loc 1 481 3 view .LVU728
 2806 006a 0A48     		ldr	r0, .L136+12
 2807 006c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 2808              	.LVL210:
 482:Core/Src/main.c **** 
 2809              		.loc 1 482 3 view .LVU729
 2810 0070 1320     		movs	r0, #19
 2811 0072 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 2812              	.LVL211:
 2813              	.L135:
 488:Core/Src/main.c ****   {
 2814              		.loc 1 488 3 discriminator 1 view .LVU730
 490:Core/Src/main.c ****     HAL_Delay(500);
 2815              		.loc 1 490 5 discriminator 1 view .LVU731
 2816 0076 0121     		movs	r1, #1
 2817 0078 0748     		ldr	r0, .L136+16
 2818 007a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 2819              	.LVL212:
 491:Core/Src/main.c ****     /* USER CODE END WHILE */
 2820              		.loc 1 491 5 discriminator 1 view .LVU732
 2821 007e FA20     		movs	r0, #250
 2822 0080 4000     		lsls	r0, r0, #1
 2823 0082 FFF7FEFF 		bl	HAL_Delay
 2824              	.LVL213:
 488:Core/Src/main.c ****   {
 2825              		.loc 1 488 9 discriminator 1 view .LVU733
 2826 0086 F6E7     		b	.L135
 2827              	.L137:
 2828              		.align	2
 2829              	.L136:
 2830 0088 00000000 		.word	htim3
 2831 008c 00000000 		.word	htim16
 2832 0090 00000000 		.word	hcan
 2833 0094 00000000 		.word	htim14
 2834 0098 00140048 		.word	1207964672
 2835              		.cfi_endproc
 2836              	.LFE65:
 2838              		.global	tx_nst_data
 2839              		.section	.bss.tx_nst_data,"aw",%nobits
 2840              		.align	2
 2843              	tx_nst_data:
 2844 0000 00000000 		.space	8
 2844      00000000 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 78


 2845              		.global	rx_nst_data
 2846              		.section	.bss.rx_nst_data,"aw",%nobits
 2847              		.align	2
 2850              	rx_nst_data:
 2851 0000 00000000 		.space	8
 2851      00000000 
 2852              		.global	can_std_channel
 2853              		.section	.bss.can_std_channel,"aw",%nobits
 2856              	can_std_channel:
 2857 0000 00       		.space	1
 2858              		.global	txMailbox
 2859              		.section	.bss.txMailbox,"aw",%nobits
 2860              		.align	2
 2863              	txMailbox:
 2864 0000 00000000 		.space	4
 2865              		.global	nst_state
 2866              		.section	.data.nst_state,"aw"
 2869              	nst_state:
 2870 0000 F0       		.byte	-16
 2871              		.global	nst_addr_base
 2872              		.section	.bss.nst_addr_base,"aw",%nobits
 2873              		.align	2
 2876              	nst_addr_base:
 2877 0000 00000000 		.space	4
 2878              		.global	std_state
 2879              		.section	.data.std_state,"aw"
 2882              	std_state:
 2883 0000 F0       		.byte	-16
 2884              		.global	std_addr_base
 2885              		.section	.data.std_addr_base,"aw"
 2886              		.align	2
 2889              	std_addr_base:
 2890 0000 00010000 		.word	256
 2891              		.global	addr
 2892              		.section	.bss.addr,"aw",%nobits
 2895              	addr:
 2896 0000 00       		.space	1
 2897              		.global	adc_configured
 2898              		.section	.bss.adc_configured,"aw",%nobits
 2901              	adc_configured:
 2902 0000 00       		.space	1
 2903              		.global	adc_data
 2904              		.section	.bss.adc_data,"aw",%nobits
 2905              		.align	2
 2908              	adc_data:
 2909 0000 00000000 		.space	16
 2909      00000000 
 2909      00000000 
 2909      00000000 
 2910              		.global	filter
 2911              		.section	.bss.filter,"aw",%nobits
 2912              		.align	2
 2915              	filter:
 2916 0000 00000000 		.space	40
 2916      00000000 
 2916      00000000 
 2916      00000000 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 79


 2916      00000000 
 2917              		.global	rxh_nst
 2918              		.section	.bss.rxh_nst,"aw",%nobits
 2919              		.align	2
 2922              	rxh_nst:
 2923 0000 00000000 		.space	28
 2923      00000000 
 2923      00000000 
 2923      00000000 
 2923      00000000 
 2924              		.global	txh_nst
 2925              		.section	.bss.txh_nst,"aw",%nobits
 2926              		.align	2
 2929              	txh_nst:
 2930 0000 00000000 		.space	24
 2930      00000000 
 2930      00000000 
 2930      00000000 
 2930      00000000 
 2931              		.global	txh_std
 2932              		.section	.bss.txh_std,"aw",%nobits
 2933              		.align	2
 2936              	txh_std:
 2937 0000 00000000 		.space	96
 2937      00000000 
 2937      00000000 
 2937      00000000 
 2937      00000000 
 2938              		.global	htim16
 2939              		.section	.bss.htim16,"aw",%nobits
 2940              		.align	2
 2943              	htim16:
 2944 0000 00000000 		.space	72
 2944      00000000 
 2944      00000000 
 2944      00000000 
 2944      00000000 
 2945              		.global	htim14
 2946              		.section	.bss.htim14,"aw",%nobits
 2947              		.align	2
 2950              	htim14:
 2951 0000 00000000 		.space	72
 2951      00000000 
 2951      00000000 
 2951      00000000 
 2951      00000000 
 2952              		.global	htim3
 2953              		.section	.bss.htim3,"aw",%nobits
 2954              		.align	2
 2957              	htim3:
 2958 0000 00000000 		.space	72
 2958      00000000 
 2958      00000000 
 2958      00000000 
 2958      00000000 
 2959              		.global	hspi1
 2960              		.section	.bss.hspi1,"aw",%nobits
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 80


 2961              		.align	2
 2964              	hspi1:
 2965 0000 00000000 		.space	100
 2965      00000000 
 2965      00000000 
 2965      00000000 
 2965      00000000 
 2966              		.global	hcan
 2967              		.section	.bss.hcan,"aw",%nobits
 2968              		.align	2
 2971              	hcan:
 2972 0000 00000000 		.space	40
 2972      00000000 
 2972      00000000 
 2972      00000000 
 2972      00000000 
 2973              		.text
 2974              	.Letext0:
 2975              		.file 3 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 2976              		.file 4 "c:\\users\\xhex8\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2977              		.file 5 "c:\\users\\xhex8\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2978              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 2979              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 2980              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 2981              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 2982              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 2983              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_can.h"
 2984              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_spi.h"
 2985              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 2986              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 2987              		.file 15 "Core/Inc/main.h"
 2988              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 2989              		.file 17 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 2990              		.file 18 "<built-in>"
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 81


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:214    .text.MX_GPIO_Init:000000d0 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:220    .text.delay_us:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:226    .text.delay_us:00000000 delay_us
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:253    .text.delay_us:00000010 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2943   .bss.htim16:00000000 htim16
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:258    .text.addr_setup:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:264    .text.addr_setup:00000000 addr_setup
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:362    .text.addr_setup:0000005c $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2895   .bss.addr:00000000 addr
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2889   .data.std_addr_base:00000000 std_addr_base
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:369    .text.can_setup:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:375    .text.can_setup:00000000 can_setup
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:512    .text.can_setup:00000078 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2936   .bss.txh_std:00000000 txh_std
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2929   .bss.txh_nst:00000000 txh_nst
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2876   .bss.nst_addr_base:00000000 nst_addr_base
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2915   .bss.filter:00000000 filter
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2971   .bss.hcan:00000000 hcan
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:523    .text.can_std_transmit:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:529    .text.can_std_transmit:00000000 can_std_transmit
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:598    .text.can_std_transmit:00000040 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2908   .bss.adc_data:00000000 adc_data
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2863   .bss.txMailbox:00000000 txMailbox
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:606    .text.can_nst_transmit:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:612    .text.can_nst_transmit:00000000 can_nst_transmit
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:660    .text.can_nst_transmit:00000024 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2869   .data.nst_state:00000000 nst_state
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2843   .bss.tx_nst_data:00000000 tx_nst_data
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:670    .text.can_tx_transmit_timer_handler:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:676    .text.can_tx_transmit_timer_handler:00000000 can_tx_transmit_timer_handler
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:697    .text.can_tx_transmit_timer_handler:0000000c $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2856   .bss.can_std_channel:00000000 can_std_channel
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:702    .text.can_rx_handler:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:708    .text.can_rx_handler:00000000 can_rx_handler
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:722    .text.ads131m04_transfer_word:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:728    .text.ads131m04_transfer_word:00000000 ads131m04_transfer_word
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:821    .text.ads131m04_transfer_word:00000068 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2964   .bss.hspi1:00000000 hspi1
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:826    .text.ads131m04_transfer_frame:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:832    .text.ads131m04_transfer_frame:00000000 ads131m04_transfer_frame
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:917    .text.ads131m04_adc_format_convert:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:923    .text.ads131m04_adc_format_convert:00000000 ads131m04_adc_format_convert
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:955    .text.ads131m04_adc_format_convert:00000018 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:960    .text.ads131m04_read_adc_nonblocking:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:966    .text.ads131m04_read_adc_nonblocking:00000000 ads131m04_read_adc_nonblocking
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1045   .text.ads131m04_drdy_exti_handler:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1051   .text.ads131m04_drdy_exti_handler:00000000 ads131m04_drdy_exti_handler
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1082   .text.ads131m04_drdy_exti_handler:00000014 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2901   .bss.adc_configured:00000000 adc_configured
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1088   .text.ads131m04_cmd:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1094   .text.ads131m04_cmd:00000000 ads131m04_cmd
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1176   .text.ads131m04_reset:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1182   .text.ads131m04_reset:00000000 ads131m04_reset
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 82


C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1212   .text.ads131m04_status:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1218   .text.ads131m04_status:00000000 ads131m04_status
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1250   .text.ads131m04_standby:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1256   .text.ads131m04_standby:00000000 ads131m04_standby
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1288   .text.ads131m04_wake:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1294   .text.ads131m04_wake:00000000 ads131m04_wake
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1326   .text.ads131m04_lock:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1332   .text.ads131m04_lock:00000000 ads131m04_lock
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1363   .text.ads131m04_lock:00000018 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1368   .text.ads131m04_unlock:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1374   .text.ads131m04_unlock:00000000 ads131m04_unlock
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1405   .text.ads131m04_unlock:00000018 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1410   .text.ads131m04_rreg:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1416   .text.ads131m04_rreg:00000000 ads131m04_rreg
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1462   .text.ads131m04_rreg:00000024 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1467   .text.ads131m04_rreg_multiple:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1473   .text.ads131m04_rreg_multiple:00000000 ads131m04_rreg_multiple
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1644   .text.ads131m04_rreg_multiple:000000ac $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1649   .text.ads131m04_wreg:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1655   .text.ads131m04_wreg:00000000 ads131m04_wreg
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1739   .text.ads131m04_wreg_multiple:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1745   .text.ads131m04_wreg_multiple:00000000 ads131m04_wreg_multiple
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1913   .text.ads131m04_test:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1919   .text.ads131m04_test:00000000 ads131m04_test
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1949   .text.adc_configure:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:1955   .text.adc_configure:00000000 adc_configure
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2060   .text.adc_configure:0000005c $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2067   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2073   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2098   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000010 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2850   .bss.rx_nst_data:00000000 rx_nst_data
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2922   .bss.rxh_nst:00000000 rxh_nst
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2104   .text.Error_Handler:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2110   .text.Error_Handler:00000000 Error_Handler
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2142   .text.MX_CAN_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2147   .text.MX_CAN_Init:00000000 MX_CAN_Init
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2220   .text.MX_CAN_Init:0000003c $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2226   .text.MX_SPI1_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2231   .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2313   .text.MX_SPI1_Init:00000048 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2319   .text.MX_TIM3_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2324   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2479   .text.MX_TIM3_Init:000000a8 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2957   .bss.htim3:00000000 htim3
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2485   .text.MX_TIM16_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2490   .text.MX_TIM16_Init:00000000 MX_TIM16_Init
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2543   .text.MX_TIM16_Init:00000028 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2550   .text.MX_TIM14_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2555   .text.MX_TIM14_Init:00000000 MX_TIM14_Init
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2606   .text.MX_TIM14_Init:00000028 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2950   .bss.htim14:00000000 htim14
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2612   .text.SystemClock_Config:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2618   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2717   .text.main:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2723   .text.main:00000000 main
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2830   .text.main:00000088 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2840   .bss.tx_nst_data:00000000 $d
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s 			page 83


C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2847   .bss.rx_nst_data:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2857   .bss.can_std_channel:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2860   .bss.txMailbox:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2873   .bss.nst_addr_base:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2882   .data.std_state:00000000 std_state
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2886   .data.std_addr_base:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2896   .bss.addr:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2902   .bss.adc_configured:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2905   .bss.adc_data:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2912   .bss.filter:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2919   .bss.rxh_nst:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2926   .bss.txh_nst:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2933   .bss.txh_std:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2940   .bss.htim16:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2947   .bss.htim14:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2954   .bss.htim3:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2961   .bss.hspi1:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccxeKfJo.s:2968   .bss.hcan:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_ReadPin
HAL_CAN_ConfigFilter
HAL_CAN_AddTxMessage
HAL_SPI_TransmitReceive
HAL_NVIC_DisableIRQ
HAL_CAN_GetRxMessage
HAL_CAN_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_PWM_Start
HAL_TIM_Base_Start
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_TIM_Base_Start_IT
HAL_GPIO_TogglePin
HAL_Delay
