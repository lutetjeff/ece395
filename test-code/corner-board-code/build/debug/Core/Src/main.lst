ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB72:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 2


  34:Core/Src/main.c **** #define STD_READY 0xF0
  35:Core/Src/main.c **** #define STD_STARTUP 0xE0
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** #define NST_INSTR 0xC0
  38:Core/Src/main.c **** #define NST_STARTUP 0xE0
  39:Core/Src/main.c **** #define NST_FAILED 0xD0
  40:Core/Src/main.c **** #define NST_READY 0xF0
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** CAN_HandleTypeDef hcan;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  54:Core/Src/main.c **** TIM_HandleTypeDef htim14;
  55:Core/Src/main.c **** TIM_HandleTypeDef htim16;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE BEGIN PV */
  58:Core/Src/main.c **** // standard transmission (1ksps) - configured once and not modified
  59:Core/Src/main.c **** // transmit only, no receive defined
  60:Core/Src/main.c **** // format: 29-bit extended identifier
  61:Core/Src/main.c **** // id[28:16] = 0x0001 
  62:Core/Src/main.c **** // id[15:12] = 0x0
  63:Core/Src/main.c **** // id[11:8] = addr
  64:Core/Src/main.c **** // id[7:4] = 0xF if successful, 0xE if setting up
  65:Core/Src/main.c **** // id[3:0] = sensor # 
  66:Core/Src/main.c **** CAN_TxHeaderTypeDef txh_std[4];
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** // non standard transmission (higher priority than data)
  69:Core/Src/main.c **** // transmit and receive - receive means control signals, transmit for feedback
  70:Core/Src/main.c **** // id[28:16] = 0x0000
  71:Core/Src/main.c **** // id[15:12] = 0x0
  72:Core/Src/main.c **** // id[11:8] = addr
  73:Core/Src/main.c **** // id[7:4] = 0xF if successful, 0xE if setting up, 0xD if failed, 0xC if instruction
  74:Core/Src/main.c **** // id[3:0] = instruction
  75:Core/Src/main.c **** CAN_TxHeaderTypeDef txh_nst;
  76:Core/Src/main.c **** CAN_RxHeaderTypeDef rxh_nst;
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** CAN_FilterTypeDef filter;
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** // ADC data array
  81:Core/Src/main.c **** int32_t adc_data[4];
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** // address
  84:Core/Src/main.c **** uint8_t addr = 0x00;
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** // for CAN
  87:Core/Src/main.c **** uint32_t std_addr_base = 0x00010000;
  88:Core/Src/main.c **** uint8_t std_state = STD_STARTUP;
  89:Core/Src/main.c **** uint32_t nst_addr_base = 0x00000000;
  90:Core/Src/main.c **** uint8_t nst_state = NST_STARTUP;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 3


  91:Core/Src/main.c **** uint32_t txMailbox;
  92:Core/Src/main.c **** uint8_t can_std_channel = 0x00;
  93:Core/Src/main.c **** uint8_t rx_nst_data[8];
  94:Core/Src/main.c **** uint8_t tx_nst_data[8];
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** /* USER CODE END PV */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  99:Core/Src/main.c **** void SystemClock_Config(void);
 100:Core/Src/main.c **** static void MX_GPIO_Init(void);
 101:Core/Src/main.c **** static void MX_CAN_Init(void);
 102:Core/Src/main.c **** static void MX_SPI1_Init(void);
 103:Core/Src/main.c **** static void MX_TIM3_Init(void);
 104:Core/Src/main.c **** static void MX_TIM16_Init(void);
 105:Core/Src/main.c **** static void MX_TIM14_Init(void);
 106:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** /* USER CODE END PFP */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 111:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** void delay_us (uint16_t us)
 114:Core/Src/main.c **** {
 115:Core/Src/main.c **** 	__HAL_TIM_SET_COUNTER(&htim16,0);  
 116:Core/Src/main.c **** 	while (__HAL_TIM_GET_COUNTER(&htim16) < us);  
 117:Core/Src/main.c **** }
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** void addr_setup() {  
 120:Core/Src/main.c ****   uint8_t a0 = HAL_GPIO_ReadPin(A0_GPIO_Port, A0_Pin) & 1;
 121:Core/Src/main.c ****   uint8_t a1 = HAL_GPIO_ReadPin(A1_GPIO_Port, A1_Pin) & 1;
 122:Core/Src/main.c ****   uint8_t a2 = HAL_GPIO_ReadPin(A2_GPIO_Port, A2_Pin) & 1;
 123:Core/Src/main.c ****   uint8_t a3 = HAL_GPIO_ReadPin(A3_GPIO_Port, A3_Pin) & 1;
 124:Core/Src/main.c ****   addr = (a3 << 3) | (a2 << 2) | (a1 << 1) | a0;
 125:Core/Src/main.c ****   addr = ~addr; // remove if dip s
 126:Core/Src/main.c ****   std_addr_base = 0x000100C0 | (addr << 8);
 127:Core/Src/main.c **** }
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** void can_setup() {
 130:Core/Src/main.c ****   // txh std
 131:Core/Src/main.c ****   for (int j = 0; j < 4; j++) {
 132:Core/Src/main.c ****     txh_std[j].DLC = 3; // send 24-bit ADC data
 133:Core/Src/main.c ****     txh_std[j].StdId = 0; // not used
 134:Core/Src/main.c ****     txh_std[j].ExtId = std_addr_base | std_state | j;
 135:Core/Src/main.c ****     txh_std[j].IDE = CAN_ID_EXT;
 136:Core/Src/main.c ****     txh_std[j].RTR = CAN_RTR_DATA;
 137:Core/Src/main.c ****     txh_std[j].TransmitGlobalTime = DISABLE;
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   // txh nst
 141:Core/Src/main.c ****   txh_nst.DLC = 4; // default
 142:Core/Src/main.c ****   txh_nst.StdId = 0; // not used
 143:Core/Src/main.c ****   txh_nst.ExtId = nst_addr_base ;
 144:Core/Src/main.c ****   txh_nst.IDE = CAN_ID_EXT;
 145:Core/Src/main.c ****   txh_nst.RTR = CAN_RTR_DATA;
 146:Core/Src/main.c ****   txh_nst.TransmitGlobalTime = DISABLE;
 147:Core/Src/main.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 4


 148:Core/Src/main.c ****   // filter config
 149:Core/Src/main.c ****   filter.FilterMaskIdHigh = 0x1FFF;
 150:Core/Src/main.c ****   filter.FilterMaskIdLow = 0xFFF0;
 151:Core/Src/main.c ****   filter.FilterIdHigh = 0x0000;
 152:Core/Src/main.c ****   filter.FilterIdLow = 0x00C0 | (addr << 8);
 153:Core/Src/main.c ****   filter.FilterMode = CAN_FILTERMODE_IDMASK;
 154:Core/Src/main.c ****   filter.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 155:Core/Src/main.c ****   filter.FilterScale = CAN_FILTERSCALE_32BIT;
 156:Core/Src/main.c ****   filter.FilterActivation = CAN_FILTER_ENABLE;
 157:Core/Src/main.c ****   filter.FilterBank = 0x00; // use first filter bank
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   HAL_CAN_ConfigFilter(&hcan, &filter);
 160:Core/Src/main.c **** }
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** void can_std_transmit(uint8_t sensor) {
 163:Core/Src/main.c ****   while (HAL_CAN_AddTxMessage(&hcan, &(txh_std[sensor]), ((uint8_t*) (adc_data + sensor)) + 1, &txM
 164:Core/Src/main.c ****     // too many messages! FIXME
 165:Core/Src/main.c ****     delay_us(128); // delay one message
 166:Core/Src/main.c ****   } 
 167:Core/Src/main.c **** }
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** void can_nst_transmit(uint8_t cmd, uint8_t len) {
 170:Core/Src/main.c ****   txh_nst.ExtId = nst_addr_base | nst_state | cmd;
 171:Core/Src/main.c ****   // right now we can't transmit too many messages too quickly or they will be lost
 172:Core/Src/main.c ****   // we can use TX completion interrupts and a FIFO to fix this, but it may not be necessary
 173:Core/Src/main.c ****   if (HAL_CAN_AddTxMessage(&hcan, &txh_nst, tx_nst_data, &txMailbox) != HAL_OK) {
 174:Core/Src/main.c ****     // too many messages! FIXME
 175:Core/Src/main.c ****     while (1);
 176:Core/Src/main.c ****   }
 177:Core/Src/main.c **** }
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** void can_tx_transmit_timer_handler() {
 180:Core/Src/main.c ****   can_std_transmit(can_std_channel);
 181:Core/Src/main.c ****   can_std_channel++;
 182:Core/Src/main.c ****   can_std_channel %= 4;
 183:Core/Src/main.c **** }
 184:Core/Src/main.c **** 
 185:Core/Src/main.c **** void can_rx_handler() {
 186:Core/Src/main.c ****   // handle various commands
 187:Core/Src/main.c ****   // parameters are in rxh and rx_nst_data
 188:Core/Src/main.c **** }
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** uint32_t ads131m04_transfer_word(uint16_t word) {
 191:Core/Src/main.c ****   uint8_t lower = word & 0xff;
 192:Core/Src/main.c ****   uint8_t upper = word >> 8;
 193:Core/Src/main.c ****   uint8_t zero = 0;
 194:Core/Src/main.c ****   uint8_t recv[3];
 195:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &upper, recv, 1, 0.1); // CMD
 196:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &lower, recv+1, 1, 0.1);
 197:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &zero, recv+2, 1, 0.1);
 198:Core/Src/main.c ****   return (recv[0] << 16) | (recv[1] << 8) | recv[2];
 199:Core/Src/main.c **** }
 200:Core/Src/main.c **** 
 201:Core/Src/main.c **** void ads131m04_transfer_frame(uint32_t* out, uint16_t* words, uint16_t tx_rx_delay) {
 202:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 203:Core/Src/main.c ****   
 204:Core/Src/main.c ****   for (uint8_t i = 0; i < 6; i++) {
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 5


 205:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 206:Core/Src/main.c ****   }
 207:Core/Src/main.c ****   // need to wait length of one word. at 6mhz this is 4us
 208:Core/Src/main.c ****   delay_us(4);
 209:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 210:Core/Src/main.c **** }
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** int32_t ads131m04_adc_format_convert(int32_t data){
 213:Core/Src/main.c ****   return ((data & 0x800000) ? -0x800000 : 0x000000) + (data & 0x7FFFFF);
 214:Core/Src/main.c **** }
 215:Core/Src/main.c **** 
 216:Core/Src/main.c **** void ads131m04_read_adc_nonblocking(int32_t* out) {
 217:Core/Src/main.c ****   uint32_t recv[12];
 218:Core/Src/main.c ****   uint16_t words[6] = {0, 0, 0, 0, 0, 0};
 219:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 220:Core/Src/main.c ****   out[0] = ads131m04_adc_format_convert(recv[1]);
 221:Core/Src/main.c ****   out[1] = ads131m04_adc_format_convert(recv[2]);
 222:Core/Src/main.c ****   out[2] = ads131m04_adc_format_convert(recv[3]);
 223:Core/Src/main.c ****   out[3] = ads131m04_adc_format_convert(recv[4]);
 224:Core/Src/main.c **** }
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** void ads131m04_drdy_exti_handler() {
 227:Core/Src/main.c ****   ads131m04_read_adc_nonblocking(adc_data);
 228:Core/Src/main.c **** }
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** void ads131m04_cmd(uint16_t cmd, uint32_t* out, uint16_t tx_rx_delay) {
 231:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 232:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 233:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 234:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, tx_rx_delay);
 235:Core/Src/main.c ****   ads131m04_transfer_frame(out+6, zeros, 0);
 236:Core/Src/main.c ****   if (tx_rx_delay) delay_us(tx_rx_delay); 
 237:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 238:Core/Src/main.c **** }
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** uint16_t ads131m04_reset() {
 241:Core/Src/main.c ****     uint32_t recv[12];
 242:Core/Src/main.c ****     ads131m04_cmd(0x0011, recv, 12); // reset time
 243:Core/Src/main.c ****     return recv[6] >> 8;
 244:Core/Src/main.c **** }
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** uint16_t ads131m04_status() {
 247:Core/Src/main.c ****     uint32_t recv[12];
 248:Core/Src/main.c ****     ads131m04_cmd(0x0000, recv, 0);
 249:Core/Src/main.c ****     return recv[6] >> 8;
 250:Core/Src/main.c **** }
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** uint16_t ads131m04_standby() {
 253:Core/Src/main.c ****     uint32_t recv[12];
 254:Core/Src/main.c ****     ads131m04_cmd(0x0022, recv, 0);
 255:Core/Src/main.c ****     return recv[6] >> 8;
 256:Core/Src/main.c **** }
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** uint16_t ads131m04_wake() {
 259:Core/Src/main.c ****     uint32_t recv[12];
 260:Core/Src/main.c ****     ads131m04_cmd(0x0033, recv, 0);
 261:Core/Src/main.c ****     return recv[6] >> 8;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 6


 262:Core/Src/main.c **** }
 263:Core/Src/main.c **** 
 264:Core/Src/main.c **** uint16_t ads131m04_lock() {
 265:Core/Src/main.c ****     uint32_t recv[12];
 266:Core/Src/main.c ****     ads131m04_cmd(0x0555, recv, 0);
 267:Core/Src/main.c ****     return recv[6] >> 8;
 268:Core/Src/main.c **** }
 269:Core/Src/main.c **** 
 270:Core/Src/main.c **** uint16_t ads131m04_unlock() {
 271:Core/Src/main.c ****     uint32_t recv[12];
 272:Core/Src/main.c ****     ads131m04_cmd(0x0655, recv, 0);
 273:Core/Src/main.c ****     return recv[6] >> 8;
 274:Core/Src/main.c **** }
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** // returns register value
 277:Core/Src/main.c **** uint16_t ads131m04_rreg(uint8_t reg) {
 278:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((reg & 0x3F) << 7);
 279:Core/Src/main.c ****     uint32_t recv[12];
 280:Core/Src/main.c ****     ads131m04_cmd(cmd, recv, 0);
 281:Core/Src/main.c ****     return recv[6] >> 8;
 282:Core/Src/main.c **** }
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** // read multiple registers
 285:Core/Src/main.c **** // returns read acknowledgement in out[0]
 286:Core/Src/main.c **** // returns register i in out[1+i]
 287:Core/Src/main.c **** void ads131m04_rreg_multiple(uint8_t start_reg, uint8_t count, uint32_t* out) {
 288:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 289:Core/Src/main.c ****   // if count is 1 then just use regular rreg and duplicate out[6] to out[7]
 290:Core/Src/main.c ****   if (count == 0) return;
 291:Core/Src/main.c ****   if (count == 1) {
 292:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((start_reg & 0x3F) << 7);
 293:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 294:Core/Src/main.c ****     out[7] = out[6];
 295:Core/Src/main.c ****     return;
 296:Core/Src/main.c ****   }
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   // write first frame asking to read
 299:Core/Src/main.c ****   uint16_t cmd = 0xA000 | ((start_reg & 0x3F) << 7) | ((count - 1) & 0x7F);
 300:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 301:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, 0);
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****   // manually transfer the second frame
 304:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 305:Core/Src/main.c ****   
 306:Core/Src/main.c ****   // write min(6, count + 2) zero words
 307:Core/Src/main.c ****   uint8_t max = (count < 4) ? 6 : (count + 2);
 308:Core/Src/main.c ****   for (uint8_t i = 0; i < max; i++) {
 309:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 310:Core/Src/main.c ****   }
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   delay_us(4); // need to wait length of one word. at 6mhz this is 4us
 313:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 316:Core/Src/main.c **** }
 317:Core/Src/main.c **** 
 318:Core/Src/main.c **** // returns write acknowledgement
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 7


 319:Core/Src/main.c **** uint16_t ads131m04_wreg(uint8_t reg, uint16_t data) {
 320:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 321:Core/Src/main.c ****   uint16_t cmd = 0x6000 | ((reg & 0x3F) << 7);
 322:Core/Src/main.c ****   uint32_t recv[12];
 323:Core/Src/main.c ****   uint16_t words[6] = {cmd, data, 0, 0, 0, 0};
 324:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 325:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 326:Core/Src/main.c ****   ads131m04_transfer_frame(recv+6, zeros, 0);
 327:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 328:Core/Src/main.c ****   return recv[6] >> 8;
 329:Core/Src/main.c **** }
 330:Core/Src/main.c **** 
 331:Core/Src/main.c **** // returns write acknowledgement
 332:Core/Src/main.c **** uint16_t ads131m04_wreg_multiple(uint8_t start_reg, uint8_t count, uint16_t* data) {
 333:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 334:Core/Src/main.c ****   if (count == 0) return 0;
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   uint16_t cmd = 0x6000 | ((start_reg & 0x3F) << 7) | ((count - 1) & 0x7F);
 337:Core/Src/main.c ****   // manually transfer the first frame
 338:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   // write the command
 341:Core/Src/main.c ****   ads131m04_transfer_word(cmd);
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   // write all registers to write
 344:Core/Src/main.c ****   for (uint8_t i = 0; i < count; i++) {
 345:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 346:Core/Src/main.c ****   }
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   // pad if not written enough (need to have written at least 6 words)
 349:Core/Src/main.c ****   for (int8_t i = 0; i < 4 - count; i++) {
 350:Core/Src/main.c ****     ads131m04_transfer_word(0);
 351:Core/Src/main.c ****   }
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   // write one zero word
 354:Core/Src/main.c ****   ads131m04_transfer_word(0);
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   delay_us(4); // need to wait length of one word. at 6mhz this is 4us
 357:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****   // transfer the second frame to get the write acknowledgement
 360:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 361:Core/Src/main.c ****   uint32_t recv[12];
 362:Core/Src/main.c ****   ads131m04_transfer_frame(recv, zeros, 0);
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 365:Core/Src/main.c ****   return recv[6] >> 8;  
 366:Core/Src/main.c **** }
 367:Core/Src/main.c **** 
 368:Core/Src/main.c **** // returns 1 if success, 0 if failed
 369:Core/Src/main.c **** uint8_t ads131m04_test() {
 370:Core/Src/main.c ****   uint16_t id = ads131m04_rreg(0x00);
 371:Core/Src/main.c ****   return (id >> 8) == 0x24;
 372:Core/Src/main.c **** }
 373:Core/Src/main.c **** 
 374:Core/Src/main.c **** // returns 1 if success, 0 if failed
 375:Core/Src/main.c **** uint8_t adc_configure() {
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 8


 376:Core/Src/main.c ****   if (!ads131m04_test()) return 0;
 377:Core/Src/main.c ****   uint16_t mode = 0x0110; // clear reset bit, disable all CRCs
 378:Core/Src/main.c ****   ads131m04_wreg(0x02, mode);
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   uint8_t osr = 0b100; // 2048, results in a data rate of ~1.4ksps
 381:Core/Src/main.c ****   uint16_t clock = 0x0F03 | (osr << 2); // enable all, highest precision
 382:Core/Src/main.c ****   ads131m04_wreg(0x03, clock);
 383:Core/Src/main.c **** 
 384:Core/Src/main.c ****   uint8_t gain = 0b110; // 64
 385:Core/Src/main.c ****   uint16_t gain1 = (gain << 12) | (gain << 8) | (gain << 4) | gain;
 386:Core/Src/main.c ****   ads131m04_wreg(0x04, gain1);
 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****   uint16_t cfg = 0x0000; // disable global chop and current detect
 389:Core/Src/main.c ****   ads131m04_wreg(0x06, cfg);
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   // add calibration here if we want to do that
 392:Core/Src/main.c ****   return 1;
 393:Core/Src/main.c **** }
 394:Core/Src/main.c **** 
 395:Core/Src/main.c **** /* USER CODE END 0 */
 396:Core/Src/main.c **** 
 397:Core/Src/main.c **** /**
 398:Core/Src/main.c ****   * @brief  The application entry point.
 399:Core/Src/main.c ****   * @retval int
 400:Core/Src/main.c ****   */
 401:Core/Src/main.c **** int main(void)
 402:Core/Src/main.c **** {
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 405:Core/Src/main.c ****   // disable IRQ until it's ready
 406:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 407:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(TIM14_IRQn);
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****   /* USER CODE END 1 */
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 412:Core/Src/main.c **** 
 413:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 414:Core/Src/main.c ****   HAL_Init();
 415:Core/Src/main.c **** 
 416:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****   /* USER CODE END Init */
 419:Core/Src/main.c **** 
 420:Core/Src/main.c ****   /* Configure the system clock */
 421:Core/Src/main.c ****   SystemClock_Config();
 422:Core/Src/main.c **** 
 423:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 424:Core/Src/main.c **** 
 425:Core/Src/main.c ****   /* USER CODE END SysInit */
 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****   /* Initialize all configured peripherals */
 428:Core/Src/main.c ****   MX_GPIO_Init();
 429:Core/Src/main.c ****   MX_CAN_Init();
 430:Core/Src/main.c ****   MX_SPI1_Init();
 431:Core/Src/main.c ****   MX_TIM3_Init();
 432:Core/Src/main.c ****   MX_TIM16_Init();
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 9


 433:Core/Src/main.c ****   MX_TIM14_Init();
 434:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 435:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 436:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim16);
 437:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 438:Core/Src/main.c ****   
 439:Core/Src/main.c ****   addr_setup();
 440:Core/Src/main.c ****   can_setup();
 441:Core/Src/main.c **** 
 442:Core/Src/main.c ****   HAL_CAN_Start(&hcan);
 443:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan, CAN_IT_RX_FIFO0_MSG_PENDING);
 444:Core/Src/main.c **** 
 445:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 446:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim14);
 447:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(TIM14_IRQn);
 448:Core/Src/main.c **** 
 449:Core/Src/main.c ****   /* USER CODE END 2 */
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   /* Infinite loop */
 452:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 453:Core/Src/main.c ****   while (1)
 454:Core/Src/main.c ****   {
 455:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 456:Core/Src/main.c ****     HAL_Delay(500);
 457:Core/Src/main.c ****     /* USER CODE END WHILE */
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 460:Core/Src/main.c ****   }
 461:Core/Src/main.c ****   /* USER CODE END 3 */
 462:Core/Src/main.c **** }
 463:Core/Src/main.c **** 
 464:Core/Src/main.c **** /**
 465:Core/Src/main.c ****   * @brief System Clock Configuration
 466:Core/Src/main.c ****   * @retval None
 467:Core/Src/main.c ****   */
 468:Core/Src/main.c **** void SystemClock_Config(void)
 469:Core/Src/main.c **** {
 470:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 471:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 472:Core/Src/main.c **** 
 473:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 474:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 475:Core/Src/main.c ****   */
 476:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 477:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 478:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 479:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 480:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 481:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 482:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 483:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 484:Core/Src/main.c ****   {
 485:Core/Src/main.c ****     Error_Handler();
 486:Core/Src/main.c ****   }
 487:Core/Src/main.c **** 
 488:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 489:Core/Src/main.c ****   */
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 10


 490:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 491:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 492:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 493:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 494:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 495:Core/Src/main.c **** 
 496:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 497:Core/Src/main.c ****   {
 498:Core/Src/main.c ****     Error_Handler();
 499:Core/Src/main.c ****   }
 500:Core/Src/main.c **** }
 501:Core/Src/main.c **** 
 502:Core/Src/main.c **** /**
 503:Core/Src/main.c ****   * @brief CAN Initialization Function
 504:Core/Src/main.c ****   * @param None
 505:Core/Src/main.c ****   * @retval None
 506:Core/Src/main.c ****   */
 507:Core/Src/main.c **** static void MX_CAN_Init(void)
 508:Core/Src/main.c **** {
 509:Core/Src/main.c **** 
 510:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 0 */
 511:Core/Src/main.c **** 
 512:Core/Src/main.c ****   /* USER CODE END CAN_Init 0 */
 513:Core/Src/main.c **** 
 514:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 1 */
 515:Core/Src/main.c **** 
 516:Core/Src/main.c ****   /* USER CODE END CAN_Init 1 */
 517:Core/Src/main.c ****   hcan.Instance = CAN;
 518:Core/Src/main.c ****   hcan.Init.Prescaler = 3;
 519:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 520:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 521:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 522:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 523:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 524:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 525:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
 526:Core/Src/main.c ****   hcan.Init.AutoRetransmission = DISABLE;
 527:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 528:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 529:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 530:Core/Src/main.c ****   {
 531:Core/Src/main.c ****     Error_Handler();
 532:Core/Src/main.c ****   }
 533:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 2 */
 534:Core/Src/main.c **** 
 535:Core/Src/main.c ****   /* USER CODE END CAN_Init 2 */
 536:Core/Src/main.c **** 
 537:Core/Src/main.c **** }
 538:Core/Src/main.c **** 
 539:Core/Src/main.c **** /**
 540:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 541:Core/Src/main.c ****   * @param None
 542:Core/Src/main.c ****   * @retval None
 543:Core/Src/main.c ****   */
 544:Core/Src/main.c **** static void MX_SPI1_Init(void)
 545:Core/Src/main.c **** {
 546:Core/Src/main.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 11


 547:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 548:Core/Src/main.c **** 
 549:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 550:Core/Src/main.c **** 
 551:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 552:Core/Src/main.c **** 
 553:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 554:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 555:Core/Src/main.c ****   hspi1.Instance = SPI1;
 556:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 557:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 558:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 559:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 560:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 561:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 562:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 563:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 564:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 565:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 566:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 567:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 568:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 569:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 570:Core/Src/main.c ****   {
 571:Core/Src/main.c ****     Error_Handler();
 572:Core/Src/main.c ****   }
 573:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 574:Core/Src/main.c **** 
 575:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 576:Core/Src/main.c **** 
 577:Core/Src/main.c **** }
 578:Core/Src/main.c **** 
 579:Core/Src/main.c **** /**
 580:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 581:Core/Src/main.c ****   * @param None
 582:Core/Src/main.c ****   * @retval None
 583:Core/Src/main.c ****   */
 584:Core/Src/main.c **** static void MX_TIM3_Init(void)
 585:Core/Src/main.c **** {
 586:Core/Src/main.c **** 
 587:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 588:Core/Src/main.c **** 
 589:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 590:Core/Src/main.c **** 
 591:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 592:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 593:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 594:Core/Src/main.c **** 
 595:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 596:Core/Src/main.c **** 
 597:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 598:Core/Src/main.c ****   htim3.Instance = TIM3;
 599:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 600:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 601:Core/Src/main.c ****   htim3.Init.Period = 7;
 602:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 603:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 12


 604:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 605:Core/Src/main.c ****   {
 606:Core/Src/main.c ****     Error_Handler();
 607:Core/Src/main.c ****   }
 608:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 609:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 610:Core/Src/main.c ****   {
 611:Core/Src/main.c ****     Error_Handler();
 612:Core/Src/main.c ****   }
 613:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 614:Core/Src/main.c ****   {
 615:Core/Src/main.c ****     Error_Handler();
 616:Core/Src/main.c ****   }
 617:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 618:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 619:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 620:Core/Src/main.c ****   {
 621:Core/Src/main.c ****     Error_Handler();
 622:Core/Src/main.c ****   }
 623:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 624:Core/Src/main.c ****   sConfigOC.Pulse = 4;
 625:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 626:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 627:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 628:Core/Src/main.c ****   {
 629:Core/Src/main.c ****     Error_Handler();
 630:Core/Src/main.c ****   }
 631:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 632:Core/Src/main.c **** 
 633:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 634:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 635:Core/Src/main.c **** 
 636:Core/Src/main.c **** }
 637:Core/Src/main.c **** 
 638:Core/Src/main.c **** /**
 639:Core/Src/main.c ****   * @brief TIM14 Initialization Function
 640:Core/Src/main.c ****   * @param None
 641:Core/Src/main.c ****   * @retval None
 642:Core/Src/main.c ****   */
 643:Core/Src/main.c **** static void MX_TIM14_Init(void)
 644:Core/Src/main.c **** {
 645:Core/Src/main.c **** 
 646:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 0 */
 647:Core/Src/main.c **** 
 648:Core/Src/main.c ****   /* USER CODE END TIM14_Init 0 */
 649:Core/Src/main.c **** 
 650:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 1 */
 651:Core/Src/main.c **** 
 652:Core/Src/main.c ****   /* USER CODE END TIM14_Init 1 */
 653:Core/Src/main.c ****   htim14.Instance = TIM14;
 654:Core/Src/main.c ****   htim14.Init.Prescaler = 11;
 655:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 656:Core/Src/main.c ****   htim14.Init.Period = 1000;
 657:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 658:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 659:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 660:Core/Src/main.c ****   {
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 13


 661:Core/Src/main.c ****     Error_Handler();
 662:Core/Src/main.c ****   }
 663:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 2 */
 664:Core/Src/main.c **** 
 665:Core/Src/main.c ****   /* USER CODE END TIM14_Init 2 */
 666:Core/Src/main.c **** 
 667:Core/Src/main.c **** }
 668:Core/Src/main.c **** 
 669:Core/Src/main.c **** /**
 670:Core/Src/main.c ****   * @brief TIM16 Initialization Function
 671:Core/Src/main.c ****   * @param None
 672:Core/Src/main.c ****   * @retval None
 673:Core/Src/main.c ****   */
 674:Core/Src/main.c **** static void MX_TIM16_Init(void)
 675:Core/Src/main.c **** {
 676:Core/Src/main.c **** 
 677:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 0 */
 678:Core/Src/main.c **** 
 679:Core/Src/main.c ****   /* USER CODE END TIM16_Init 0 */
 680:Core/Src/main.c **** 
 681:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 1 */
 682:Core/Src/main.c **** 
 683:Core/Src/main.c ****   /* USER CODE END TIM16_Init 1 */
 684:Core/Src/main.c ****   htim16.Instance = TIM16;
 685:Core/Src/main.c ****   htim16.Init.Prescaler = 47;
 686:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 687:Core/Src/main.c ****   htim16.Init.Period = 65535;
 688:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 689:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 690:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 691:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 692:Core/Src/main.c ****   {
 693:Core/Src/main.c ****     Error_Handler();
 694:Core/Src/main.c ****   }
 695:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 2 */
 696:Core/Src/main.c **** 
 697:Core/Src/main.c ****   /* USER CODE END TIM16_Init 2 */
 698:Core/Src/main.c **** 
 699:Core/Src/main.c **** }
 700:Core/Src/main.c **** 
 701:Core/Src/main.c **** /**
 702:Core/Src/main.c ****   * @brief GPIO Initialization Function
 703:Core/Src/main.c ****   * @param None
 704:Core/Src/main.c ****   * @retval None
 705:Core/Src/main.c ****   */
 706:Core/Src/main.c **** static void MX_GPIO_Init(void)
 707:Core/Src/main.c **** {
  26              		.loc 1 707 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              		.cfi_def_cfa_offset 20
  32              		.cfi_offset 4, -20
  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 14


  36              		.cfi_offset 14, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              		.cfi_def_cfa_offset 56
 708:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 708 3 view .LVU1
  40              		.loc 1 708 20 is_stmt 0 view .LVU2
  41 0004 1422     		movs	r2, #20
  42 0006 0021     		movs	r1, #0
  43 0008 03A8     		add	r0, sp, #12
  44 000a FFF7FEFF 		bl	memset
  45              	.LVL0:
 709:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 710:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 711:Core/Src/main.c **** 
 712:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 713:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  46              		.loc 1 713 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 713 3 view .LVU4
  49              		.loc 1 713 3 view .LVU5
  50 000e 304B     		ldr	r3, .L2
  51 0010 5A69     		ldr	r2, [r3, #20]
  52 0012 8021     		movs	r1, #128
  53 0014 C903     		lsls	r1, r1, #15
  54 0016 0A43     		orrs	r2, r1
  55 0018 5A61     		str	r2, [r3, #20]
  56              		.loc 1 713 3 view .LVU6
  57 001a 5A69     		ldr	r2, [r3, #20]
  58 001c 0A40     		ands	r2, r1
  59 001e 0092     		str	r2, [sp]
  60              		.loc 1 713 3 view .LVU7
  61 0020 009A     		ldr	r2, [sp]
  62              	.LBE4:
  63              		.loc 1 713 3 view .LVU8
 714:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  64              		.loc 1 714 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 714 3 view .LVU10
  67              		.loc 1 714 3 view .LVU11
  68 0022 5A69     		ldr	r2, [r3, #20]
  69 0024 8021     		movs	r1, #128
  70 0026 8902     		lsls	r1, r1, #10
  71 0028 0A43     		orrs	r2, r1
  72 002a 5A61     		str	r2, [r3, #20]
  73              		.loc 1 714 3 view .LVU12
  74 002c 5A69     		ldr	r2, [r3, #20]
  75 002e 0A40     		ands	r2, r1
  76 0030 0192     		str	r2, [sp, #4]
  77              		.loc 1 714 3 view .LVU13
  78 0032 019A     		ldr	r2, [sp, #4]
  79              	.LBE5:
  80              		.loc 1 714 3 view .LVU14
 715:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  81              		.loc 1 715 3 view .LVU15
  82              	.LBB6:
  83              		.loc 1 715 3 view .LVU16
  84              		.loc 1 715 3 view .LVU17
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 15


  85 0034 5A69     		ldr	r2, [r3, #20]
  86 0036 8021     		movs	r1, #128
  87 0038 C902     		lsls	r1, r1, #11
  88 003a 0A43     		orrs	r2, r1
  89 003c 5A61     		str	r2, [r3, #20]
  90              		.loc 1 715 3 view .LVU18
  91 003e 5B69     		ldr	r3, [r3, #20]
  92 0040 0B40     		ands	r3, r1
  93 0042 0293     		str	r3, [sp, #8]
  94              		.loc 1 715 3 view .LVU19
  95 0044 029B     		ldr	r3, [sp, #8]
  96              	.LBE6:
  97              		.loc 1 715 3 view .LVU20
 716:Core/Src/main.c **** 
 717:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 718:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
  98              		.loc 1 718 3 view .LVU21
  99 0046 234F     		ldr	r7, .L2+4
 100 0048 0022     		movs	r2, #0
 101 004a 0121     		movs	r1, #1
 102 004c 3800     		movs	r0, r7
 103 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL1:
 719:Core/Src/main.c **** 
 720:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 721:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, GPIO_PIN_RESET);
 105              		.loc 1 721 3 view .LVU22
 106 0052 9026     		movs	r6, #144
 107 0054 F605     		lsls	r6, r6, #23
 108 0056 0022     		movs	r2, #0
 109 0058 1021     		movs	r1, #16
 110 005a 3000     		movs	r0, r6
 111 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 112              	.LVL2:
 722:Core/Src/main.c **** 
 723:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 724:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
 113              		.loc 1 724 3 view .LVU23
 114              		.loc 1 724 23 is_stmt 0 view .LVU24
 115 0060 0125     		movs	r5, #1
 116 0062 0395     		str	r5, [sp, #12]
 725:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 117              		.loc 1 725 3 is_stmt 1 view .LVU25
 118              		.loc 1 725 24 is_stmt 0 view .LVU26
 119 0064 0495     		str	r5, [sp, #16]
 726:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 120              		.loc 1 726 3 is_stmt 1 view .LVU27
 121              		.loc 1 726 24 is_stmt 0 view .LVU28
 122 0066 0024     		movs	r4, #0
 123 0068 0594     		str	r4, [sp, #20]
 727:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 124              		.loc 1 727 3 is_stmt 1 view .LVU29
 125              		.loc 1 727 25 is_stmt 0 view .LVU30
 126 006a 0694     		str	r4, [sp, #24]
 728:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 127              		.loc 1 728 3 is_stmt 1 view .LVU31
 128 006c 03A9     		add	r1, sp, #12
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 16


 129 006e 3800     		movs	r0, r7
 130 0070 FFF7FEFF 		bl	HAL_GPIO_Init
 131              	.LVL3:
 729:Core/Src/main.c **** 
 730:Core/Src/main.c ****   /*Configure GPIO pin : A3_Pin */
 731:Core/Src/main.c ****   GPIO_InitStruct.Pin = A3_Pin;
 132              		.loc 1 731 3 view .LVU32
 133              		.loc 1 731 23 is_stmt 0 view .LVU33
 134 0074 0223     		movs	r3, #2
 135 0076 0393     		str	r3, [sp, #12]
 732:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 136              		.loc 1 732 3 is_stmt 1 view .LVU34
 137              		.loc 1 732 24 is_stmt 0 view .LVU35
 138 0078 0494     		str	r4, [sp, #16]
 733:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 139              		.loc 1 733 3 is_stmt 1 view .LVU36
 140              		.loc 1 733 24 is_stmt 0 view .LVU37
 141 007a 0595     		str	r5, [sp, #20]
 734:Core/Src/main.c ****   HAL_GPIO_Init(A3_GPIO_Port, &GPIO_InitStruct);
 142              		.loc 1 734 3 is_stmt 1 view .LVU38
 143 007c 03A9     		add	r1, sp, #12
 144 007e 3800     		movs	r0, r7
 145 0080 FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL4:
 735:Core/Src/main.c **** 
 736:Core/Src/main.c ****   /*Configure GPIO pins : A2_Pin A1_Pin A0_Pin */
 737:Core/Src/main.c ****   GPIO_InitStruct.Pin = A2_Pin|A1_Pin|A0_Pin;
 147              		.loc 1 737 3 view .LVU39
 148              		.loc 1 737 23 is_stmt 0 view .LVU40
 149 0084 0723     		movs	r3, #7
 150 0086 0393     		str	r3, [sp, #12]
 738:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 151              		.loc 1 738 3 is_stmt 1 view .LVU41
 152              		.loc 1 738 24 is_stmt 0 view .LVU42
 153 0088 0494     		str	r4, [sp, #16]
 739:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 154              		.loc 1 739 3 is_stmt 1 view .LVU43
 155              		.loc 1 739 24 is_stmt 0 view .LVU44
 156 008a 0595     		str	r5, [sp, #20]
 740:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 157              		.loc 1 740 3 is_stmt 1 view .LVU45
 158 008c 03A9     		add	r1, sp, #12
 159 008e 3000     		movs	r0, r6
 160 0090 FFF7FEFF 		bl	HAL_GPIO_Init
 161              	.LVL5:
 741:Core/Src/main.c **** 
 742:Core/Src/main.c ****   /*Configure GPIO pin : DRDY_Pin */
 743:Core/Src/main.c ****   GPIO_InitStruct.Pin = DRDY_Pin;
 162              		.loc 1 743 3 view .LVU46
 163              		.loc 1 743 23 is_stmt 0 view .LVU47
 164 0094 0823     		movs	r3, #8
 165 0096 0393     		str	r3, [sp, #12]
 744:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 166              		.loc 1 744 3 is_stmt 1 view .LVU48
 167              		.loc 1 744 24 is_stmt 0 view .LVU49
 168 0098 8423     		movs	r3, #132
 169 009a 9B03     		lsls	r3, r3, #14
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 17


 170 009c 0493     		str	r3, [sp, #16]
 745:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 171              		.loc 1 745 3 is_stmt 1 view .LVU50
 172              		.loc 1 745 24 is_stmt 0 view .LVU51
 173 009e 0594     		str	r4, [sp, #20]
 746:Core/Src/main.c ****   HAL_GPIO_Init(DRDY_GPIO_Port, &GPIO_InitStruct);
 174              		.loc 1 746 3 is_stmt 1 view .LVU52
 175 00a0 03A9     		add	r1, sp, #12
 176 00a2 3000     		movs	r0, r6
 177 00a4 FFF7FEFF 		bl	HAL_GPIO_Init
 178              	.LVL6:
 747:Core/Src/main.c **** 
 748:Core/Src/main.c ****   /*Configure GPIO pin : CS_Pin */
 749:Core/Src/main.c ****   GPIO_InitStruct.Pin = CS_Pin;
 179              		.loc 1 749 3 view .LVU53
 180              		.loc 1 749 23 is_stmt 0 view .LVU54
 181 00a8 1023     		movs	r3, #16
 182 00aa 0393     		str	r3, [sp, #12]
 750:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 183              		.loc 1 750 3 is_stmt 1 view .LVU55
 184              		.loc 1 750 24 is_stmt 0 view .LVU56
 185 00ac 0495     		str	r5, [sp, #16]
 751:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 186              		.loc 1 751 3 is_stmt 1 view .LVU57
 187              		.loc 1 751 24 is_stmt 0 view .LVU58
 188 00ae 0594     		str	r4, [sp, #20]
 752:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 189              		.loc 1 752 3 is_stmt 1 view .LVU59
 190              		.loc 1 752 25 is_stmt 0 view .LVU60
 191 00b0 0694     		str	r4, [sp, #24]
 753:Core/Src/main.c ****   HAL_GPIO_Init(CS_GPIO_Port, &GPIO_InitStruct);
 192              		.loc 1 753 3 is_stmt 1 view .LVU61
 193 00b2 03A9     		add	r1, sp, #12
 194 00b4 3000     		movs	r0, r6
 195 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 196              	.LVL7:
 754:Core/Src/main.c **** 
 755:Core/Src/main.c ****   /* EXTI interrupt init*/
 756:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI2_3_IRQn, 0, 0);
 197              		.loc 1 756 3 view .LVU62
 198 00ba 0022     		movs	r2, #0
 199 00bc 0021     		movs	r1, #0
 200 00be 0620     		movs	r0, #6
 201 00c0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 202              	.LVL8:
 757:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 203              		.loc 1 757 3 view .LVU63
 204 00c4 0620     		movs	r0, #6
 205 00c6 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 206              	.LVL9:
 758:Core/Src/main.c **** 
 759:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 760:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 761:Core/Src/main.c **** }
 207              		.loc 1 761 1 is_stmt 0 view .LVU64
 208 00ca 09B0     		add	sp, sp, #36
 209              		@ sp needed
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 18


 210 00cc F0BD     		pop	{r4, r5, r6, r7, pc}
 211              	.L3:
 212 00ce C046     		.align	2
 213              	.L2:
 214 00d0 00100240 		.word	1073876992
 215 00d4 00140048 		.word	1207964672
 216              		.cfi_endproc
 217              	.LFE72:
 219              		.section	.text.delay_us,"ax",%progbits
 220              		.align	1
 221              		.global	delay_us
 222              		.syntax unified
 223              		.code	16
 224              		.thumb_func
 226              	delay_us:
 227              	.LVL10:
 228              	.LFB40:
 114:Core/Src/main.c **** 	__HAL_TIM_SET_COUNTER(&htim16,0);  
 229              		.loc 1 114 1 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 115:Core/Src/main.c **** 	while (__HAL_TIM_GET_COUNTER(&htim16) < us);  
 234              		.loc 1 115 2 view .LVU66
 235 0000 034B     		ldr	r3, .L6
 236 0002 1A68     		ldr	r2, [r3]
 237 0004 0023     		movs	r3, #0
 238 0006 5362     		str	r3, [r2, #36]
 116:Core/Src/main.c **** }
 239              		.loc 1 116 2 view .LVU67
 240              	.L5:
 116:Core/Src/main.c **** }
 241              		.loc 1 116 40 discriminator 1 view .LVU68
 116:Core/Src/main.c **** }
 242              		.loc 1 116 9 is_stmt 0 discriminator 1 view .LVU69
 243 0008 536A     		ldr	r3, [r2, #36]
 116:Core/Src/main.c **** }
 244              		.loc 1 116 40 discriminator 1 view .LVU70
 245 000a 8342     		cmp	r3, r0
 246 000c FCD3     		bcc	.L5
 117:Core/Src/main.c **** 
 247              		.loc 1 117 1 view .LVU71
 248              		@ sp needed
 249 000e 7047     		bx	lr
 250              	.L7:
 251              		.align	2
 252              	.L6:
 253 0010 00000000 		.word	htim16
 254              		.cfi_endproc
 255              	.LFE40:
 257              		.section	.text.addr_setup,"ax",%progbits
 258              		.align	1
 259              		.global	addr_setup
 260              		.syntax unified
 261              		.code	16
 262              		.thumb_func
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 19


 264              	addr_setup:
 265              	.LFB41:
 119:Core/Src/main.c ****   uint8_t a0 = HAL_GPIO_ReadPin(A0_GPIO_Port, A0_Pin) & 1;
 266              		.loc 1 119 19 is_stmt 1 view -0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 271              		.cfi_def_cfa_offset 24
 272              		.cfi_offset 3, -24
 273              		.cfi_offset 4, -20
 274              		.cfi_offset 5, -16
 275              		.cfi_offset 6, -12
 276              		.cfi_offset 7, -8
 277              		.cfi_offset 14, -4
 120:Core/Src/main.c ****   uint8_t a1 = HAL_GPIO_ReadPin(A1_GPIO_Port, A1_Pin) & 1;
 278              		.loc 1 120 3 view .LVU73
 120:Core/Src/main.c ****   uint8_t a1 = HAL_GPIO_ReadPin(A1_GPIO_Port, A1_Pin) & 1;
 279              		.loc 1 120 16 is_stmt 0 view .LVU74
 280 0002 9027     		movs	r7, #144
 281 0004 FF05     		lsls	r7, r7, #23
 282 0006 0421     		movs	r1, #4
 283 0008 3800     		movs	r0, r7
 284 000a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 285              	.LVL11:
 120:Core/Src/main.c ****   uint8_t a1 = HAL_GPIO_ReadPin(A1_GPIO_Port, A1_Pin) & 1;
 286              		.loc 1 120 11 view .LVU75
 287 000e 0124     		movs	r4, #1
 288 0010 2040     		ands	r0, r4
 289 0012 0500     		movs	r5, r0
 290              	.LVL12:
 121:Core/Src/main.c ****   uint8_t a2 = HAL_GPIO_ReadPin(A2_GPIO_Port, A2_Pin) & 1;
 291              		.loc 1 121 3 is_stmt 1 view .LVU76
 121:Core/Src/main.c ****   uint8_t a2 = HAL_GPIO_ReadPin(A2_GPIO_Port, A2_Pin) & 1;
 292              		.loc 1 121 16 is_stmt 0 view .LVU77
 293 0014 0221     		movs	r1, #2
 294 0016 3800     		movs	r0, r7
 295 0018 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 296              	.LVL13:
 121:Core/Src/main.c ****   uint8_t a2 = HAL_GPIO_ReadPin(A2_GPIO_Port, A2_Pin) & 1;
 297              		.loc 1 121 11 view .LVU78
 298 001c 2040     		ands	r0, r4
 299 001e 0600     		movs	r6, r0
 300              	.LVL14:
 122:Core/Src/main.c ****   uint8_t a3 = HAL_GPIO_ReadPin(A3_GPIO_Port, A3_Pin) & 1;
 301              		.loc 1 122 3 is_stmt 1 view .LVU79
 122:Core/Src/main.c ****   uint8_t a3 = HAL_GPIO_ReadPin(A3_GPIO_Port, A3_Pin) & 1;
 302              		.loc 1 122 16 is_stmt 0 view .LVU80
 303 0020 0121     		movs	r1, #1
 304 0022 3800     		movs	r0, r7
 305 0024 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 306              	.LVL15:
 122:Core/Src/main.c ****   uint8_t a3 = HAL_GPIO_ReadPin(A3_GPIO_Port, A3_Pin) & 1;
 307              		.loc 1 122 11 view .LVU81
 308 0028 2040     		ands	r0, r4
 309 002a 0700     		movs	r7, r0
 310              	.LVL16:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 20


 123:Core/Src/main.c ****   addr = (a3 << 3) | (a2 << 2) | (a1 << 1) | a0;
 311              		.loc 1 123 3 is_stmt 1 view .LVU82
 123:Core/Src/main.c ****   addr = (a3 << 3) | (a2 << 2) | (a1 << 1) | a0;
 312              		.loc 1 123 16 is_stmt 0 view .LVU83
 313 002c 0221     		movs	r1, #2
 314 002e 0A48     		ldr	r0, .L9
 315 0030 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 316              	.LVL17:
 123:Core/Src/main.c ****   addr = (a3 << 3) | (a2 << 2) | (a1 << 1) | a0;
 317              		.loc 1 123 11 view .LVU84
 318 0034 0440     		ands	r4, r0
 319              	.LVL18:
 124:Core/Src/main.c ****   addr = ~addr; // remove if dip s
 320              		.loc 1 124 3 is_stmt 1 view .LVU85
 124:Core/Src/main.c ****   addr = ~addr; // remove if dip s
 321              		.loc 1 124 14 is_stmt 0 view .LVU86
 322 0036 E400     		lsls	r4, r4, #3
 323              	.LVL19:
 124:Core/Src/main.c ****   addr = ~addr; // remove if dip s
 324              		.loc 1 124 26 view .LVU87
 325 0038 BF00     		lsls	r7, r7, #2
 326              	.LVL20:
 124:Core/Src/main.c ****   addr = ~addr; // remove if dip s
 327              		.loc 1 124 20 view .LVU88
 328 003a 3C43     		orrs	r4, r7
 124:Core/Src/main.c ****   addr = ~addr; // remove if dip s
 329              		.loc 1 124 38 view .LVU89
 330 003c 7600     		lsls	r6, r6, #1
 331              	.LVL21:
 124:Core/Src/main.c ****   addr = ~addr; // remove if dip s
 332              		.loc 1 124 32 view .LVU90
 333 003e 3443     		orrs	r4, r6
 124:Core/Src/main.c ****   addr = ~addr; // remove if dip s
 334              		.loc 1 124 44 view .LVU91
 335 0040 2C43     		orrs	r4, r5
 124:Core/Src/main.c ****   addr = ~addr; // remove if dip s
 336              		.loc 1 124 8 view .LVU92
 337 0042 064B     		ldr	r3, .L9+4
 338 0044 1C70     		strb	r4, [r3]
 125:Core/Src/main.c ****   std_addr_base = 0x000100C0 | (addr << 8);
 339              		.loc 1 125 3 is_stmt 1 view .LVU93
 125:Core/Src/main.c ****   std_addr_base = 0x000100C0 | (addr << 8);
 340              		.loc 1 125 8 is_stmt 0 view .LVU94
 341 0046 E043     		mvns	r0, r4
 342              	.LVL22:
 125:Core/Src/main.c ****   std_addr_base = 0x000100C0 | (addr << 8);
 343              		.loc 1 125 8 view .LVU95
 344 0048 C0B2     		uxtb	r0, r0
 345 004a 1870     		strb	r0, [r3]
 126:Core/Src/main.c **** }
 346              		.loc 1 126 3 is_stmt 1 view .LVU96
 126:Core/Src/main.c **** }
 347              		.loc 1 126 38 is_stmt 0 view .LVU97
 348 004c 0002     		lsls	r0, r0, #8
 126:Core/Src/main.c **** }
 349              		.loc 1 126 30 view .LVU98
 350 004e 044B     		ldr	r3, .L9+8
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 21


 351 0050 0343     		orrs	r3, r0
 126:Core/Src/main.c **** }
 352              		.loc 1 126 17 view .LVU99
 353 0052 044A     		ldr	r2, .L9+12
 354 0054 1360     		str	r3, [r2]
 127:Core/Src/main.c **** 
 355              		.loc 1 127 1 view .LVU100
 356              		@ sp needed
 357              	.LVL23:
 127:Core/Src/main.c **** 
 358              		.loc 1 127 1 view .LVU101
 359 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 360              	.L10:
 361              		.align	2
 362              	.L9:
 363 0058 00140048 		.word	1207964672
 364 005c 00000000 		.word	addr
 365 0060 C0000100 		.word	65728
 366 0064 00000000 		.word	std_addr_base
 367              		.cfi_endproc
 368              	.LFE41:
 370              		.section	.text.can_setup,"ax",%progbits
 371              		.align	1
 372              		.global	can_setup
 373              		.syntax unified
 374              		.code	16
 375              		.thumb_func
 377              	can_setup:
 378              	.LFB42:
 129:Core/Src/main.c ****   // txh std
 379              		.loc 1 129 18 is_stmt 1 view -0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383 0000 70B5     		push	{r4, r5, r6, lr}
 384              		.cfi_def_cfa_offset 16
 385              		.cfi_offset 4, -16
 386              		.cfi_offset 5, -12
 387              		.cfi_offset 6, -8
 388              		.cfi_offset 14, -4
 131:Core/Src/main.c ****     txh_std[j].DLC = 3; // send 24-bit ADC data
 389              		.loc 1 131 3 view .LVU103
 390              	.LBB7:
 131:Core/Src/main.c ****     txh_std[j].DLC = 3; // send 24-bit ADC data
 391              		.loc 1 131 8 view .LVU104
 392              	.LVL24:
 131:Core/Src/main.c ****     txh_std[j].DLC = 3; // send 24-bit ADC data
 393              		.loc 1 131 12 is_stmt 0 view .LVU105
 394 0002 0025     		movs	r5, #0
 131:Core/Src/main.c ****     txh_std[j].DLC = 3; // send 24-bit ADC data
 395              		.loc 1 131 3 view .LVU106
 396 0004 16E0     		b	.L12
 397              	.LVL25:
 398              	.L13:
 132:Core/Src/main.c ****     txh_std[j].StdId = 0; // not used
 399              		.loc 1 132 5 is_stmt 1 discriminator 3 view .LVU107
 132:Core/Src/main.c ****     txh_std[j].StdId = 0; // not used
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 22


 400              		.loc 1 132 20 is_stmt 0 discriminator 3 view .LVU108
 401 0006 1D49     		ldr	r1, .L14
 402 0008 6A00     		lsls	r2, r5, #1
 403 000a 5019     		adds	r0, r2, r5
 404 000c C300     		lsls	r3, r0, #3
 405 000e CB18     		adds	r3, r1, r3
 406 0010 0320     		movs	r0, #3
 407 0012 1861     		str	r0, [r3, #16]
 133:Core/Src/main.c ****     txh_std[j].ExtId = std_addr_base | std_state | j;
 408              		.loc 1 133 5 is_stmt 1 discriminator 3 view .LVU109
 133:Core/Src/main.c ****     txh_std[j].ExtId = std_addr_base | std_state | j;
 409              		.loc 1 133 22 is_stmt 0 discriminator 3 view .LVU110
 410 0014 5219     		adds	r2, r2, r5
 411 0016 D400     		lsls	r4, r2, #3
 412 0018 0020     		movs	r0, #0
 413 001a 6050     		str	r0, [r4, r1]
 134:Core/Src/main.c ****     txh_std[j].IDE = CAN_ID_EXT;
 414              		.loc 1 134 5 is_stmt 1 discriminator 3 view .LVU111
 134:Core/Src/main.c ****     txh_std[j].IDE = CAN_ID_EXT;
 415              		.loc 1 134 38 is_stmt 0 discriminator 3 view .LVU112
 416 001c 184A     		ldr	r2, .L14+4
 417 001e 1278     		ldrb	r2, [r2]
 418 0020 1849     		ldr	r1, .L14+8
 419 0022 0968     		ldr	r1, [r1]
 420 0024 0A43     		orrs	r2, r1
 134:Core/Src/main.c ****     txh_std[j].IDE = CAN_ID_EXT;
 421              		.loc 1 134 50 discriminator 3 view .LVU113
 422 0026 2A43     		orrs	r2, r5
 134:Core/Src/main.c ****     txh_std[j].IDE = CAN_ID_EXT;
 423              		.loc 1 134 22 discriminator 3 view .LVU114
 424 0028 5A60     		str	r2, [r3, #4]
 135:Core/Src/main.c ****     txh_std[j].RTR = CAN_RTR_DATA;
 425              		.loc 1 135 5 is_stmt 1 discriminator 3 view .LVU115
 135:Core/Src/main.c ****     txh_std[j].RTR = CAN_RTR_DATA;
 426              		.loc 1 135 20 is_stmt 0 discriminator 3 view .LVU116
 427 002a 0422     		movs	r2, #4
 428 002c 9A60     		str	r2, [r3, #8]
 136:Core/Src/main.c ****     txh_std[j].TransmitGlobalTime = DISABLE;
 429              		.loc 1 136 5 is_stmt 1 discriminator 3 view .LVU117
 136:Core/Src/main.c ****     txh_std[j].TransmitGlobalTime = DISABLE;
 430              		.loc 1 136 20 is_stmt 0 discriminator 3 view .LVU118
 431 002e D860     		str	r0, [r3, #12]
 137:Core/Src/main.c ****   }
 432              		.loc 1 137 5 is_stmt 1 discriminator 3 view .LVU119
 137:Core/Src/main.c ****   }
 433              		.loc 1 137 35 is_stmt 0 discriminator 3 view .LVU120
 434 0030 1875     		strb	r0, [r3, #20]
 131:Core/Src/main.c ****     txh_std[j].DLC = 3; // send 24-bit ADC data
 435              		.loc 1 131 27 is_stmt 1 discriminator 3 view .LVU121
 436 0032 0135     		adds	r5, r5, #1
 437              	.LVL26:
 438              	.L12:
 131:Core/Src/main.c ****     txh_std[j].DLC = 3; // send 24-bit ADC data
 439              		.loc 1 131 21 discriminator 1 view .LVU122
 440 0034 032D     		cmp	r5, #3
 441 0036 E6DD     		ble	.L13
 442              	.LBE7:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 23


 141:Core/Src/main.c ****   txh_nst.StdId = 0; // not used
 443              		.loc 1 141 3 view .LVU123
 141:Core/Src/main.c ****   txh_nst.StdId = 0; // not used
 444              		.loc 1 141 15 is_stmt 0 view .LVU124
 445 0038 134B     		ldr	r3, .L14+12
 446 003a 0421     		movs	r1, #4
 447 003c 1961     		str	r1, [r3, #16]
 142:Core/Src/main.c ****   txh_nst.ExtId = nst_addr_base ;
 448              		.loc 1 142 3 is_stmt 1 view .LVU125
 142:Core/Src/main.c ****   txh_nst.ExtId = nst_addr_base ;
 449              		.loc 1 142 17 is_stmt 0 view .LVU126
 450 003e 0022     		movs	r2, #0
 451 0040 1A60     		str	r2, [r3]
 143:Core/Src/main.c ****   txh_nst.IDE = CAN_ID_EXT;
 452              		.loc 1 143 3 is_stmt 1 view .LVU127
 143:Core/Src/main.c ****   txh_nst.IDE = CAN_ID_EXT;
 453              		.loc 1 143 17 is_stmt 0 view .LVU128
 454 0042 1248     		ldr	r0, .L14+16
 455 0044 0068     		ldr	r0, [r0]
 456 0046 5860     		str	r0, [r3, #4]
 144:Core/Src/main.c ****   txh_nst.RTR = CAN_RTR_DATA;
 457              		.loc 1 144 3 is_stmt 1 view .LVU129
 144:Core/Src/main.c ****   txh_nst.RTR = CAN_RTR_DATA;
 458              		.loc 1 144 15 is_stmt 0 view .LVU130
 459 0048 9960     		str	r1, [r3, #8]
 145:Core/Src/main.c ****   txh_nst.TransmitGlobalTime = DISABLE;
 460              		.loc 1 145 3 is_stmt 1 view .LVU131
 145:Core/Src/main.c ****   txh_nst.TransmitGlobalTime = DISABLE;
 461              		.loc 1 145 15 is_stmt 0 view .LVU132
 462 004a DA60     		str	r2, [r3, #12]
 146:Core/Src/main.c **** 
 463              		.loc 1 146 3 is_stmt 1 view .LVU133
 146:Core/Src/main.c **** 
 464              		.loc 1 146 30 is_stmt 0 view .LVU134
 465 004c 1A75     		strb	r2, [r3, #20]
 149:Core/Src/main.c ****   filter.FilterMaskIdLow = 0xFFF0;
 466              		.loc 1 149 3 is_stmt 1 view .LVU135
 149:Core/Src/main.c ****   filter.FilterMaskIdLow = 0xFFF0;
 467              		.loc 1 149 27 is_stmt 0 view .LVU136
 468 004e 1049     		ldr	r1, .L14+20
 469 0050 104B     		ldr	r3, .L14+24
 470 0052 8B60     		str	r3, [r1, #8]
 150:Core/Src/main.c ****   filter.FilterIdHigh = 0x0000;
 471              		.loc 1 150 3 is_stmt 1 view .LVU137
 150:Core/Src/main.c ****   filter.FilterIdHigh = 0x0000;
 472              		.loc 1 150 26 is_stmt 0 view .LVU138
 473 0054 104B     		ldr	r3, .L14+28
 474 0056 CB60     		str	r3, [r1, #12]
 151:Core/Src/main.c ****   filter.FilterIdLow = 0x00C0 | (addr << 8);
 475              		.loc 1 151 3 is_stmt 1 view .LVU139
 151:Core/Src/main.c ****   filter.FilterIdLow = 0x00C0 | (addr << 8);
 476              		.loc 1 151 23 is_stmt 0 view .LVU140
 477 0058 0A60     		str	r2, [r1]
 152:Core/Src/main.c ****   filter.FilterMode = CAN_FILTERMODE_IDMASK;
 478              		.loc 1 152 3 is_stmt 1 view .LVU141
 152:Core/Src/main.c ****   filter.FilterMode = CAN_FILTERMODE_IDMASK;
 479              		.loc 1 152 39 is_stmt 0 view .LVU142
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 24


 480 005a 104B     		ldr	r3, .L14+32
 481 005c 1B78     		ldrb	r3, [r3]
 482 005e 1B02     		lsls	r3, r3, #8
 152:Core/Src/main.c ****   filter.FilterMode = CAN_FILTERMODE_IDMASK;
 483              		.loc 1 152 31 view .LVU143
 484 0060 C020     		movs	r0, #192
 485 0062 0343     		orrs	r3, r0
 152:Core/Src/main.c ****   filter.FilterMode = CAN_FILTERMODE_IDMASK;
 486              		.loc 1 152 22 view .LVU144
 487 0064 4B60     		str	r3, [r1, #4]
 153:Core/Src/main.c ****   filter.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 488              		.loc 1 153 3 is_stmt 1 view .LVU145
 153:Core/Src/main.c ****   filter.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 489              		.loc 1 153 21 is_stmt 0 view .LVU146
 490 0066 8A61     		str	r2, [r1, #24]
 154:Core/Src/main.c ****   filter.FilterScale = CAN_FILTERSCALE_32BIT;
 491              		.loc 1 154 3 is_stmt 1 view .LVU147
 154:Core/Src/main.c ****   filter.FilterScale = CAN_FILTERSCALE_32BIT;
 492              		.loc 1 154 31 is_stmt 0 view .LVU148
 493 0068 0A61     		str	r2, [r1, #16]
 155:Core/Src/main.c ****   filter.FilterActivation = CAN_FILTER_ENABLE;
 494              		.loc 1 155 3 is_stmt 1 view .LVU149
 155:Core/Src/main.c ****   filter.FilterActivation = CAN_FILTER_ENABLE;
 495              		.loc 1 155 22 is_stmt 0 view .LVU150
 496 006a 0123     		movs	r3, #1
 497 006c CB61     		str	r3, [r1, #28]
 156:Core/Src/main.c ****   filter.FilterBank = 0x00; // use first filter bank
 498              		.loc 1 156 3 is_stmt 1 view .LVU151
 156:Core/Src/main.c ****   filter.FilterBank = 0x00; // use first filter bank
 499              		.loc 1 156 27 is_stmt 0 view .LVU152
 500 006e 0B62     		str	r3, [r1, #32]
 157:Core/Src/main.c **** 
 501              		.loc 1 157 3 is_stmt 1 view .LVU153
 157:Core/Src/main.c **** 
 502              		.loc 1 157 21 is_stmt 0 view .LVU154
 503 0070 4A61     		str	r2, [r1, #20]
 159:Core/Src/main.c **** }
 504              		.loc 1 159 3 is_stmt 1 view .LVU155
 505 0072 0B48     		ldr	r0, .L14+36
 506 0074 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 507              	.LVL27:
 160:Core/Src/main.c **** 
 508              		.loc 1 160 1 is_stmt 0 view .LVU156
 509              		@ sp needed
 510              	.LVL28:
 160:Core/Src/main.c **** 
 511              		.loc 1 160 1 view .LVU157
 512 0078 70BD     		pop	{r4, r5, r6, pc}
 513              	.L15:
 514 007a C046     		.align	2
 515              	.L14:
 516 007c 00000000 		.word	txh_std
 517 0080 00000000 		.word	std_state
 518 0084 00000000 		.word	std_addr_base
 519 0088 00000000 		.word	txh_nst
 520 008c 00000000 		.word	nst_addr_base
 521 0090 00000000 		.word	filter
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 25


 522 0094 FF1F0000 		.word	8191
 523 0098 F0FF0000 		.word	65520
 524 009c 00000000 		.word	addr
 525 00a0 00000000 		.word	hcan
 526              		.cfi_endproc
 527              	.LFE42:
 529              		.section	.text.can_std_transmit,"ax",%progbits
 530              		.align	1
 531              		.global	can_std_transmit
 532              		.syntax unified
 533              		.code	16
 534              		.thumb_func
 536              	can_std_transmit:
 537              	.LVL29:
 538              	.LFB43:
 162:Core/Src/main.c ****   while (HAL_CAN_AddTxMessage(&hcan, &(txh_std[sensor]), ((uint8_t*) (adc_data + sensor)) + 1, &txM
 539              		.loc 1 162 39 is_stmt 1 view -0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 162:Core/Src/main.c ****   while (HAL_CAN_AddTxMessage(&hcan, &(txh_std[sensor]), ((uint8_t*) (adc_data + sensor)) + 1, &txM
 543              		.loc 1 162 39 is_stmt 0 view .LVU159
 544 0000 10B5     		push	{r4, lr}
 545              		.cfi_def_cfa_offset 8
 546              		.cfi_offset 4, -8
 547              		.cfi_offset 14, -4
 548 0002 0400     		movs	r4, r0
 163:Core/Src/main.c ****     // too many messages! FIXME
 549              		.loc 1 163 3 is_stmt 1 view .LVU160
 163:Core/Src/main.c ****     // too many messages! FIXME
 550              		.loc 1 163 9 is_stmt 0 view .LVU161
 551 0004 02E0     		b	.L17
 552              	.LVL30:
 553              	.L18:
 165:Core/Src/main.c ****   } 
 554              		.loc 1 165 5 is_stmt 1 view .LVU162
 555 0006 8020     		movs	r0, #128
 556 0008 FFF7FEFF 		bl	delay_us
 557              	.LVL31:
 558              	.L17:
 163:Core/Src/main.c ****     // too many messages! FIXME
 559              		.loc 1 163 108 view .LVU163
 163:Core/Src/main.c ****     // too many messages! FIXME
 560              		.loc 1 163 38 is_stmt 0 view .LVU164
 561 000c 6100     		lsls	r1, r4, #1
 562 000e 0919     		adds	r1, r1, r4
 563 0010 C900     		lsls	r1, r1, #3
 564 0012 064B     		ldr	r3, .L19
 565 0014 C918     		adds	r1, r1, r3
 163:Core/Src/main.c ****     // too many messages! FIXME
 566              		.loc 1 163 80 view .LVU165
 567 0016 A200     		lsls	r2, r4, #2
 163:Core/Src/main.c ****     // too many messages! FIXME
 568              		.loc 1 163 91 view .LVU166
 569 0018 0132     		adds	r2, r2, #1
 163:Core/Src/main.c ****     // too many messages! FIXME
 570              		.loc 1 163 10 view .LVU167
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 26


 571 001a 054B     		ldr	r3, .L19+4
 572 001c 0548     		ldr	r0, .L19+8
 573 001e 1218     		adds	r2, r2, r0
 574 0020 0548     		ldr	r0, .L19+12
 575 0022 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 576              	.LVL32:
 163:Core/Src/main.c ****     // too many messages! FIXME
 577              		.loc 1 163 108 view .LVU168
 578 0026 0028     		cmp	r0, #0
 579 0028 EDD1     		bne	.L18
 167:Core/Src/main.c **** 
 580              		.loc 1 167 1 view .LVU169
 581              		@ sp needed
 582 002a 10BD     		pop	{r4, pc}
 583              	.L20:
 584              		.align	2
 585              	.L19:
 586 002c 00000000 		.word	txh_std
 587 0030 00000000 		.word	txMailbox
 588 0034 00000000 		.word	adc_data
 589 0038 00000000 		.word	hcan
 590              		.cfi_endproc
 591              	.LFE43:
 593              		.section	.text.can_nst_transmit,"ax",%progbits
 594              		.align	1
 595              		.global	can_nst_transmit
 596              		.syntax unified
 597              		.code	16
 598              		.thumb_func
 600              	can_nst_transmit:
 601              	.LVL33:
 602              	.LFB44:
 169:Core/Src/main.c ****   txh_nst.ExtId = nst_addr_base | nst_state | cmd;
 603              		.loc 1 169 49 is_stmt 1 view -0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 169:Core/Src/main.c ****   txh_nst.ExtId = nst_addr_base | nst_state | cmd;
 607              		.loc 1 169 49 is_stmt 0 view .LVU171
 608 0000 10B5     		push	{r4, lr}
 609              		.cfi_def_cfa_offset 8
 610              		.cfi_offset 4, -8
 611              		.cfi_offset 14, -4
 170:Core/Src/main.c ****   // right now we can't transmit too many messages too quickly or they will be lost
 612              		.loc 1 170 3 is_stmt 1 view .LVU172
 170:Core/Src/main.c ****   // right now we can't transmit too many messages too quickly or they will be lost
 613              		.loc 1 170 33 is_stmt 0 view .LVU173
 614 0002 084B     		ldr	r3, .L24
 615 0004 1B78     		ldrb	r3, [r3]
 616 0006 084A     		ldr	r2, .L24+4
 617 0008 1268     		ldr	r2, [r2]
 618 000a 1343     		orrs	r3, r2
 170:Core/Src/main.c ****   // right now we can't transmit too many messages too quickly or they will be lost
 619              		.loc 1 170 45 view .LVU174
 620 000c 1843     		orrs	r0, r3
 621              	.LVL34:
 170:Core/Src/main.c ****   // right now we can't transmit too many messages too quickly or they will be lost
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 27


 622              		.loc 1 170 17 view .LVU175
 623 000e 0749     		ldr	r1, .L24+8
 624              	.LVL35:
 170:Core/Src/main.c ****   // right now we can't transmit too many messages too quickly or they will be lost
 625              		.loc 1 170 17 view .LVU176
 626 0010 4860     		str	r0, [r1, #4]
 173:Core/Src/main.c ****     // too many messages! FIXME
 627              		.loc 1 173 3 is_stmt 1 view .LVU177
 173:Core/Src/main.c ****     // too many messages! FIXME
 628              		.loc 1 173 7 is_stmt 0 view .LVU178
 629 0012 074B     		ldr	r3, .L24+12
 630 0014 074A     		ldr	r2, .L24+16
 631 0016 0848     		ldr	r0, .L24+20
 632 0018 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 633              	.LVL36:
 173:Core/Src/main.c ****     // too many messages! FIXME
 634              		.loc 1 173 6 view .LVU179
 635 001c 0028     		cmp	r0, #0
 636 001e 00D0     		beq	.L21
 637              	.L23:
 175:Core/Src/main.c ****   }
 638              		.loc 1 175 5 is_stmt 1 discriminator 1 view .LVU180
 175:Core/Src/main.c ****   }
 639              		.loc 1 175 11 discriminator 1 view .LVU181
 640 0020 FEE7     		b	.L23
 641              	.L21:
 177:Core/Src/main.c **** 
 642              		.loc 1 177 1 is_stmt 0 view .LVU182
 643              		@ sp needed
 644 0022 10BD     		pop	{r4, pc}
 645              	.L25:
 646              		.align	2
 647              	.L24:
 648 0024 00000000 		.word	nst_state
 649 0028 00000000 		.word	nst_addr_base
 650 002c 00000000 		.word	txh_nst
 651 0030 00000000 		.word	txMailbox
 652 0034 00000000 		.word	tx_nst_data
 653 0038 00000000 		.word	hcan
 654              		.cfi_endproc
 655              	.LFE44:
 657              		.section	.text.can_tx_transmit_timer_handler,"ax",%progbits
 658              		.align	1
 659              		.global	can_tx_transmit_timer_handler
 660              		.syntax unified
 661              		.code	16
 662              		.thumb_func
 664              	can_tx_transmit_timer_handler:
 665              	.LFB45:
 179:Core/Src/main.c ****   can_std_transmit(can_std_channel);
 666              		.loc 1 179 38 is_stmt 1 view -0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 0
 669              		@ frame_needed = 0, uses_anonymous_args = 0
 670 0000 10B5     		push	{r4, lr}
 671              		.cfi_def_cfa_offset 8
 672              		.cfi_offset 4, -8
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 28


 673              		.cfi_offset 14, -4
 180:Core/Src/main.c ****   can_std_channel++;
 674              		.loc 1 180 3 view .LVU184
 675 0002 064C     		ldr	r4, .L27
 676 0004 2078     		ldrb	r0, [r4]
 677 0006 FFF7FEFF 		bl	can_std_transmit
 678              	.LVL37:
 181:Core/Src/main.c ****   can_std_channel %= 4;
 679              		.loc 1 181 3 view .LVU185
 181:Core/Src/main.c ****   can_std_channel %= 4;
 680              		.loc 1 181 18 is_stmt 0 view .LVU186
 681 000a 2378     		ldrb	r3, [r4]
 682 000c 0133     		adds	r3, r3, #1
 683 000e DBB2     		uxtb	r3, r3
 684 0010 2370     		strb	r3, [r4]
 182:Core/Src/main.c **** }
 685              		.loc 1 182 3 is_stmt 1 view .LVU187
 182:Core/Src/main.c **** }
 686              		.loc 1 182 19 is_stmt 0 view .LVU188
 687 0012 0322     		movs	r2, #3
 688 0014 1340     		ands	r3, r2
 689 0016 2370     		strb	r3, [r4]
 183:Core/Src/main.c **** 
 690              		.loc 1 183 1 view .LVU189
 691              		@ sp needed
 692 0018 10BD     		pop	{r4, pc}
 693              	.L28:
 694 001a C046     		.align	2
 695              	.L27:
 696 001c 00000000 		.word	can_std_channel
 697              		.cfi_endproc
 698              	.LFE45:
 700              		.section	.text.can_rx_handler,"ax",%progbits
 701              		.align	1
 702              		.global	can_rx_handler
 703              		.syntax unified
 704              		.code	16
 705              		.thumb_func
 707              	can_rx_handler:
 708              	.LFB46:
 185:Core/Src/main.c ****   // handle various commands
 709              		.loc 1 185 23 is_stmt 1 view -0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 0
 712              		@ frame_needed = 0, uses_anonymous_args = 0
 713              		@ link register save eliminated.
 188:Core/Src/main.c **** 
 714              		.loc 1 188 1 view .LVU191
 715              		@ sp needed
 716 0000 7047     		bx	lr
 717              		.cfi_endproc
 718              	.LFE46:
 720              		.section	.text.ads131m04_transfer_word,"ax",%progbits
 721              		.align	1
 722              		.global	ads131m04_transfer_word
 723              		.syntax unified
 724              		.code	16
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 29


 725              		.thumb_func
 727              	ads131m04_transfer_word:
 728              	.LVL38:
 729              	.LFB47:
 190:Core/Src/main.c ****   uint8_t lower = word & 0xff;
 730              		.loc 1 190 49 view -0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 8
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 190:Core/Src/main.c ****   uint8_t lower = word & 0xff;
 734              		.loc 1 190 49 is_stmt 0 view .LVU193
 735 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 736              		.cfi_def_cfa_offset 20
 737              		.cfi_offset 4, -20
 738              		.cfi_offset 5, -16
 739              		.cfi_offset 6, -12
 740              		.cfi_offset 7, -8
 741              		.cfi_offset 14, -4
 742 0002 C646     		mov	lr, r8
 743 0004 00B5     		push	{lr}
 744              		.cfi_def_cfa_offset 24
 745              		.cfi_offset 8, -24
 746 0006 84B0     		sub	sp, sp, #16
 747              		.cfi_def_cfa_offset 40
 191:Core/Src/main.c ****   uint8_t upper = word >> 8;
 748              		.loc 1 191 3 is_stmt 1 view .LVU194
 191:Core/Src/main.c ****   uint8_t upper = word >> 8;
 749              		.loc 1 191 11 is_stmt 0 view .LVU195
 750 0008 0F23     		movs	r3, #15
 751 000a 6B44     		add	r3, r3, sp
 752 000c 9846     		mov	r8, r3
 753 000e 1870     		strb	r0, [r3]
 192:Core/Src/main.c ****   uint8_t zero = 0;
 754              		.loc 1 192 3 is_stmt 1 view .LVU196
 192:Core/Src/main.c ****   uint8_t zero = 0;
 755              		.loc 1 192 11 is_stmt 0 view .LVU197
 756 0010 0E21     		movs	r1, #14
 757 0012 6944     		add	r1, r1, sp
 758 0014 000A     		lsrs	r0, r0, #8
 759              	.LVL39:
 192:Core/Src/main.c ****   uint8_t zero = 0;
 760              		.loc 1 192 11 view .LVU198
 761 0016 0870     		strb	r0, [r1]
 193:Core/Src/main.c ****   uint8_t recv[3];
 762              		.loc 1 193 3 is_stmt 1 view .LVU199
 193:Core/Src/main.c ****   uint8_t recv[3];
 763              		.loc 1 193 11 is_stmt 0 view .LVU200
 764 0018 0D27     		movs	r7, #13
 765 001a 6F44     		add	r7, r7, sp
 766 001c 0026     		movs	r6, #0
 767 001e 3E70     		strb	r6, [r7]
 194:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &upper, recv, 1, 0.1); // CMD
 768              		.loc 1 194 3 is_stmt 1 view .LVU201
 195:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &lower, recv+1, 1, 0.1);
 769              		.loc 1 195 3 view .LVU202
 770 0020 02AC     		add	r4, sp, #8
 771 0022 114D     		ldr	r5, .L31
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 30


 772 0024 0096     		str	r6, [sp]
 773 0026 0123     		movs	r3, #1
 774 0028 2200     		movs	r2, r4
 775 002a 2800     		movs	r0, r5
 776 002c FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 777              	.LVL40:
 196:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &zero, recv+2, 1, 0.1);
 778              		.loc 1 196 3 view .LVU203
 779 0030 0096     		str	r6, [sp]
 780 0032 0123     		movs	r3, #1
 781 0034 0922     		movs	r2, #9
 782 0036 6A44     		add	r2, r2, sp
 783 0038 4146     		mov	r1, r8
 784 003a 2800     		movs	r0, r5
 785 003c FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 786              	.LVL41:
 197:Core/Src/main.c ****   return (recv[0] << 16) | (recv[1] << 8) | recv[2];
 787              		.loc 1 197 3 view .LVU204
 788 0040 0096     		str	r6, [sp]
 789 0042 0123     		movs	r3, #1
 790 0044 0A22     		movs	r2, #10
 791 0046 6A44     		add	r2, r2, sp
 792 0048 3900     		movs	r1, r7
 793 004a 2800     		movs	r0, r5
 794 004c FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 795              	.LVL42:
 198:Core/Src/main.c **** }
 796              		.loc 1 198 3 view .LVU205
 198:Core/Src/main.c **** }
 797              		.loc 1 198 15 is_stmt 0 view .LVU206
 798 0050 2078     		ldrb	r0, [r4]
 198:Core/Src/main.c **** }
 799              		.loc 1 198 19 view .LVU207
 800 0052 0004     		lsls	r0, r0, #16
 198:Core/Src/main.c **** }
 801              		.loc 1 198 33 view .LVU208
 802 0054 6378     		ldrb	r3, [r4, #1]
 198:Core/Src/main.c **** }
 803              		.loc 1 198 37 view .LVU209
 804 0056 1B02     		lsls	r3, r3, #8
 198:Core/Src/main.c **** }
 805              		.loc 1 198 26 view .LVU210
 806 0058 1843     		orrs	r0, r3
 198:Core/Src/main.c **** }
 807              		.loc 1 198 49 view .LVU211
 808 005a A378     		ldrb	r3, [r4, #2]
 198:Core/Src/main.c **** }
 809              		.loc 1 198 43 view .LVU212
 810 005c 1843     		orrs	r0, r3
 199:Core/Src/main.c **** 
 811              		.loc 1 199 1 view .LVU213
 812 005e 04B0     		add	sp, sp, #16
 813              		@ sp needed
 814 0060 80BC     		pop	{r7}
 815 0062 B846     		mov	r8, r7
 816 0064 F0BD     		pop	{r4, r5, r6, r7, pc}
 817              	.L32:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 31


 818 0066 C046     		.align	2
 819              	.L31:
 820 0068 00000000 		.word	hspi1
 821              		.cfi_endproc
 822              	.LFE47:
 824              		.section	.text.ads131m04_transfer_frame,"ax",%progbits
 825              		.align	1
 826              		.global	ads131m04_transfer_frame
 827              		.syntax unified
 828              		.code	16
 829              		.thumb_func
 831              	ads131m04_transfer_frame:
 832              	.LVL43:
 833              	.LFB48:
 201:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 834              		.loc 1 201 85 is_stmt 1 view -0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 0, uses_anonymous_args = 0
 201:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 838              		.loc 1 201 85 is_stmt 0 view .LVU215
 839 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 840              		.cfi_def_cfa_offset 24
 841              		.cfi_offset 3, -24
 842              		.cfi_offset 4, -20
 843              		.cfi_offset 5, -16
 844              		.cfi_offset 6, -12
 845              		.cfi_offset 7, -8
 846              		.cfi_offset 14, -4
 847 0002 0700     		movs	r7, r0
 848 0004 0E00     		movs	r6, r1
 202:Core/Src/main.c ****   
 849              		.loc 1 202 3 is_stmt 1 view .LVU216
 850 0006 9020     		movs	r0, #144
 851              	.LVL44:
 202:Core/Src/main.c ****   
 852              		.loc 1 202 3 is_stmt 0 view .LVU217
 853 0008 0022     		movs	r2, #0
 854              	.LVL45:
 202:Core/Src/main.c ****   
 855              		.loc 1 202 3 view .LVU218
 856 000a 1021     		movs	r1, #16
 857              	.LVL46:
 202:Core/Src/main.c ****   
 858              		.loc 1 202 3 view .LVU219
 859 000c C005     		lsls	r0, r0, #23
 860 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 861              	.LVL47:
 204:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 862              		.loc 1 204 3 is_stmt 1 view .LVU220
 863              	.LBB8:
 204:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 864              		.loc 1 204 8 view .LVU221
 204:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 865              		.loc 1 204 16 is_stmt 0 view .LVU222
 866 0012 0024     		movs	r4, #0
 204:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 32


 867              		.loc 1 204 3 view .LVU223
 868 0014 08E0     		b	.L34
 869              	.LVL48:
 870              	.L35:
 205:Core/Src/main.c ****   }
 871              		.loc 1 205 5 is_stmt 1 discriminator 3 view .LVU224
 205:Core/Src/main.c ****   }
 872              		.loc 1 205 43 is_stmt 0 discriminator 3 view .LVU225
 873 0016 6300     		lsls	r3, r4, #1
 205:Core/Src/main.c ****   }
 874              		.loc 1 205 8 discriminator 3 view .LVU226
 875 0018 A500     		lsls	r5, r4, #2
 876 001a 7D19     		adds	r5, r7, r5
 205:Core/Src/main.c ****   }
 877              		.loc 1 205 14 discriminator 3 view .LVU227
 878 001c F05A     		ldrh	r0, [r6, r3]
 879 001e FFF7FEFF 		bl	ads131m04_transfer_word
 880              	.LVL49:
 205:Core/Src/main.c ****   }
 881              		.loc 1 205 12 discriminator 3 view .LVU228
 882 0022 2860     		str	r0, [r5]
 204:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 883              		.loc 1 204 31 is_stmt 1 discriminator 3 view .LVU229
 884 0024 0134     		adds	r4, r4, #1
 885              	.LVL50:
 204:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 886              		.loc 1 204 31 is_stmt 0 discriminator 3 view .LVU230
 887 0026 E4B2     		uxtb	r4, r4
 888              	.LVL51:
 889              	.L34:
 204:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 890              		.loc 1 204 25 is_stmt 1 discriminator 1 view .LVU231
 891 0028 052C     		cmp	r4, #5
 892 002a F4D9     		bls	.L35
 893              	.LBE8:
 208:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 894              		.loc 1 208 3 view .LVU232
 895 002c 0420     		movs	r0, #4
 896 002e FFF7FEFF 		bl	delay_us
 897              	.LVL52:
 209:Core/Src/main.c **** }
 898              		.loc 1 209 3 view .LVU233
 899 0032 9020     		movs	r0, #144
 900 0034 0122     		movs	r2, #1
 901 0036 1021     		movs	r1, #16
 902 0038 C005     		lsls	r0, r0, #23
 903 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 904              	.LVL53:
 210:Core/Src/main.c **** 
 905              		.loc 1 210 1 is_stmt 0 view .LVU234
 906              		@ sp needed
 907              	.LVL54:
 908              	.LVL55:
 909              	.LVL56:
 210:Core/Src/main.c **** 
 910              		.loc 1 210 1 view .LVU235
 911 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 33


 912              		.cfi_endproc
 913              	.LFE48:
 915              		.section	.text.ads131m04_adc_format_convert,"ax",%progbits
 916              		.align	1
 917              		.global	ads131m04_adc_format_convert
 918              		.syntax unified
 919              		.code	16
 920              		.thumb_func
 922              	ads131m04_adc_format_convert:
 923              	.LVL57:
 924              	.LFB49:
 212:Core/Src/main.c ****   return ((data & 0x800000) ? -0x800000 : 0x000000) + (data & 0x7FFFFF);
 925              		.loc 1 212 51 is_stmt 1 view -0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 0
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929              		@ link register save eliminated.
 213:Core/Src/main.c **** }
 930              		.loc 1 213 3 view .LVU237
 213:Core/Src/main.c **** }
 931              		.loc 1 213 17 is_stmt 0 view .LVU238
 932 0000 8023     		movs	r3, #128
 933 0002 1B04     		lsls	r3, r3, #16
 934 0004 0200     		movs	r2, r0
 935 0006 1A40     		ands	r2, r3
 213:Core/Src/main.c **** }
 936              		.loc 1 213 41 view .LVU239
 937 0008 1842     		tst	r0, r3
 938 000a 00D0     		beq	.L37
 939 000c 024A     		ldr	r2, .L38
 940              	.L37:
 213:Core/Src/main.c **** }
 941              		.loc 1 213 61 discriminator 4 view .LVU240
 942 000e 4002     		lsls	r0, r0, #9
 943              	.LVL58:
 213:Core/Src/main.c **** }
 944              		.loc 1 213 61 discriminator 4 view .LVU241
 945 0010 400A     		lsrs	r0, r0, #9
 213:Core/Src/main.c **** }
 946              		.loc 1 213 53 discriminator 4 view .LVU242
 947 0012 8018     		adds	r0, r0, r2
 214:Core/Src/main.c **** 
 948              		.loc 1 214 1 discriminator 4 view .LVU243
 949              		@ sp needed
 950 0014 7047     		bx	lr
 951              	.L39:
 952 0016 C046     		.align	2
 953              	.L38:
 954 0018 000080FF 		.word	-8388608
 955              		.cfi_endproc
 956              	.LFE49:
 958              		.section	.text.ads131m04_read_adc_nonblocking,"ax",%progbits
 959              		.align	1
 960              		.global	ads131m04_read_adc_nonblocking
 961              		.syntax unified
 962              		.code	16
 963              		.thumb_func
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 34


 965              	ads131m04_read_adc_nonblocking:
 966              	.LVL59:
 967              	.LFB50:
 216:Core/Src/main.c ****   uint32_t recv[12];
 968              		.loc 1 216 51 is_stmt 1 view -0
 969              		.cfi_startproc
 970              		@ args = 0, pretend = 0, frame = 64
 971              		@ frame_needed = 0, uses_anonymous_args = 0
 216:Core/Src/main.c ****   uint32_t recv[12];
 972              		.loc 1 216 51 is_stmt 0 view .LVU245
 973 0000 10B5     		push	{r4, lr}
 974              		.cfi_def_cfa_offset 8
 975              		.cfi_offset 4, -8
 976              		.cfi_offset 14, -4
 977 0002 90B0     		sub	sp, sp, #64
 978              		.cfi_def_cfa_offset 72
 979 0004 0400     		movs	r4, r0
 217:Core/Src/main.c ****   uint16_t words[6] = {0, 0, 0, 0, 0, 0};
 980              		.loc 1 217 3 is_stmt 1 view .LVU246
 218:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 981              		.loc 1 218 3 view .LVU247
 218:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 982              		.loc 1 218 12 is_stmt 0 view .LVU248
 983 0006 0C22     		movs	r2, #12
 984 0008 0021     		movs	r1, #0
 985 000a 01A8     		add	r0, sp, #4
 986              	.LVL60:
 218:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 987              		.loc 1 218 12 view .LVU249
 988 000c FFF7FEFF 		bl	memset
 989              	.LVL61:
 219:Core/Src/main.c ****   out[0] = ads131m04_adc_format_convert(recv[1]);
 990              		.loc 1 219 3 is_stmt 1 view .LVU250
 991 0010 0022     		movs	r2, #0
 992 0012 01A9     		add	r1, sp, #4
 993 0014 04A8     		add	r0, sp, #16
 994 0016 FFF7FEFF 		bl	ads131m04_transfer_frame
 995              	.LVL62:
 220:Core/Src/main.c ****   out[1] = ads131m04_adc_format_convert(recv[2]);
 996              		.loc 1 220 3 view .LVU251
 220:Core/Src/main.c ****   out[1] = ads131m04_adc_format_convert(recv[2]);
 997              		.loc 1 220 45 is_stmt 0 view .LVU252
 998 001a 0598     		ldr	r0, [sp, #20]
 220:Core/Src/main.c ****   out[1] = ads131m04_adc_format_convert(recv[2]);
 999              		.loc 1 220 12 view .LVU253
 1000 001c FFF7FEFF 		bl	ads131m04_adc_format_convert
 1001              	.LVL63:
 220:Core/Src/main.c ****   out[1] = ads131m04_adc_format_convert(recv[2]);
 1002              		.loc 1 220 10 view .LVU254
 1003 0020 2060     		str	r0, [r4]
 221:Core/Src/main.c ****   out[2] = ads131m04_adc_format_convert(recv[3]);
 1004              		.loc 1 221 3 is_stmt 1 view .LVU255
 221:Core/Src/main.c ****   out[2] = ads131m04_adc_format_convert(recv[3]);
 1005              		.loc 1 221 45 is_stmt 0 view .LVU256
 1006 0022 0698     		ldr	r0, [sp, #24]
 221:Core/Src/main.c ****   out[2] = ads131m04_adc_format_convert(recv[3]);
 1007              		.loc 1 221 12 view .LVU257
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 35


 1008 0024 FFF7FEFF 		bl	ads131m04_adc_format_convert
 1009              	.LVL64:
 221:Core/Src/main.c ****   out[2] = ads131m04_adc_format_convert(recv[3]);
 1010              		.loc 1 221 10 view .LVU258
 1011 0028 6060     		str	r0, [r4, #4]
 222:Core/Src/main.c ****   out[3] = ads131m04_adc_format_convert(recv[4]);
 1012              		.loc 1 222 3 is_stmt 1 view .LVU259
 222:Core/Src/main.c ****   out[3] = ads131m04_adc_format_convert(recv[4]);
 1013              		.loc 1 222 45 is_stmt 0 view .LVU260
 1014 002a 0798     		ldr	r0, [sp, #28]
 222:Core/Src/main.c ****   out[3] = ads131m04_adc_format_convert(recv[4]);
 1015              		.loc 1 222 12 view .LVU261
 1016 002c FFF7FEFF 		bl	ads131m04_adc_format_convert
 1017              	.LVL65:
 222:Core/Src/main.c ****   out[3] = ads131m04_adc_format_convert(recv[4]);
 1018              		.loc 1 222 10 view .LVU262
 1019 0030 A060     		str	r0, [r4, #8]
 223:Core/Src/main.c **** }
 1020              		.loc 1 223 3 is_stmt 1 view .LVU263
 223:Core/Src/main.c **** }
 1021              		.loc 1 223 45 is_stmt 0 view .LVU264
 1022 0032 0898     		ldr	r0, [sp, #32]
 223:Core/Src/main.c **** }
 1023              		.loc 1 223 12 view .LVU265
 1024 0034 FFF7FEFF 		bl	ads131m04_adc_format_convert
 1025              	.LVL66:
 223:Core/Src/main.c **** }
 1026              		.loc 1 223 10 view .LVU266
 1027 0038 E060     		str	r0, [r4, #12]
 224:Core/Src/main.c **** 
 1028              		.loc 1 224 1 view .LVU267
 1029 003a 10B0     		add	sp, sp, #64
 1030              		@ sp needed
 1031              	.LVL67:
 224:Core/Src/main.c **** 
 1032              		.loc 1 224 1 view .LVU268
 1033 003c 10BD     		pop	{r4, pc}
 1034              		.cfi_endproc
 1035              	.LFE50:
 1037              		.section	.text.ads131m04_drdy_exti_handler,"ax",%progbits
 1038              		.align	1
 1039              		.global	ads131m04_drdy_exti_handler
 1040              		.syntax unified
 1041              		.code	16
 1042              		.thumb_func
 1044              	ads131m04_drdy_exti_handler:
 1045              	.LFB51:
 226:Core/Src/main.c ****   ads131m04_read_adc_nonblocking(adc_data);
 1046              		.loc 1 226 36 is_stmt 1 view -0
 1047              		.cfi_startproc
 1048              		@ args = 0, pretend = 0, frame = 0
 1049              		@ frame_needed = 0, uses_anonymous_args = 0
 1050 0000 10B5     		push	{r4, lr}
 1051              		.cfi_def_cfa_offset 8
 1052              		.cfi_offset 4, -8
 1053              		.cfi_offset 14, -4
 227:Core/Src/main.c **** }
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 36


 1054              		.loc 1 227 3 view .LVU270
 1055 0002 0248     		ldr	r0, .L42
 1056 0004 FFF7FEFF 		bl	ads131m04_read_adc_nonblocking
 1057              	.LVL68:
 228:Core/Src/main.c **** 
 1058              		.loc 1 228 1 is_stmt 0 view .LVU271
 1059              		@ sp needed
 1060 0008 10BD     		pop	{r4, pc}
 1061              	.L43:
 1062 000a C046     		.align	2
 1063              	.L42:
 1064 000c 00000000 		.word	adc_data
 1065              		.cfi_endproc
 1066              	.LFE51:
 1068              		.section	.text.ads131m04_cmd,"ax",%progbits
 1069              		.align	1
 1070              		.global	ads131m04_cmd
 1071              		.syntax unified
 1072              		.code	16
 1073              		.thumb_func
 1075              	ads131m04_cmd:
 1076              	.LVL69:
 1077              	.LFB52:
 230:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1078              		.loc 1 230 71 is_stmt 1 view -0
 1079              		.cfi_startproc
 1080              		@ args = 0, pretend = 0, frame = 24
 1081              		@ frame_needed = 0, uses_anonymous_args = 0
 230:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1082              		.loc 1 230 71 is_stmt 0 view .LVU273
 1083 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1084              		.cfi_def_cfa_offset 20
 1085              		.cfi_offset 4, -20
 1086              		.cfi_offset 5, -16
 1087              		.cfi_offset 6, -12
 1088              		.cfi_offset 7, -8
 1089              		.cfi_offset 14, -4
 1090 0002 87B0     		sub	sp, sp, #28
 1091              		.cfi_def_cfa_offset 48
 1092 0004 0700     		movs	r7, r0
 1093 0006 0D00     		movs	r5, r1
 1094 0008 1600     		movs	r6, r2
 231:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 1095              		.loc 1 231 3 is_stmt 1 view .LVU274
 1096 000a 0620     		movs	r0, #6
 1097              	.LVL70:
 231:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 1098              		.loc 1 231 3 is_stmt 0 view .LVU275
 1099 000c FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1100              	.LVL71:
 232:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 1101              		.loc 1 232 3 is_stmt 1 view .LVU276
 232:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 1102              		.loc 1 232 12 is_stmt 0 view .LVU277
 1103 0010 03AC     		add	r4, sp, #12
 1104 0012 2780     		strh	r7, [r4]
 1105 0014 0023     		movs	r3, #0
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 37


 1106 0016 6380     		strh	r3, [r4, #2]
 1107 0018 A380     		strh	r3, [r4, #4]
 1108 001a E380     		strh	r3, [r4, #6]
 1109 001c 2381     		strh	r3, [r4, #8]
 1110 001e 6381     		strh	r3, [r4, #10]
 233:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, tx_rx_delay);
 1111              		.loc 1 233 3 is_stmt 1 view .LVU278
 233:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, tx_rx_delay);
 1112              		.loc 1 233 12 is_stmt 0 view .LVU279
 1113 0020 0C22     		movs	r2, #12
 1114 0022 0021     		movs	r1, #0
 1115 0024 6846     		mov	r0, sp
 1116 0026 FFF7FEFF 		bl	memset
 1117              	.LVL72:
 234:Core/Src/main.c ****   ads131m04_transfer_frame(out+6, zeros, 0);
 1118              		.loc 1 234 3 is_stmt 1 view .LVU280
 1119 002a 3200     		movs	r2, r6
 1120 002c 2100     		movs	r1, r4
 1121 002e 2800     		movs	r0, r5
 1122 0030 FFF7FEFF 		bl	ads131m04_transfer_frame
 1123              	.LVL73:
 235:Core/Src/main.c ****   if (tx_rx_delay) delay_us(tx_rx_delay); 
 1124              		.loc 1 235 3 view .LVU281
 1125 0034 2800     		movs	r0, r5
 1126 0036 1830     		adds	r0, r0, #24
 1127 0038 0022     		movs	r2, #0
 1128 003a 6946     		mov	r1, sp
 1129 003c FFF7FEFF 		bl	ads131m04_transfer_frame
 1130              	.LVL74:
 236:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 1131              		.loc 1 236 3 view .LVU282
 236:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 1132              		.loc 1 236 6 is_stmt 0 view .LVU283
 1133 0040 002E     		cmp	r6, #0
 1134 0042 04D1     		bne	.L46
 1135              	.L45:
 237:Core/Src/main.c **** }
 1136              		.loc 1 237 3 is_stmt 1 view .LVU284
 1137 0044 0620     		movs	r0, #6
 1138 0046 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1139              	.LVL75:
 238:Core/Src/main.c **** 
 1140              		.loc 1 238 1 is_stmt 0 view .LVU285
 1141 004a 07B0     		add	sp, sp, #28
 1142              		@ sp needed
 1143              	.LVL76:
 238:Core/Src/main.c **** 
 1144              		.loc 1 238 1 view .LVU286
 1145 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 1146              	.LVL77:
 1147              	.L46:
 236:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 1148              		.loc 1 236 20 is_stmt 1 discriminator 1 view .LVU287
 1149 004e 3000     		movs	r0, r6
 1150 0050 FFF7FEFF 		bl	delay_us
 1151              	.LVL78:
 1152 0054 F6E7     		b	.L45
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 38


 1153              		.cfi_endproc
 1154              	.LFE52:
 1156              		.section	.text.ads131m04_reset,"ax",%progbits
 1157              		.align	1
 1158              		.global	ads131m04_reset
 1159              		.syntax unified
 1160              		.code	16
 1161              		.thumb_func
 1163              	ads131m04_reset:
 1164              	.LFB53:
 240:Core/Src/main.c ****     uint32_t recv[12];
 1165              		.loc 1 240 28 view -0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 48
 1168              		@ frame_needed = 0, uses_anonymous_args = 0
 1169 0000 00B5     		push	{lr}
 1170              		.cfi_def_cfa_offset 4
 1171              		.cfi_offset 14, -4
 1172 0002 8DB0     		sub	sp, sp, #52
 1173              		.cfi_def_cfa_offset 56
 241:Core/Src/main.c ****     ads131m04_cmd(0x0011, recv, 12); // reset time
 1174              		.loc 1 241 5 view .LVU289
 242:Core/Src/main.c ****     return recv[6] >> 8;
 1175              		.loc 1 242 5 view .LVU290
 1176 0004 0C22     		movs	r2, #12
 1177 0006 6946     		mov	r1, sp
 1178 0008 1120     		movs	r0, #17
 1179 000a FFF7FEFF 		bl	ads131m04_cmd
 1180              	.LVL79:
 243:Core/Src/main.c **** }
 1181              		.loc 1 243 5 view .LVU291
 243:Core/Src/main.c **** }
 1182              		.loc 1 243 16 is_stmt 0 view .LVU292
 1183 000e 0698     		ldr	r0, [sp, #24]
 243:Core/Src/main.c **** }
 1184              		.loc 1 243 20 view .LVU293
 1185 0010 000A     		lsrs	r0, r0, #8
 1186 0012 80B2     		uxth	r0, r0
 244:Core/Src/main.c **** 
 1187              		.loc 1 244 1 view .LVU294
 1188 0014 0DB0     		add	sp, sp, #52
 1189              		@ sp needed
 1190 0016 00BD     		pop	{pc}
 1191              		.cfi_endproc
 1192              	.LFE53:
 1194              		.section	.text.ads131m04_status,"ax",%progbits
 1195              		.align	1
 1196              		.global	ads131m04_status
 1197              		.syntax unified
 1198              		.code	16
 1199              		.thumb_func
 1201              	ads131m04_status:
 1202              	.LFB54:
 246:Core/Src/main.c ****     uint32_t recv[12];
 1203              		.loc 1 246 29 is_stmt 1 view -0
 1204              		.cfi_startproc
 1205              		@ args = 0, pretend = 0, frame = 48
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 39


 1206              		@ frame_needed = 0, uses_anonymous_args = 0
 1207 0000 00B5     		push	{lr}
 1208              		.cfi_def_cfa_offset 4
 1209              		.cfi_offset 14, -4
 1210 0002 8DB0     		sub	sp, sp, #52
 1211              		.cfi_def_cfa_offset 56
 247:Core/Src/main.c ****     ads131m04_cmd(0x0000, recv, 0);
 1212              		.loc 1 247 5 view .LVU296
 248:Core/Src/main.c ****     return recv[6] >> 8;
 1213              		.loc 1 248 5 view .LVU297
 1214 0004 0022     		movs	r2, #0
 1215 0006 6946     		mov	r1, sp
 1216 0008 0020     		movs	r0, #0
 1217 000a FFF7FEFF 		bl	ads131m04_cmd
 1218              	.LVL80:
 249:Core/Src/main.c **** }
 1219              		.loc 1 249 5 view .LVU298
 249:Core/Src/main.c **** }
 1220              		.loc 1 249 16 is_stmt 0 view .LVU299
 1221 000e 0698     		ldr	r0, [sp, #24]
 249:Core/Src/main.c **** }
 1222              		.loc 1 249 20 view .LVU300
 1223 0010 000A     		lsrs	r0, r0, #8
 1224 0012 80B2     		uxth	r0, r0
 250:Core/Src/main.c **** 
 1225              		.loc 1 250 1 view .LVU301
 1226 0014 0DB0     		add	sp, sp, #52
 1227              		@ sp needed
 1228 0016 00BD     		pop	{pc}
 1229              		.cfi_endproc
 1230              	.LFE54:
 1232              		.section	.text.ads131m04_standby,"ax",%progbits
 1233              		.align	1
 1234              		.global	ads131m04_standby
 1235              		.syntax unified
 1236              		.code	16
 1237              		.thumb_func
 1239              	ads131m04_standby:
 1240              	.LFB55:
 252:Core/Src/main.c ****     uint32_t recv[12];
 1241              		.loc 1 252 30 is_stmt 1 view -0
 1242              		.cfi_startproc
 1243              		@ args = 0, pretend = 0, frame = 48
 1244              		@ frame_needed = 0, uses_anonymous_args = 0
 1245 0000 00B5     		push	{lr}
 1246              		.cfi_def_cfa_offset 4
 1247              		.cfi_offset 14, -4
 1248 0002 8DB0     		sub	sp, sp, #52
 1249              		.cfi_def_cfa_offset 56
 253:Core/Src/main.c ****     ads131m04_cmd(0x0022, recv, 0);
 1250              		.loc 1 253 5 view .LVU303
 254:Core/Src/main.c ****     return recv[6] >> 8;
 1251              		.loc 1 254 5 view .LVU304
 1252 0004 0022     		movs	r2, #0
 1253 0006 6946     		mov	r1, sp
 1254 0008 2220     		movs	r0, #34
 1255 000a FFF7FEFF 		bl	ads131m04_cmd
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 40


 1256              	.LVL81:
 255:Core/Src/main.c **** }
 1257              		.loc 1 255 5 view .LVU305
 255:Core/Src/main.c **** }
 1258              		.loc 1 255 16 is_stmt 0 view .LVU306
 1259 000e 0698     		ldr	r0, [sp, #24]
 255:Core/Src/main.c **** }
 1260              		.loc 1 255 20 view .LVU307
 1261 0010 000A     		lsrs	r0, r0, #8
 1262 0012 80B2     		uxth	r0, r0
 256:Core/Src/main.c **** 
 1263              		.loc 1 256 1 view .LVU308
 1264 0014 0DB0     		add	sp, sp, #52
 1265              		@ sp needed
 1266 0016 00BD     		pop	{pc}
 1267              		.cfi_endproc
 1268              	.LFE55:
 1270              		.section	.text.ads131m04_wake,"ax",%progbits
 1271              		.align	1
 1272              		.global	ads131m04_wake
 1273              		.syntax unified
 1274              		.code	16
 1275              		.thumb_func
 1277              	ads131m04_wake:
 1278              	.LFB56:
 258:Core/Src/main.c ****     uint32_t recv[12];
 1279              		.loc 1 258 27 is_stmt 1 view -0
 1280              		.cfi_startproc
 1281              		@ args = 0, pretend = 0, frame = 48
 1282              		@ frame_needed = 0, uses_anonymous_args = 0
 1283 0000 00B5     		push	{lr}
 1284              		.cfi_def_cfa_offset 4
 1285              		.cfi_offset 14, -4
 1286 0002 8DB0     		sub	sp, sp, #52
 1287              		.cfi_def_cfa_offset 56
 259:Core/Src/main.c ****     ads131m04_cmd(0x0033, recv, 0);
 1288              		.loc 1 259 5 view .LVU310
 260:Core/Src/main.c ****     return recv[6] >> 8;
 1289              		.loc 1 260 5 view .LVU311
 1290 0004 0022     		movs	r2, #0
 1291 0006 6946     		mov	r1, sp
 1292 0008 3320     		movs	r0, #51
 1293 000a FFF7FEFF 		bl	ads131m04_cmd
 1294              	.LVL82:
 261:Core/Src/main.c **** }
 1295              		.loc 1 261 5 view .LVU312
 261:Core/Src/main.c **** }
 1296              		.loc 1 261 16 is_stmt 0 view .LVU313
 1297 000e 0698     		ldr	r0, [sp, #24]
 261:Core/Src/main.c **** }
 1298              		.loc 1 261 20 view .LVU314
 1299 0010 000A     		lsrs	r0, r0, #8
 1300 0012 80B2     		uxth	r0, r0
 262:Core/Src/main.c **** 
 1301              		.loc 1 262 1 view .LVU315
 1302 0014 0DB0     		add	sp, sp, #52
 1303              		@ sp needed
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 41


 1304 0016 00BD     		pop	{pc}
 1305              		.cfi_endproc
 1306              	.LFE56:
 1308              		.section	.text.ads131m04_lock,"ax",%progbits
 1309              		.align	1
 1310              		.global	ads131m04_lock
 1311              		.syntax unified
 1312              		.code	16
 1313              		.thumb_func
 1315              	ads131m04_lock:
 1316              	.LFB57:
 264:Core/Src/main.c ****     uint32_t recv[12];
 1317              		.loc 1 264 27 is_stmt 1 view -0
 1318              		.cfi_startproc
 1319              		@ args = 0, pretend = 0, frame = 48
 1320              		@ frame_needed = 0, uses_anonymous_args = 0
 1321 0000 00B5     		push	{lr}
 1322              		.cfi_def_cfa_offset 4
 1323              		.cfi_offset 14, -4
 1324 0002 8DB0     		sub	sp, sp, #52
 1325              		.cfi_def_cfa_offset 56
 265:Core/Src/main.c ****     ads131m04_cmd(0x0555, recv, 0);
 1326              		.loc 1 265 5 view .LVU317
 266:Core/Src/main.c ****     return recv[6] >> 8;
 1327              		.loc 1 266 5 view .LVU318
 1328 0004 0022     		movs	r2, #0
 1329 0006 6946     		mov	r1, sp
 1330 0008 0348     		ldr	r0, .L52
 1331 000a FFF7FEFF 		bl	ads131m04_cmd
 1332              	.LVL83:
 267:Core/Src/main.c **** }
 1333              		.loc 1 267 5 view .LVU319
 267:Core/Src/main.c **** }
 1334              		.loc 1 267 16 is_stmt 0 view .LVU320
 1335 000e 0698     		ldr	r0, [sp, #24]
 267:Core/Src/main.c **** }
 1336              		.loc 1 267 20 view .LVU321
 1337 0010 000A     		lsrs	r0, r0, #8
 1338 0012 80B2     		uxth	r0, r0
 268:Core/Src/main.c **** 
 1339              		.loc 1 268 1 view .LVU322
 1340 0014 0DB0     		add	sp, sp, #52
 1341              		@ sp needed
 1342 0016 00BD     		pop	{pc}
 1343              	.L53:
 1344              		.align	2
 1345              	.L52:
 1346 0018 55050000 		.word	1365
 1347              		.cfi_endproc
 1348              	.LFE57:
 1350              		.section	.text.ads131m04_unlock,"ax",%progbits
 1351              		.align	1
 1352              		.global	ads131m04_unlock
 1353              		.syntax unified
 1354              		.code	16
 1355              		.thumb_func
 1357              	ads131m04_unlock:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 42


 1358              	.LFB58:
 270:Core/Src/main.c ****     uint32_t recv[12];
 1359              		.loc 1 270 29 is_stmt 1 view -0
 1360              		.cfi_startproc
 1361              		@ args = 0, pretend = 0, frame = 48
 1362              		@ frame_needed = 0, uses_anonymous_args = 0
 1363 0000 00B5     		push	{lr}
 1364              		.cfi_def_cfa_offset 4
 1365              		.cfi_offset 14, -4
 1366 0002 8DB0     		sub	sp, sp, #52
 1367              		.cfi_def_cfa_offset 56
 271:Core/Src/main.c ****     ads131m04_cmd(0x0655, recv, 0);
 1368              		.loc 1 271 5 view .LVU324
 272:Core/Src/main.c ****     return recv[6] >> 8;
 1369              		.loc 1 272 5 view .LVU325
 1370 0004 0022     		movs	r2, #0
 1371 0006 6946     		mov	r1, sp
 1372 0008 0348     		ldr	r0, .L55
 1373 000a FFF7FEFF 		bl	ads131m04_cmd
 1374              	.LVL84:
 273:Core/Src/main.c **** }
 1375              		.loc 1 273 5 view .LVU326
 273:Core/Src/main.c **** }
 1376              		.loc 1 273 16 is_stmt 0 view .LVU327
 1377 000e 0698     		ldr	r0, [sp, #24]
 273:Core/Src/main.c **** }
 1378              		.loc 1 273 20 view .LVU328
 1379 0010 000A     		lsrs	r0, r0, #8
 1380 0012 80B2     		uxth	r0, r0
 274:Core/Src/main.c **** 
 1381              		.loc 1 274 1 view .LVU329
 1382 0014 0DB0     		add	sp, sp, #52
 1383              		@ sp needed
 1384 0016 00BD     		pop	{pc}
 1385              	.L56:
 1386              		.align	2
 1387              	.L55:
 1388 0018 55060000 		.word	1621
 1389              		.cfi_endproc
 1390              	.LFE58:
 1392              		.section	.text.ads131m04_rreg,"ax",%progbits
 1393              		.align	1
 1394              		.global	ads131m04_rreg
 1395              		.syntax unified
 1396              		.code	16
 1397              		.thumb_func
 1399              	ads131m04_rreg:
 1400              	.LVL85:
 1401              	.LFB59:
 277:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((reg & 0x3F) << 7);
 1402              		.loc 1 277 38 is_stmt 1 view -0
 1403              		.cfi_startproc
 1404              		@ args = 0, pretend = 0, frame = 48
 1405              		@ frame_needed = 0, uses_anonymous_args = 0
 277:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((reg & 0x3F) << 7);
 1406              		.loc 1 277 38 is_stmt 0 view .LVU331
 1407 0000 00B5     		push	{lr}
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 43


 1408              		.cfi_def_cfa_offset 4
 1409              		.cfi_offset 14, -4
 1410 0002 8DB0     		sub	sp, sp, #52
 1411              		.cfi_def_cfa_offset 56
 278:Core/Src/main.c ****     uint32_t recv[12];
 1412              		.loc 1 278 5 is_stmt 1 view .LVU332
 278:Core/Src/main.c ****     uint32_t recv[12];
 1413              		.loc 1 278 43 is_stmt 0 view .LVU333
 1414 0004 C301     		lsls	r3, r0, #7
 1415 0006 FC22     		movs	r2, #252
 1416 0008 5201     		lsls	r2, r2, #5
 1417 000a 1340     		ands	r3, r2
 278:Core/Src/main.c ****     uint32_t recv[12];
 1418              		.loc 1 278 27 view .LVU334
 1419 000c 0548     		ldr	r0, .L58
 1420              	.LVL86:
 278:Core/Src/main.c ****     uint32_t recv[12];
 1421              		.loc 1 278 27 view .LVU335
 1422 000e 1843     		orrs	r0, r3
 278:Core/Src/main.c ****     uint32_t recv[12];
 1423              		.loc 1 278 14 view .LVU336
 1424 0010 80B2     		uxth	r0, r0
 1425              	.LVL87:
 279:Core/Src/main.c ****     ads131m04_cmd(cmd, recv, 0);
 1426              		.loc 1 279 5 is_stmt 1 view .LVU337
 280:Core/Src/main.c ****     return recv[6] >> 8;
 1427              		.loc 1 280 5 view .LVU338
 1428 0012 0022     		movs	r2, #0
 1429 0014 6946     		mov	r1, sp
 1430 0016 FFF7FEFF 		bl	ads131m04_cmd
 1431              	.LVL88:
 281:Core/Src/main.c **** }
 1432              		.loc 1 281 5 view .LVU339
 281:Core/Src/main.c **** }
 1433              		.loc 1 281 16 is_stmt 0 view .LVU340
 1434 001a 0698     		ldr	r0, [sp, #24]
 281:Core/Src/main.c **** }
 1435              		.loc 1 281 20 view .LVU341
 1436 001c 000A     		lsrs	r0, r0, #8
 1437 001e 80B2     		uxth	r0, r0
 282:Core/Src/main.c **** 
 1438              		.loc 1 282 1 view .LVU342
 1439 0020 0DB0     		add	sp, sp, #52
 1440              		@ sp needed
 1441 0022 00BD     		pop	{pc}
 1442              	.L59:
 1443              		.align	2
 1444              	.L58:
 1445 0024 00A0FFFF 		.word	-24576
 1446              		.cfi_endproc
 1447              	.LFE59:
 1449              		.section	.text.ads131m04_rreg_multiple,"ax",%progbits
 1450              		.align	1
 1451              		.global	ads131m04_rreg_multiple
 1452              		.syntax unified
 1453              		.code	16
 1454              		.thumb_func
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 44


 1456              	ads131m04_rreg_multiple:
 1457              	.LVL89:
 1458              	.LFB60:
 287:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1459              		.loc 1 287 79 is_stmt 1 view -0
 1460              		.cfi_startproc
 1461              		@ args = 0, pretend = 0, frame = 16
 1462              		@ frame_needed = 0, uses_anonymous_args = 0
 287:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1463              		.loc 1 287 79 is_stmt 0 view .LVU344
 1464 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1465              		.cfi_def_cfa_offset 20
 1466              		.cfi_offset 4, -20
 1467              		.cfi_offset 5, -16
 1468              		.cfi_offset 6, -12
 1469              		.cfi_offset 7, -8
 1470              		.cfi_offset 14, -4
 1471 0002 85B0     		sub	sp, sp, #20
 1472              		.cfi_def_cfa_offset 40
 1473 0004 0400     		movs	r4, r0
 1474 0006 0D00     		movs	r5, r1
 1475 0008 1600     		movs	r6, r2
 288:Core/Src/main.c ****   // if count is 1 then just use regular rreg and duplicate out[6] to out[7]
 1476              		.loc 1 288 3 is_stmt 1 view .LVU345
 1477 000a 0620     		movs	r0, #6
 1478              	.LVL90:
 288:Core/Src/main.c ****   // if count is 1 then just use regular rreg and duplicate out[6] to out[7]
 1479              		.loc 1 288 3 is_stmt 0 view .LVU346
 1480 000c FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1481              	.LVL91:
 290:Core/Src/main.c ****   if (count == 1) {
 1482              		.loc 1 290 3 is_stmt 1 view .LVU347
 290:Core/Src/main.c ****   if (count == 1) {
 1483              		.loc 1 290 6 is_stmt 0 view .LVU348
 1484 0010 002D     		cmp	r5, #0
 1485 0012 49D0     		beq	.L60
 291:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((start_reg & 0x3F) << 7);
 1486              		.loc 1 291 3 is_stmt 1 view .LVU349
 291:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((start_reg & 0x3F) << 7);
 1487              		.loc 1 291 6 is_stmt 0 view .LVU350
 1488 0014 012D     		cmp	r5, #1
 1489 0016 23D0     		beq	.L67
 299:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 1490              		.loc 1 299 3 is_stmt 1 view .LVU351
 299:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 1491              		.loc 1 299 47 is_stmt 0 view .LVU352
 1492 0018 E401     		lsls	r4, r4, #7
 1493 001a FC23     		movs	r3, #252
 1494 001c 5B01     		lsls	r3, r3, #5
 1495 001e 1C40     		ands	r4, r3
 299:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 1496              		.loc 1 299 25 view .LVU353
 1497 0020 224A     		ldr	r2, .L68
 1498 0022 2243     		orrs	r2, r4
 299:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 1499              		.loc 1 299 63 view .LVU354
 1500 0024 6B1E     		subs	r3, r5, #1
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 45


 299:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 1501              		.loc 1 299 12 view .LVU355
 1502 0026 7F21     		movs	r1, #127
 1503 0028 0B40     		ands	r3, r1
 1504 002a 1343     		orrs	r3, r2
 1505              	.LVL92:
 300:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, 0);
 1506              		.loc 1 300 3 is_stmt 1 view .LVU356
 300:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, 0);
 1507              		.loc 1 300 12 is_stmt 0 view .LVU357
 1508 002c 01A9     		add	r1, sp, #4
 1509 002e 0B80     		strh	r3, [r1]
 1510 0030 0023     		movs	r3, #0
 1511              	.LVL93:
 300:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, 0);
 1512              		.loc 1 300 12 view .LVU358
 1513 0032 4B80     		strh	r3, [r1, #2]
 1514 0034 8B80     		strh	r3, [r1, #4]
 1515 0036 CB80     		strh	r3, [r1, #6]
 1516 0038 0B81     		strh	r3, [r1, #8]
 1517 003a 4B81     		strh	r3, [r1, #10]
 301:Core/Src/main.c **** 
 1518              		.loc 1 301 3 is_stmt 1 view .LVU359
 1519 003c 0022     		movs	r2, #0
 1520 003e 3000     		movs	r0, r6
 1521 0040 FFF7FEFF 		bl	ads131m04_transfer_frame
 1522              	.LVL94:
 304:Core/Src/main.c ****   
 1523              		.loc 1 304 3 view .LVU360
 1524 0044 9020     		movs	r0, #144
 1525 0046 0022     		movs	r2, #0
 1526 0048 1021     		movs	r1, #16
 1527 004a C005     		lsls	r0, r0, #23
 1528 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1529              	.LVL95:
 307:Core/Src/main.c ****   for (uint8_t i = 0; i < max; i++) {
 1530              		.loc 1 307 3 view .LVU361
 307:Core/Src/main.c ****   for (uint8_t i = 0; i < max; i++) {
 1531              		.loc 1 307 11 is_stmt 0 view .LVU362
 1532 0050 2F1C     		adds	r7, r5, #0
 1533 0052 032D     		cmp	r5, #3
 1534 0054 00D8     		bhi	.L63
 1535 0056 0427     		movs	r7, #4
 1536              	.L63:
 1537 0058 0237     		adds	r7, r7, #2
 1538 005a FFB2     		uxtb	r7, r7
 1539              	.LVL96:
 308:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1540              		.loc 1 308 3 is_stmt 1 view .LVU363
 1541              	.LBB9:
 308:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1542              		.loc 1 308 8 view .LVU364
 308:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1543              		.loc 1 308 16 is_stmt 0 view .LVU365
 1544 005c 0024     		movs	r4, #0
 1545              	.LVL97:
 308:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 46


 1546              		.loc 1 308 3 view .LVU366
 1547 005e 15E0     		b	.L64
 1548              	.LVL98:
 1549              	.L67:
 308:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1550              		.loc 1 308 3 view .LVU367
 1551              	.LBE9:
 1552              	.LBB10:
 292:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 1553              		.loc 1 292 5 is_stmt 1 view .LVU368
 292:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 1554              		.loc 1 292 49 is_stmt 0 view .LVU369
 1555 0060 E401     		lsls	r4, r4, #7
 1556 0062 FC23     		movs	r3, #252
 1557 0064 5B01     		lsls	r3, r3, #5
 1558 0066 1C40     		ands	r4, r3
 292:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 1559              		.loc 1 292 27 view .LVU370
 1560 0068 1048     		ldr	r0, .L68
 1561 006a 2043     		orrs	r0, r4
 292:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 1562              		.loc 1 292 14 view .LVU371
 1563 006c 80B2     		uxth	r0, r0
 1564              	.LVL99:
 293:Core/Src/main.c ****     out[7] = out[6];
 1565              		.loc 1 293 5 is_stmt 1 view .LVU372
 1566 006e 0022     		movs	r2, #0
 1567 0070 3100     		movs	r1, r6
 1568 0072 FFF7FEFF 		bl	ads131m04_cmd
 1569              	.LVL100:
 294:Core/Src/main.c ****     return;
 1570              		.loc 1 294 5 view .LVU373
 294:Core/Src/main.c ****     return;
 1571              		.loc 1 294 12 is_stmt 0 view .LVU374
 1572 0076 B369     		ldr	r3, [r6, #24]
 1573 0078 F361     		str	r3, [r6, #28]
 295:Core/Src/main.c ****   }
 1574              		.loc 1 295 5 is_stmt 1 view .LVU375
 1575 007a 15E0     		b	.L60
 1576              	.LVL101:
 1577              	.L65:
 295:Core/Src/main.c ****   }
 1578              		.loc 1 295 5 is_stmt 0 view .LVU376
 1579              	.LBE10:
 1580              	.LBB11:
 309:Core/Src/main.c ****   }
 1581              		.loc 1 309 5 is_stmt 1 discriminator 3 view .LVU377
 309:Core/Src/main.c ****   }
 1582              		.loc 1 309 8 is_stmt 0 discriminator 3 view .LVU378
 1583 007c A500     		lsls	r5, r4, #2
 1584 007e 7519     		adds	r5, r6, r5
 309:Core/Src/main.c ****   }
 1585              		.loc 1 309 14 discriminator 3 view .LVU379
 1586 0080 0020     		movs	r0, #0
 1587 0082 FFF7FEFF 		bl	ads131m04_transfer_word
 1588              	.LVL102:
 309:Core/Src/main.c ****   }
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 47


 1589              		.loc 1 309 12 discriminator 3 view .LVU380
 1590 0086 2860     		str	r0, [r5]
 308:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1591              		.loc 1 308 33 is_stmt 1 discriminator 3 view .LVU381
 1592 0088 0134     		adds	r4, r4, #1
 1593              	.LVL103:
 308:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1594              		.loc 1 308 33 is_stmt 0 discriminator 3 view .LVU382
 1595 008a E4B2     		uxtb	r4, r4
 1596              	.LVL104:
 1597              	.L64:
 308:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1598              		.loc 1 308 25 is_stmt 1 discriminator 1 view .LVU383
 1599 008c BC42     		cmp	r4, r7
 1600 008e F5D3     		bcc	.L65
 1601              	.LBE11:
 312:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 1602              		.loc 1 312 3 view .LVU384
 1603 0090 0420     		movs	r0, #4
 1604 0092 FFF7FEFF 		bl	delay_us
 1605              	.LVL105:
 313:Core/Src/main.c **** 
 1606              		.loc 1 313 3 view .LVU385
 1607 0096 9020     		movs	r0, #144
 1608 0098 0122     		movs	r2, #1
 1609 009a 1021     		movs	r1, #16
 1610 009c C005     		lsls	r0, r0, #23
 1611 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1612              	.LVL106:
 315:Core/Src/main.c **** }
 1613              		.loc 1 315 3 view .LVU386
 1614 00a2 0620     		movs	r0, #6
 1615 00a4 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1616              	.LVL107:
 1617              	.L60:
 316:Core/Src/main.c **** 
 1618              		.loc 1 316 1 is_stmt 0 view .LVU387
 1619 00a8 05B0     		add	sp, sp, #20
 1620              		@ sp needed
 1621              	.LVL108:
 316:Core/Src/main.c **** 
 1622              		.loc 1 316 1 view .LVU388
 1623 00aa F0BD     		pop	{r4, r5, r6, r7, pc}
 1624              	.L69:
 1625              		.align	2
 1626              	.L68:
 1627 00ac 00A0FFFF 		.word	-24576
 1628              		.cfi_endproc
 1629              	.LFE60:
 1631              		.section	.text.ads131m04_wreg,"ax",%progbits
 1632              		.align	1
 1633              		.global	ads131m04_wreg
 1634              		.syntax unified
 1635              		.code	16
 1636              		.thumb_func
 1638              	ads131m04_wreg:
 1639              	.LVL109:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 48


 1640              	.LFB61:
 319:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1641              		.loc 1 319 53 is_stmt 1 view -0
 1642              		.cfi_startproc
 1643              		@ args = 0, pretend = 0, frame = 72
 1644              		@ frame_needed = 0, uses_anonymous_args = 0
 319:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1645              		.loc 1 319 53 is_stmt 0 view .LVU390
 1646 0000 30B5     		push	{r4, r5, lr}
 1647              		.cfi_def_cfa_offset 12
 1648              		.cfi_offset 4, -12
 1649              		.cfi_offset 5, -8
 1650              		.cfi_offset 14, -4
 1651 0002 93B0     		sub	sp, sp, #76
 1652              		.cfi_def_cfa_offset 88
 1653 0004 0400     		movs	r4, r0
 1654 0006 0D00     		movs	r5, r1
 320:Core/Src/main.c ****   uint16_t cmd = 0x6000 | ((reg & 0x3F) << 7);
 1655              		.loc 1 320 3 is_stmt 1 view .LVU391
 1656 0008 0620     		movs	r0, #6
 1657              	.LVL110:
 320:Core/Src/main.c ****   uint16_t cmd = 0x6000 | ((reg & 0x3F) << 7);
 1658              		.loc 1 320 3 is_stmt 0 view .LVU392
 1659 000a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1660              	.LVL111:
 321:Core/Src/main.c ****   uint32_t recv[12];
 1661              		.loc 1 321 3 is_stmt 1 view .LVU393
 321:Core/Src/main.c ****   uint32_t recv[12];
 1662              		.loc 1 321 41 is_stmt 0 view .LVU394
 1663 000e E401     		lsls	r4, r4, #7
 1664 0010 FC23     		movs	r3, #252
 1665 0012 5B01     		lsls	r3, r3, #5
 1666 0014 1C40     		ands	r4, r3
 321:Core/Src/main.c ****   uint32_t recv[12];
 1667              		.loc 1 321 12 view .LVU395
 1668 0016 C023     		movs	r3, #192
 1669 0018 DB01     		lsls	r3, r3, #7
 1670 001a 2343     		orrs	r3, r4
 1671              	.LVL112:
 322:Core/Src/main.c ****   uint16_t words[6] = {cmd, data, 0, 0, 0, 0};
 1672              		.loc 1 322 3 is_stmt 1 view .LVU396
 323:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 1673              		.loc 1 323 3 view .LVU397
 323:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 1674              		.loc 1 323 12 is_stmt 0 view .LVU398
 1675 001c 03AC     		add	r4, sp, #12
 1676 001e 2380     		strh	r3, [r4]
 1677 0020 6580     		strh	r5, [r4, #2]
 1678 0022 0023     		movs	r3, #0
 1679              	.LVL113:
 323:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 1680              		.loc 1 323 12 view .LVU399
 1681 0024 A380     		strh	r3, [r4, #4]
 1682 0026 E380     		strh	r3, [r4, #6]
 1683 0028 2381     		strh	r3, [r4, #8]
 1684 002a 6381     		strh	r3, [r4, #10]
 324:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 49


 1685              		.loc 1 324 3 is_stmt 1 view .LVU400
 324:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 1686              		.loc 1 324 12 is_stmt 0 view .LVU401
 1687 002c 0C22     		movs	r2, #12
 1688 002e 0021     		movs	r1, #0
 1689 0030 6846     		mov	r0, sp
 1690 0032 FFF7FEFF 		bl	memset
 1691              	.LVL114:
 325:Core/Src/main.c ****   ads131m04_transfer_frame(recv+6, zeros, 0);
 1692              		.loc 1 325 3 is_stmt 1 view .LVU402
 1693 0036 0022     		movs	r2, #0
 1694 0038 2100     		movs	r1, r4
 1695 003a 06A8     		add	r0, sp, #24
 1696 003c FFF7FEFF 		bl	ads131m04_transfer_frame
 1697              	.LVL115:
 326:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 1698              		.loc 1 326 3 view .LVU403
 1699 0040 0022     		movs	r2, #0
 1700 0042 6946     		mov	r1, sp
 1701 0044 0CA8     		add	r0, sp, #48
 1702 0046 FFF7FEFF 		bl	ads131m04_transfer_frame
 1703              	.LVL116:
 327:Core/Src/main.c ****   return recv[6] >> 8;
 1704              		.loc 1 327 3 view .LVU404
 1705 004a 0620     		movs	r0, #6
 1706 004c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1707              	.LVL117:
 328:Core/Src/main.c **** }
 1708              		.loc 1 328 3 view .LVU405
 328:Core/Src/main.c **** }
 1709              		.loc 1 328 14 is_stmt 0 view .LVU406
 1710 0050 0C98     		ldr	r0, [sp, #48]
 328:Core/Src/main.c **** }
 1711              		.loc 1 328 18 view .LVU407
 1712 0052 000A     		lsrs	r0, r0, #8
 1713 0054 80B2     		uxth	r0, r0
 329:Core/Src/main.c **** 
 1714              		.loc 1 329 1 view .LVU408
 1715 0056 13B0     		add	sp, sp, #76
 1716              		@ sp needed
 1717 0058 30BD     		pop	{r4, r5, pc}
 1718              		.cfi_endproc
 1719              	.LFE61:
 1721              		.section	.text.ads131m04_wreg_multiple,"ax",%progbits
 1722              		.align	1
 1723              		.global	ads131m04_wreg_multiple
 1724              		.syntax unified
 1725              		.code	16
 1726              		.thumb_func
 1728              	ads131m04_wreg_multiple:
 1729              	.LVL118:
 1730              	.LFB62:
 332:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1731              		.loc 1 332 84 is_stmt 1 view -0
 1732              		.cfi_startproc
 1733              		@ args = 0, pretend = 0, frame = 64
 1734              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 50


 332:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1735              		.loc 1 332 84 is_stmt 0 view .LVU410
 1736 0000 70B5     		push	{r4, r5, r6, lr}
 1737              		.cfi_def_cfa_offset 16
 1738              		.cfi_offset 4, -16
 1739              		.cfi_offset 5, -12
 1740              		.cfi_offset 6, -8
 1741              		.cfi_offset 14, -4
 1742 0002 90B0     		sub	sp, sp, #64
 1743              		.cfi_def_cfa_offset 80
 1744 0004 0400     		movs	r4, r0
 1745 0006 0D00     		movs	r5, r1
 1746 0008 1600     		movs	r6, r2
 333:Core/Src/main.c ****   if (count == 0) return 0;
 1747              		.loc 1 333 3 is_stmt 1 view .LVU411
 1748 000a 0620     		movs	r0, #6
 1749              	.LVL119:
 333:Core/Src/main.c ****   if (count == 0) return 0;
 1750              		.loc 1 333 3 is_stmt 0 view .LVU412
 1751 000c FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1752              	.LVL120:
 334:Core/Src/main.c **** 
 1753              		.loc 1 334 3 is_stmt 1 view .LVU413
 334:Core/Src/main.c **** 
 1754              		.loc 1 334 6 is_stmt 0 view .LVU414
 1755 0010 002D     		cmp	r5, #0
 1756 0012 02D1     		bne	.L78
 334:Core/Src/main.c **** 
 1757              		.loc 1 334 26 view .LVU415
 1758 0014 0020     		movs	r0, #0
 1759              	.L72:
 366:Core/Src/main.c **** 
 1760              		.loc 1 366 1 view .LVU416
 1761 0016 10B0     		add	sp, sp, #64
 1762              		@ sp needed
 1763              	.LVL121:
 366:Core/Src/main.c **** 
 1764              		.loc 1 366 1 view .LVU417
 1765 0018 70BD     		pop	{r4, r5, r6, pc}
 1766              	.LVL122:
 1767              	.L78:
 336:Core/Src/main.c ****   // manually transfer the first frame
 1768              		.loc 1 336 3 is_stmt 1 view .LVU418
 336:Core/Src/main.c ****   // manually transfer the first frame
 1769              		.loc 1 336 47 is_stmt 0 view .LVU419
 1770 001a E401     		lsls	r4, r4, #7
 1771 001c FC23     		movs	r3, #252
 1772 001e 5B01     		lsls	r3, r3, #5
 1773 0020 1C40     		ands	r4, r3
 336:Core/Src/main.c ****   // manually transfer the first frame
 1774              		.loc 1 336 25 view .LVU420
 1775 0022 C022     		movs	r2, #192
 1776 0024 D201     		lsls	r2, r2, #7
 1777 0026 2243     		orrs	r2, r4
 336:Core/Src/main.c ****   // manually transfer the first frame
 1778              		.loc 1 336 63 view .LVU421
 1779 0028 6B1E     		subs	r3, r5, #1
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 51


 336:Core/Src/main.c ****   // manually transfer the first frame
 1780              		.loc 1 336 12 view .LVU422
 1781 002a 7F21     		movs	r1, #127
 1782 002c 1C00     		movs	r4, r3
 1783 002e 0C40     		ands	r4, r1
 1784 0030 1443     		orrs	r4, r2
 1785              	.LVL123:
 338:Core/Src/main.c **** 
 1786              		.loc 1 338 3 is_stmt 1 view .LVU423
 1787 0032 9020     		movs	r0, #144
 1788 0034 0022     		movs	r2, #0
 1789 0036 6F39     		subs	r1, r1, #111
 1790 0038 C005     		lsls	r0, r0, #23
 1791 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1792              	.LVL124:
 341:Core/Src/main.c **** 
 1793              		.loc 1 341 3 view .LVU424
 1794 003e 2000     		movs	r0, r4
 1795 0040 FFF7FEFF 		bl	ads131m04_transfer_word
 1796              	.LVL125:
 344:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1797              		.loc 1 344 3 view .LVU425
 1798              	.LBB12:
 344:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1799              		.loc 1 344 8 view .LVU426
 344:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1800              		.loc 1 344 16 is_stmt 0 view .LVU427
 1801 0044 0024     		movs	r4, #0
 1802              	.LVL126:
 344:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1803              		.loc 1 344 3 view .LVU428
 1804 0046 05E0     		b	.L73
 1805              	.LVL127:
 1806              	.L74:
 345:Core/Src/main.c ****   }
 1807              		.loc 1 345 5 is_stmt 1 discriminator 3 view .LVU429
 345:Core/Src/main.c ****   }
 1808              		.loc 1 345 33 is_stmt 0 discriminator 3 view .LVU430
 1809 0048 6300     		lsls	r3, r4, #1
 345:Core/Src/main.c ****   }
 1810              		.loc 1 345 5 discriminator 3 view .LVU431
 1811 004a F05A     		ldrh	r0, [r6, r3]
 1812 004c FFF7FEFF 		bl	ads131m04_transfer_word
 1813              	.LVL128:
 344:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1814              		.loc 1 344 35 is_stmt 1 discriminator 3 view .LVU432
 1815 0050 0134     		adds	r4, r4, #1
 1816              	.LVL129:
 344:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1817              		.loc 1 344 35 is_stmt 0 discriminator 3 view .LVU433
 1818 0052 E4B2     		uxtb	r4, r4
 1819              	.LVL130:
 1820              	.L73:
 344:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1821              		.loc 1 344 25 is_stmt 1 discriminator 1 view .LVU434
 1822 0054 AC42     		cmp	r4, r5
 1823 0056 F7D3     		bcc	.L74
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 52


 1824              	.LBE12:
 1825              	.LBB13:
 349:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1826              		.loc 1 349 15 is_stmt 0 view .LVU435
 1827 0058 0024     		movs	r4, #0
 1828              	.LVL131:
 349:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1829              		.loc 1 349 15 view .LVU436
 1830 005a 04E0     		b	.L75
 1831              	.LVL132:
 1832              	.L76:
 350:Core/Src/main.c ****   }
 1833              		.loc 1 350 5 is_stmt 1 discriminator 3 view .LVU437
 1834 005c 0020     		movs	r0, #0
 1835 005e FFF7FEFF 		bl	ads131m04_transfer_word
 1836              	.LVL133:
 349:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1837              		.loc 1 349 38 discriminator 3 view .LVU438
 1838 0062 0134     		adds	r4, r4, #1
 1839              	.LVL134:
 349:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1840              		.loc 1 349 38 is_stmt 0 discriminator 3 view .LVU439
 1841 0064 64B2     		sxtb	r4, r4
 1842              	.LVL135:
 1843              	.L75:
 349:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1844              		.loc 1 349 24 is_stmt 1 discriminator 1 view .LVU440
 349:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1845              		.loc 1 349 28 is_stmt 0 discriminator 1 view .LVU441
 1846 0066 0423     		movs	r3, #4
 1847 0068 5B1B     		subs	r3, r3, r5
 349:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1848              		.loc 1 349 24 discriminator 1 view .LVU442
 1849 006a 9C42     		cmp	r4, r3
 1850 006c F6DB     		blt	.L76
 1851              	.LBE13:
 354:Core/Src/main.c **** 
 1852              		.loc 1 354 3 is_stmt 1 view .LVU443
 1853 006e 0020     		movs	r0, #0
 1854 0070 FFF7FEFF 		bl	ads131m04_transfer_word
 1855              	.LVL136:
 356:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 1856              		.loc 1 356 3 view .LVU444
 1857 0074 0420     		movs	r0, #4
 1858 0076 FFF7FEFF 		bl	delay_us
 1859              	.LVL137:
 357:Core/Src/main.c **** 
 1860              		.loc 1 357 3 view .LVU445
 1861 007a 9020     		movs	r0, #144
 1862 007c 0122     		movs	r2, #1
 1863 007e 1021     		movs	r1, #16
 1864 0080 C005     		lsls	r0, r0, #23
 1865 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1866              	.LVL138:
 360:Core/Src/main.c ****   uint32_t recv[12];
 1867              		.loc 1 360 3 view .LVU446
 360:Core/Src/main.c ****   uint32_t recv[12];
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 53


 1868              		.loc 1 360 12 is_stmt 0 view .LVU447
 1869 0086 0C22     		movs	r2, #12
 1870 0088 0021     		movs	r1, #0
 1871 008a 0DA8     		add	r0, sp, #52
 1872 008c FFF7FEFF 		bl	memset
 1873              	.LVL139:
 361:Core/Src/main.c ****   ads131m04_transfer_frame(recv, zeros, 0);
 1874              		.loc 1 361 3 is_stmt 1 view .LVU448
 362:Core/Src/main.c **** 
 1875              		.loc 1 362 3 view .LVU449
 1876 0090 0022     		movs	r2, #0
 1877 0092 0DA9     		add	r1, sp, #52
 1878 0094 01A8     		add	r0, sp, #4
 1879 0096 FFF7FEFF 		bl	ads131m04_transfer_frame
 1880              	.LVL140:
 364:Core/Src/main.c ****   return recv[6] >> 8;  
 1881              		.loc 1 364 3 view .LVU450
 1882 009a 0620     		movs	r0, #6
 1883 009c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1884              	.LVL141:
 365:Core/Src/main.c **** }
 1885              		.loc 1 365 3 view .LVU451
 365:Core/Src/main.c **** }
 1886              		.loc 1 365 14 is_stmt 0 view .LVU452
 1887 00a0 0798     		ldr	r0, [sp, #28]
 365:Core/Src/main.c **** }
 1888              		.loc 1 365 18 view .LVU453
 1889 00a2 000A     		lsrs	r0, r0, #8
 1890 00a4 80B2     		uxth	r0, r0
 1891 00a6 B6E7     		b	.L72
 1892              		.cfi_endproc
 1893              	.LFE62:
 1895              		.section	.text.ads131m04_test,"ax",%progbits
 1896              		.align	1
 1897              		.global	ads131m04_test
 1898              		.syntax unified
 1899              		.code	16
 1900              		.thumb_func
 1902              	ads131m04_test:
 1903              	.LFB63:
 369:Core/Src/main.c ****   uint16_t id = ads131m04_rreg(0x00);
 1904              		.loc 1 369 26 is_stmt 1 view -0
 1905              		.cfi_startproc
 1906              		@ args = 0, pretend = 0, frame = 0
 1907              		@ frame_needed = 0, uses_anonymous_args = 0
 1908 0000 10B5     		push	{r4, lr}
 1909              		.cfi_def_cfa_offset 8
 1910              		.cfi_offset 4, -8
 1911              		.cfi_offset 14, -4
 370:Core/Src/main.c ****   return (id >> 8) == 0x24;
 1912              		.loc 1 370 3 view .LVU455
 370:Core/Src/main.c ****   return (id >> 8) == 0x24;
 1913              		.loc 1 370 17 is_stmt 0 view .LVU456
 1914 0002 0020     		movs	r0, #0
 1915 0004 FFF7FEFF 		bl	ads131m04_rreg
 1916              	.LVL142:
 371:Core/Src/main.c **** }
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 54


 1917              		.loc 1 371 3 is_stmt 1 view .LVU457
 371:Core/Src/main.c **** }
 1918              		.loc 1 371 20 is_stmt 0 view .LVU458
 1919 0008 000A     		lsrs	r0, r0, #8
 1920              	.LVL143:
 371:Core/Src/main.c **** }
 1921              		.loc 1 371 20 view .LVU459
 1922 000a 80B2     		uxth	r0, r0
 1923 000c 2438     		subs	r0, r0, #36
 1924 000e 4342     		rsbs	r3, r0, #0
 1925 0010 5841     		adcs	r0, r0, r3
 1926 0012 C0B2     		uxtb	r0, r0
 372:Core/Src/main.c **** 
 1927              		.loc 1 372 1 view .LVU460
 1928              		@ sp needed
 1929 0014 10BD     		pop	{r4, pc}
 1930              		.cfi_endproc
 1931              	.LFE63:
 1933              		.section	.text.adc_configure,"ax",%progbits
 1934              		.align	1
 1935              		.global	adc_configure
 1936              		.syntax unified
 1937              		.code	16
 1938              		.thumb_func
 1940              	adc_configure:
 1941              	.LFB64:
 375:Core/Src/main.c ****   if (!ads131m04_test()) return 0;
 1942              		.loc 1 375 25 is_stmt 1 view -0
 1943              		.cfi_startproc
 1944              		@ args = 0, pretend = 0, frame = 0
 1945              		@ frame_needed = 0, uses_anonymous_args = 0
 1946 0000 10B5     		push	{r4, lr}
 1947              		.cfi_def_cfa_offset 8
 1948              		.cfi_offset 4, -8
 1949              		.cfi_offset 14, -4
 376:Core/Src/main.c ****   uint16_t mode = 0x0110; // clear reset bit, disable all CRCs
 1950              		.loc 1 376 3 view .LVU462
 376:Core/Src/main.c ****   uint16_t mode = 0x0110; // clear reset bit, disable all CRCs
 1951              		.loc 1 376 8 is_stmt 0 view .LVU463
 1952 0002 FFF7FEFF 		bl	ads131m04_test
 1953              	.LVL144:
 376:Core/Src/main.c ****   uint16_t mode = 0x0110; // clear reset bit, disable all CRCs
 1954              		.loc 1 376 6 view .LVU464
 1955 0006 0028     		cmp	r0, #0
 1956 0008 00D1     		bne	.L82
 1957              	.L81:
 393:Core/Src/main.c **** 
 1958              		.loc 1 393 1 view .LVU465
 1959              		@ sp needed
 1960 000a 10BD     		pop	{r4, pc}
 1961              	.L82:
 377:Core/Src/main.c ****   ads131m04_wreg(0x02, mode);
 1962              		.loc 1 377 3 is_stmt 1 view .LVU466
 1963              	.LVL145:
 378:Core/Src/main.c **** 
 1964              		.loc 1 378 3 view .LVU467
 1965 000c 8821     		movs	r1, #136
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 55


 1966 000e 4900     		lsls	r1, r1, #1
 1967 0010 0220     		movs	r0, #2
 1968 0012 FFF7FEFF 		bl	ads131m04_wreg
 1969              	.LVL146:
 380:Core/Src/main.c ****   uint16_t clock = 0x0F03 | (osr << 2); // enable all, highest precision
 1970              		.loc 1 380 3 view .LVU468
 381:Core/Src/main.c ****   ads131m04_wreg(0x03, clock);
 1971              		.loc 1 381 3 view .LVU469
 382:Core/Src/main.c **** 
 1972              		.loc 1 382 3 view .LVU470
 1973 0016 0749     		ldr	r1, .L83
 1974 0018 0320     		movs	r0, #3
 1975 001a FFF7FEFF 		bl	ads131m04_wreg
 1976              	.LVL147:
 384:Core/Src/main.c ****   uint16_t gain1 = (gain << 12) | (gain << 8) | (gain << 4) | gain;
 1977              		.loc 1 384 3 view .LVU471
 385:Core/Src/main.c ****   ads131m04_wreg(0x04, gain1);
 1978              		.loc 1 385 3 view .LVU472
 386:Core/Src/main.c **** 
 1979              		.loc 1 386 3 view .LVU473
 1980 001e 0649     		ldr	r1, .L83+4
 1981 0020 0420     		movs	r0, #4
 1982 0022 FFF7FEFF 		bl	ads131m04_wreg
 1983              	.LVL148:
 388:Core/Src/main.c ****   ads131m04_wreg(0x06, cfg);
 1984              		.loc 1 388 3 view .LVU474
 389:Core/Src/main.c **** 
 1985              		.loc 1 389 3 view .LVU475
 1986 0026 0021     		movs	r1, #0
 1987 0028 0620     		movs	r0, #6
 1988 002a FFF7FEFF 		bl	ads131m04_wreg
 1989              	.LVL149:
 392:Core/Src/main.c **** }
 1990              		.loc 1 392 3 view .LVU476
 392:Core/Src/main.c **** }
 1991              		.loc 1 392 10 is_stmt 0 view .LVU477
 1992 002e 0120     		movs	r0, #1
 1993 0030 EBE7     		b	.L81
 1994              	.L84:
 1995 0032 C046     		.align	2
 1996              	.L83:
 1997 0034 130F0000 		.word	3859
 1998 0038 66660000 		.word	26214
 1999              		.cfi_endproc
 2000              	.LFE64:
 2002              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 2003              		.align	1
 2004              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 2005              		.syntax unified
 2006              		.code	16
 2007              		.thumb_func
 2009              	HAL_CAN_RxFifo0MsgPendingCallback:
 2010              	.LVL150:
 2011              	.LFB73:
 762:Core/Src/main.c **** 
 763:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 764:Core/Src/main.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan) {
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 56


 2012              		.loc 1 764 65 is_stmt 1 view -0
 2013              		.cfi_startproc
 2014              		@ args = 0, pretend = 0, frame = 0
 2015              		@ frame_needed = 0, uses_anonymous_args = 0
 2016              		.loc 1 764 65 is_stmt 0 view .LVU479
 2017 0000 10B5     		push	{r4, lr}
 2018              		.cfi_def_cfa_offset 8
 2019              		.cfi_offset 4, -8
 2020              		.cfi_offset 14, -4
 765:Core/Src/main.c ****   HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &rxh_nst, rx_nst_data);
 2021              		.loc 1 765 3 is_stmt 1 view .LVU480
 2022 0002 034B     		ldr	r3, .L86
 2023 0004 034A     		ldr	r2, .L86+4
 2024 0006 0021     		movs	r1, #0
 2025 0008 FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 2026              	.LVL151:
 766:Core/Src/main.c ****   can_rx_handler();
 2027              		.loc 1 766 3 view .LVU481
 767:Core/Src/main.c **** }
 2028              		.loc 1 767 1 is_stmt 0 view .LVU482
 2029              		@ sp needed
 2030 000c 10BD     		pop	{r4, pc}
 2031              	.L87:
 2032 000e C046     		.align	2
 2033              	.L86:
 2034 0010 00000000 		.word	rx_nst_data
 2035 0014 00000000 		.word	rxh_nst
 2036              		.cfi_endproc
 2037              	.LFE73:
 2039              		.section	.text.Error_Handler,"ax",%progbits
 2040              		.align	1
 2041              		.global	Error_Handler
 2042              		.syntax unified
 2043              		.code	16
 2044              		.thumb_func
 2046              	Error_Handler:
 2047              	.LFB74:
 768:Core/Src/main.c **** /* USER CODE END 4 */
 769:Core/Src/main.c **** 
 770:Core/Src/main.c **** /**
 771:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 772:Core/Src/main.c ****   * @retval None
 773:Core/Src/main.c ****   */
 774:Core/Src/main.c **** void Error_Handler(void)
 775:Core/Src/main.c **** {
 2048              		.loc 1 775 1 is_stmt 1 view -0
 2049              		.cfi_startproc
 2050              		@ Volatile: function does not return.
 2051              		@ args = 0, pretend = 0, frame = 0
 2052              		@ frame_needed = 0, uses_anonymous_args = 0
 2053              		@ link register save eliminated.
 776:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 777:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 778:Core/Src/main.c ****   __disable_irq();
 2054              		.loc 1 778 3 view .LVU484
 2055              	.LBB14:
 2056              	.LBI14:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 57


 2057              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 58


  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 59


 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 2058              		.loc 2 140 27 view .LVU485
 2059              	.LBB15:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2060              		.loc 2 142 3 view .LVU486
 2061              		.syntax divided
 2062              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2063 0000 72B6     		cpsid i
 2064              	@ 0 "" 2
 2065              		.thumb
 2066              		.syntax unified
 2067              	.L89:
 2068              	.LBE15:
 2069              	.LBE14:
 779:Core/Src/main.c ****   while (1)
 2070              		.loc 1 779 3 discriminator 1 view .LVU487
 780:Core/Src/main.c ****   {
 781:Core/Src/main.c ****   }
 2071              		.loc 1 781 3 discriminator 1 view .LVU488
 779:Core/Src/main.c ****   while (1)
 2072              		.loc 1 779 9 discriminator 1 view .LVU489
 2073 0002 FEE7     		b	.L89
 2074              		.cfi_endproc
 2075              	.LFE74:
 2077              		.section	.text.MX_CAN_Init,"ax",%progbits
 2078              		.align	1
 2079              		.syntax unified
 2080              		.code	16
 2081              		.thumb_func
 2083              	MX_CAN_Init:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 60


 2084              	.LFB67:
 508:Core/Src/main.c **** 
 2085              		.loc 1 508 1 view -0
 2086              		.cfi_startproc
 2087              		@ args = 0, pretend = 0, frame = 0
 2088              		@ frame_needed = 0, uses_anonymous_args = 0
 2089 0000 10B5     		push	{r4, lr}
 2090              		.cfi_def_cfa_offset 8
 2091              		.cfi_offset 4, -8
 2092              		.cfi_offset 14, -4
 517:Core/Src/main.c ****   hcan.Init.Prescaler = 3;
 2093              		.loc 1 517 3 view .LVU491
 517:Core/Src/main.c ****   hcan.Init.Prescaler = 3;
 2094              		.loc 1 517 17 is_stmt 0 view .LVU492
 2095 0002 0E48     		ldr	r0, .L93
 2096 0004 0E4B     		ldr	r3, .L93+4
 2097 0006 0360     		str	r3, [r0]
 518:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 2098              		.loc 1 518 3 is_stmt 1 view .LVU493
 518:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 2099              		.loc 1 518 23 is_stmt 0 view .LVU494
 2100 0008 0323     		movs	r3, #3
 2101 000a 4360     		str	r3, [r0, #4]
 519:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 2102              		.loc 1 519 3 is_stmt 1 view .LVU495
 519:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 2103              		.loc 1 519 18 is_stmt 0 view .LVU496
 2104 000c 0023     		movs	r3, #0
 2105 000e 8360     		str	r3, [r0, #8]
 520:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 2106              		.loc 1 520 3 is_stmt 1 view .LVU497
 520:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 2107              		.loc 1 520 27 is_stmt 0 view .LVU498
 2108 0010 8022     		movs	r2, #128
 2109 0012 5204     		lsls	r2, r2, #17
 2110 0014 C260     		str	r2, [r0, #12]
 521:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 2111              		.loc 1 521 3 is_stmt 1 view .LVU499
 521:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 2112              		.loc 1 521 22 is_stmt 0 view .LVU500
 2113 0016 C022     		movs	r2, #192
 2114 0018 1203     		lsls	r2, r2, #12
 2115 001a 0261     		str	r2, [r0, #16]
 522:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 2116              		.loc 1 522 3 is_stmt 1 view .LVU501
 522:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 2117              		.loc 1 522 22 is_stmt 0 view .LVU502
 2118 001c 8022     		movs	r2, #128
 2119 001e 5203     		lsls	r2, r2, #13
 2120 0020 4261     		str	r2, [r0, #20]
 523:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 2121              		.loc 1 523 3 is_stmt 1 view .LVU503
 523:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 2122              		.loc 1 523 31 is_stmt 0 view .LVU504
 2123 0022 0376     		strb	r3, [r0, #24]
 524:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
 2124              		.loc 1 524 3 is_stmt 1 view .LVU505
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 61


 524:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
 2125              		.loc 1 524 24 is_stmt 0 view .LVU506
 2126 0024 4376     		strb	r3, [r0, #25]
 525:Core/Src/main.c ****   hcan.Init.AutoRetransmission = DISABLE;
 2127              		.loc 1 525 3 is_stmt 1 view .LVU507
 525:Core/Src/main.c ****   hcan.Init.AutoRetransmission = DISABLE;
 2128              		.loc 1 525 24 is_stmt 0 view .LVU508
 2129 0026 8376     		strb	r3, [r0, #26]
 526:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 2130              		.loc 1 526 3 is_stmt 1 view .LVU509
 526:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 2131              		.loc 1 526 32 is_stmt 0 view .LVU510
 2132 0028 C376     		strb	r3, [r0, #27]
 527:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 2133              		.loc 1 527 3 is_stmt 1 view .LVU511
 527:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 2134              		.loc 1 527 31 is_stmt 0 view .LVU512
 2135 002a 0377     		strb	r3, [r0, #28]
 528:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 2136              		.loc 1 528 3 is_stmt 1 view .LVU513
 528:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 2137              		.loc 1 528 34 is_stmt 0 view .LVU514
 2138 002c 4377     		strb	r3, [r0, #29]
 529:Core/Src/main.c ****   {
 2139              		.loc 1 529 3 is_stmt 1 view .LVU515
 529:Core/Src/main.c ****   {
 2140              		.loc 1 529 7 is_stmt 0 view .LVU516
 2141 002e FFF7FEFF 		bl	HAL_CAN_Init
 2142              	.LVL152:
 529:Core/Src/main.c ****   {
 2143              		.loc 1 529 6 view .LVU517
 2144 0032 0028     		cmp	r0, #0
 2145 0034 00D1     		bne	.L92
 537:Core/Src/main.c **** 
 2146              		.loc 1 537 1 view .LVU518
 2147              		@ sp needed
 2148 0036 10BD     		pop	{r4, pc}
 2149              	.L92:
 531:Core/Src/main.c ****   }
 2150              		.loc 1 531 5 is_stmt 1 view .LVU519
 2151 0038 FFF7FEFF 		bl	Error_Handler
 2152              	.LVL153:
 2153              	.L94:
 2154              		.align	2
 2155              	.L93:
 2156 003c 00000000 		.word	hcan
 2157 0040 00640040 		.word	1073767424
 2158              		.cfi_endproc
 2159              	.LFE67:
 2161              		.section	.text.MX_SPI1_Init,"ax",%progbits
 2162              		.align	1
 2163              		.syntax unified
 2164              		.code	16
 2165              		.thumb_func
 2167              	MX_SPI1_Init:
 2168              	.LFB68:
 545:Core/Src/main.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 62


 2169              		.loc 1 545 1 view -0
 2170              		.cfi_startproc
 2171              		@ args = 0, pretend = 0, frame = 0
 2172              		@ frame_needed = 0, uses_anonymous_args = 0
 2173 0000 10B5     		push	{r4, lr}
 2174              		.cfi_def_cfa_offset 8
 2175              		.cfi_offset 4, -8
 2176              		.cfi_offset 14, -4
 555:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 2177              		.loc 1 555 3 view .LVU521
 555:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 2178              		.loc 1 555 18 is_stmt 0 view .LVU522
 2179 0002 1148     		ldr	r0, .L98
 2180 0004 114B     		ldr	r3, .L98+4
 2181 0006 0360     		str	r3, [r0]
 556:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 2182              		.loc 1 556 3 is_stmt 1 view .LVU523
 556:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 2183              		.loc 1 556 19 is_stmt 0 view .LVU524
 2184 0008 8223     		movs	r3, #130
 2185 000a 5B00     		lsls	r3, r3, #1
 2186 000c 4360     		str	r3, [r0, #4]
 557:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 2187              		.loc 1 557 3 is_stmt 1 view .LVU525
 557:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 2188              		.loc 1 557 24 is_stmt 0 view .LVU526
 2189 000e 0023     		movs	r3, #0
 2190 0010 8360     		str	r3, [r0, #8]
 558:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 2191              		.loc 1 558 3 is_stmt 1 view .LVU527
 558:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 2192              		.loc 1 558 23 is_stmt 0 view .LVU528
 2193 0012 E022     		movs	r2, #224
 2194 0014 D200     		lsls	r2, r2, #3
 2195 0016 C260     		str	r2, [r0, #12]
 559:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 2196              		.loc 1 559 3 is_stmt 1 view .LVU529
 559:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 2197              		.loc 1 559 26 is_stmt 0 view .LVU530
 2198 0018 0361     		str	r3, [r0, #16]
 560:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 2199              		.loc 1 560 3 is_stmt 1 view .LVU531
 560:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 2200              		.loc 1 560 23 is_stmt 0 view .LVU532
 2201 001a 0122     		movs	r2, #1
 2202 001c 4261     		str	r2, [r0, #20]
 561:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 2203              		.loc 1 561 3 is_stmt 1 view .LVU533
 561:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 2204              		.loc 1 561 18 is_stmt 0 view .LVU534
 2205 001e 8022     		movs	r2, #128
 2206 0020 9200     		lsls	r2, r2, #2
 2207 0022 8261     		str	r2, [r0, #24]
 562:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2208              		.loc 1 562 3 is_stmt 1 view .LVU535
 562:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2209              		.loc 1 562 32 is_stmt 0 view .LVU536
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 63


 2210 0024 F13A     		subs	r2, r2, #241
 2211 0026 FF3A     		subs	r2, r2, #255
 2212 0028 C261     		str	r2, [r0, #28]
 563:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 2213              		.loc 1 563 3 is_stmt 1 view .LVU537
 563:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 2214              		.loc 1 563 23 is_stmt 0 view .LVU538
 2215 002a 0362     		str	r3, [r0, #32]
 564:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2216              		.loc 1 564 3 is_stmt 1 view .LVU539
 564:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2217              		.loc 1 564 21 is_stmt 0 view .LVU540
 2218 002c 4362     		str	r3, [r0, #36]
 565:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 2219              		.loc 1 565 3 is_stmt 1 view .LVU541
 565:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 2220              		.loc 1 565 29 is_stmt 0 view .LVU542
 2221 002e 8362     		str	r3, [r0, #40]
 566:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 2222              		.loc 1 566 3 is_stmt 1 view .LVU543
 566:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 2223              		.loc 1 566 28 is_stmt 0 view .LVU544
 2224 0030 093A     		subs	r2, r2, #9
 2225 0032 C262     		str	r2, [r0, #44]
 567:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 2226              		.loc 1 567 3 is_stmt 1 view .LVU545
 567:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 2227              		.loc 1 567 24 is_stmt 0 view .LVU546
 2228 0034 0363     		str	r3, [r0, #48]
 568:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 2229              		.loc 1 568 3 is_stmt 1 view .LVU547
 568:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 2230              		.loc 1 568 23 is_stmt 0 view .LVU548
 2231 0036 4363     		str	r3, [r0, #52]
 569:Core/Src/main.c ****   {
 2232              		.loc 1 569 3 is_stmt 1 view .LVU549
 569:Core/Src/main.c ****   {
 2233              		.loc 1 569 7 is_stmt 0 view .LVU550
 2234 0038 FFF7FEFF 		bl	HAL_SPI_Init
 2235              	.LVL154:
 569:Core/Src/main.c ****   {
 2236              		.loc 1 569 6 view .LVU551
 2237 003c 0028     		cmp	r0, #0
 2238 003e 00D1     		bne	.L97
 577:Core/Src/main.c **** 
 2239              		.loc 1 577 1 view .LVU552
 2240              		@ sp needed
 2241 0040 10BD     		pop	{r4, pc}
 2242              	.L97:
 571:Core/Src/main.c ****   }
 2243              		.loc 1 571 5 is_stmt 1 view .LVU553
 2244 0042 FFF7FEFF 		bl	Error_Handler
 2245              	.LVL155:
 2246              	.L99:
 2247 0046 C046     		.align	2
 2248              	.L98:
 2249 0048 00000000 		.word	hspi1
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 64


 2250 004c 00300140 		.word	1073819648
 2251              		.cfi_endproc
 2252              	.LFE68:
 2254              		.section	.text.MX_TIM3_Init,"ax",%progbits
 2255              		.align	1
 2256              		.syntax unified
 2257              		.code	16
 2258              		.thumb_func
 2260              	MX_TIM3_Init:
 2261              	.LFB69:
 585:Core/Src/main.c **** 
 2262              		.loc 1 585 1 view -0
 2263              		.cfi_startproc
 2264              		@ args = 0, pretend = 0, frame = 56
 2265              		@ frame_needed = 0, uses_anonymous_args = 0
 2266 0000 00B5     		push	{lr}
 2267              		.cfi_def_cfa_offset 4
 2268              		.cfi_offset 14, -4
 2269 0002 8FB0     		sub	sp, sp, #60
 2270              		.cfi_def_cfa_offset 64
 591:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2271              		.loc 1 591 3 view .LVU555
 591:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2272              		.loc 1 591 26 is_stmt 0 view .LVU556
 2273 0004 1022     		movs	r2, #16
 2274 0006 0021     		movs	r1, #0
 2275 0008 0AA8     		add	r0, sp, #40
 2276 000a FFF7FEFF 		bl	memset
 2277              	.LVL156:
 592:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2278              		.loc 1 592 3 is_stmt 1 view .LVU557
 592:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2279              		.loc 1 592 27 is_stmt 0 view .LVU558
 2280 000e 0822     		movs	r2, #8
 2281 0010 0021     		movs	r1, #0
 2282 0012 08A8     		add	r0, sp, #32
 2283 0014 FFF7FEFF 		bl	memset
 2284              	.LVL157:
 593:Core/Src/main.c **** 
 2285              		.loc 1 593 3 is_stmt 1 view .LVU559
 593:Core/Src/main.c **** 
 2286              		.loc 1 593 22 is_stmt 0 view .LVU560
 2287 0018 1C22     		movs	r2, #28
 2288 001a 0021     		movs	r1, #0
 2289 001c 01A8     		add	r0, sp, #4
 2290 001e FFF7FEFF 		bl	memset
 2291              	.LVL158:
 598:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 2292              		.loc 1 598 3 is_stmt 1 view .LVU561
 598:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 2293              		.loc 1 598 18 is_stmt 0 view .LVU562
 2294 0022 2148     		ldr	r0, .L111
 2295 0024 214B     		ldr	r3, .L111+4
 2296 0026 0360     		str	r3, [r0]
 599:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2297              		.loc 1 599 3 is_stmt 1 view .LVU563
 599:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 65


 2298              		.loc 1 599 24 is_stmt 0 view .LVU564
 2299 0028 0023     		movs	r3, #0
 2300 002a 4360     		str	r3, [r0, #4]
 600:Core/Src/main.c ****   htim3.Init.Period = 7;
 2301              		.loc 1 600 3 is_stmt 1 view .LVU565
 600:Core/Src/main.c ****   htim3.Init.Period = 7;
 2302              		.loc 1 600 26 is_stmt 0 view .LVU566
 2303 002c 8360     		str	r3, [r0, #8]
 601:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2304              		.loc 1 601 3 is_stmt 1 view .LVU567
 601:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2305              		.loc 1 601 21 is_stmt 0 view .LVU568
 2306 002e 0722     		movs	r2, #7
 2307 0030 C260     		str	r2, [r0, #12]
 602:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2308              		.loc 1 602 3 is_stmt 1 view .LVU569
 602:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2309              		.loc 1 602 28 is_stmt 0 view .LVU570
 2310 0032 0361     		str	r3, [r0, #16]
 603:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 2311              		.loc 1 603 3 is_stmt 1 view .LVU571
 603:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 2312              		.loc 1 603 32 is_stmt 0 view .LVU572
 2313 0034 8361     		str	r3, [r0, #24]
 604:Core/Src/main.c ****   {
 2314              		.loc 1 604 3 is_stmt 1 view .LVU573
 604:Core/Src/main.c ****   {
 2315              		.loc 1 604 7 is_stmt 0 view .LVU574
 2316 0036 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2317              	.LVL159:
 604:Core/Src/main.c ****   {
 2318              		.loc 1 604 6 view .LVU575
 2319 003a 0028     		cmp	r0, #0
 2320 003c 29D1     		bne	.L106
 608:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 2321              		.loc 1 608 3 is_stmt 1 view .LVU576
 608:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 2322              		.loc 1 608 34 is_stmt 0 view .LVU577
 2323 003e 8023     		movs	r3, #128
 2324 0040 5B01     		lsls	r3, r3, #5
 2325 0042 0A93     		str	r3, [sp, #40]
 609:Core/Src/main.c ****   {
 2326              		.loc 1 609 3 is_stmt 1 view .LVU578
 609:Core/Src/main.c ****   {
 2327              		.loc 1 609 7 is_stmt 0 view .LVU579
 2328 0044 1848     		ldr	r0, .L111
 2329 0046 0AA9     		add	r1, sp, #40
 2330 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2331              	.LVL160:
 609:Core/Src/main.c ****   {
 2332              		.loc 1 609 6 view .LVU580
 2333 004c 0028     		cmp	r0, #0
 2334 004e 22D1     		bne	.L107
 613:Core/Src/main.c ****   {
 2335              		.loc 1 613 3 is_stmt 1 view .LVU581
 613:Core/Src/main.c ****   {
 2336              		.loc 1 613 7 is_stmt 0 view .LVU582
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 66


 2337 0050 1548     		ldr	r0, .L111
 2338 0052 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2339              	.LVL161:
 613:Core/Src/main.c ****   {
 2340              		.loc 1 613 6 view .LVU583
 2341 0056 0028     		cmp	r0, #0
 2342 0058 1FD1     		bne	.L108
 617:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2343              		.loc 1 617 3 is_stmt 1 view .LVU584
 617:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2344              		.loc 1 617 37 is_stmt 0 view .LVU585
 2345 005a 0023     		movs	r3, #0
 2346 005c 0893     		str	r3, [sp, #32]
 618:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2347              		.loc 1 618 3 is_stmt 1 view .LVU586
 618:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2348              		.loc 1 618 33 is_stmt 0 view .LVU587
 2349 005e 0993     		str	r3, [sp, #36]
 619:Core/Src/main.c ****   {
 2350              		.loc 1 619 3 is_stmt 1 view .LVU588
 619:Core/Src/main.c ****   {
 2351              		.loc 1 619 7 is_stmt 0 view .LVU589
 2352 0060 1148     		ldr	r0, .L111
 2353 0062 08A9     		add	r1, sp, #32
 2354 0064 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2355              	.LVL162:
 619:Core/Src/main.c ****   {
 2356              		.loc 1 619 6 view .LVU590
 2357 0068 0028     		cmp	r0, #0
 2358 006a 18D1     		bne	.L109
 623:Core/Src/main.c ****   sConfigOC.Pulse = 4;
 2359              		.loc 1 623 3 is_stmt 1 view .LVU591
 623:Core/Src/main.c ****   sConfigOC.Pulse = 4;
 2360              		.loc 1 623 20 is_stmt 0 view .LVU592
 2361 006c 6023     		movs	r3, #96
 2362 006e 0193     		str	r3, [sp, #4]
 624:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2363              		.loc 1 624 3 is_stmt 1 view .LVU593
 624:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2364              		.loc 1 624 19 is_stmt 0 view .LVU594
 2365 0070 5C3B     		subs	r3, r3, #92
 2366 0072 0293     		str	r3, [sp, #8]
 625:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 2367              		.loc 1 625 3 is_stmt 1 view .LVU595
 625:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 2368              		.loc 1 625 24 is_stmt 0 view .LVU596
 2369 0074 0022     		movs	r2, #0
 2370 0076 0392     		str	r2, [sp, #12]
 626:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 2371              		.loc 1 626 3 is_stmt 1 view .LVU597
 626:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 2372              		.loc 1 626 24 is_stmt 0 view .LVU598
 2373 0078 0593     		str	r3, [sp, #20]
 627:Core/Src/main.c ****   {
 2374              		.loc 1 627 3 is_stmt 1 view .LVU599
 627:Core/Src/main.c ****   {
 2375              		.loc 1 627 7 is_stmt 0 view .LVU600
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 67


 2376 007a 0B48     		ldr	r0, .L111
 2377 007c 0C32     		adds	r2, r2, #12
 2378 007e 01A9     		add	r1, sp, #4
 2379 0080 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2380              	.LVL163:
 627:Core/Src/main.c ****   {
 2381              		.loc 1 627 6 view .LVU601
 2382 0084 0028     		cmp	r0, #0
 2383 0086 0CD1     		bne	.L110
 634:Core/Src/main.c **** 
 2384              		.loc 1 634 3 is_stmt 1 view .LVU602
 2385 0088 0748     		ldr	r0, .L111
 2386 008a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2387              	.LVL164:
 636:Core/Src/main.c **** 
 2388              		.loc 1 636 1 is_stmt 0 view .LVU603
 2389 008e 0FB0     		add	sp, sp, #60
 2390              		@ sp needed
 2391 0090 00BD     		pop	{pc}
 2392              	.L106:
 606:Core/Src/main.c ****   }
 2393              		.loc 1 606 5 is_stmt 1 view .LVU604
 2394 0092 FFF7FEFF 		bl	Error_Handler
 2395              	.LVL165:
 2396              	.L107:
 611:Core/Src/main.c ****   }
 2397              		.loc 1 611 5 view .LVU605
 2398 0096 FFF7FEFF 		bl	Error_Handler
 2399              	.LVL166:
 2400              	.L108:
 615:Core/Src/main.c ****   }
 2401              		.loc 1 615 5 view .LVU606
 2402 009a FFF7FEFF 		bl	Error_Handler
 2403              	.LVL167:
 2404              	.L109:
 621:Core/Src/main.c ****   }
 2405              		.loc 1 621 5 view .LVU607
 2406 009e FFF7FEFF 		bl	Error_Handler
 2407              	.LVL168:
 2408              	.L110:
 629:Core/Src/main.c ****   }
 2409              		.loc 1 629 5 view .LVU608
 2410 00a2 FFF7FEFF 		bl	Error_Handler
 2411              	.LVL169:
 2412              	.L112:
 2413 00a6 C046     		.align	2
 2414              	.L111:
 2415 00a8 00000000 		.word	htim3
 2416 00ac 00040040 		.word	1073742848
 2417              		.cfi_endproc
 2418              	.LFE69:
 2420              		.section	.text.MX_TIM16_Init,"ax",%progbits
 2421              		.align	1
 2422              		.syntax unified
 2423              		.code	16
 2424              		.thumb_func
 2426              	MX_TIM16_Init:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 68


 2427              	.LFB71:
 675:Core/Src/main.c **** 
 2428              		.loc 1 675 1 view -0
 2429              		.cfi_startproc
 2430              		@ args = 0, pretend = 0, frame = 0
 2431              		@ frame_needed = 0, uses_anonymous_args = 0
 2432 0000 10B5     		push	{r4, lr}
 2433              		.cfi_def_cfa_offset 8
 2434              		.cfi_offset 4, -8
 2435              		.cfi_offset 14, -4
 684:Core/Src/main.c ****   htim16.Init.Prescaler = 47;
 2436              		.loc 1 684 3 view .LVU610
 684:Core/Src/main.c ****   htim16.Init.Prescaler = 47;
 2437              		.loc 1 684 19 is_stmt 0 view .LVU611
 2438 0002 0948     		ldr	r0, .L116
 2439 0004 094B     		ldr	r3, .L116+4
 2440 0006 0360     		str	r3, [r0]
 685:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 2441              		.loc 1 685 3 is_stmt 1 view .LVU612
 685:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 2442              		.loc 1 685 25 is_stmt 0 view .LVU613
 2443 0008 2F23     		movs	r3, #47
 2444 000a 4360     		str	r3, [r0, #4]
 686:Core/Src/main.c ****   htim16.Init.Period = 65535;
 2445              		.loc 1 686 3 is_stmt 1 view .LVU614
 686:Core/Src/main.c ****   htim16.Init.Period = 65535;
 2446              		.loc 1 686 27 is_stmt 0 view .LVU615
 2447 000c 0023     		movs	r3, #0
 2448 000e 8360     		str	r3, [r0, #8]
 687:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2449              		.loc 1 687 3 is_stmt 1 view .LVU616
 687:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2450              		.loc 1 687 22 is_stmt 0 view .LVU617
 2451 0010 074A     		ldr	r2, .L116+8
 2452 0012 C260     		str	r2, [r0, #12]
 688:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 2453              		.loc 1 688 3 is_stmt 1 view .LVU618
 688:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 2454              		.loc 1 688 29 is_stmt 0 view .LVU619
 2455 0014 0361     		str	r3, [r0, #16]
 689:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2456              		.loc 1 689 3 is_stmt 1 view .LVU620
 689:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2457              		.loc 1 689 33 is_stmt 0 view .LVU621
 2458 0016 4361     		str	r3, [r0, #20]
 690:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 2459              		.loc 1 690 3 is_stmt 1 view .LVU622
 690:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 2460              		.loc 1 690 33 is_stmt 0 view .LVU623
 2461 0018 8361     		str	r3, [r0, #24]
 691:Core/Src/main.c ****   {
 2462              		.loc 1 691 3 is_stmt 1 view .LVU624
 691:Core/Src/main.c ****   {
 2463              		.loc 1 691 7 is_stmt 0 view .LVU625
 2464 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 2465              	.LVL170:
 691:Core/Src/main.c ****   {
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 69


 2466              		.loc 1 691 6 view .LVU626
 2467 001e 0028     		cmp	r0, #0
 2468 0020 00D1     		bne	.L115
 699:Core/Src/main.c **** 
 2469              		.loc 1 699 1 view .LVU627
 2470              		@ sp needed
 2471 0022 10BD     		pop	{r4, pc}
 2472              	.L115:
 693:Core/Src/main.c ****   }
 2473              		.loc 1 693 5 is_stmt 1 view .LVU628
 2474 0024 FFF7FEFF 		bl	Error_Handler
 2475              	.LVL171:
 2476              	.L117:
 2477              		.align	2
 2478              	.L116:
 2479 0028 00000000 		.word	htim16
 2480 002c 00440140 		.word	1073824768
 2481 0030 FFFF0000 		.word	65535
 2482              		.cfi_endproc
 2483              	.LFE71:
 2485              		.section	.text.MX_TIM14_Init,"ax",%progbits
 2486              		.align	1
 2487              		.syntax unified
 2488              		.code	16
 2489              		.thumb_func
 2491              	MX_TIM14_Init:
 2492              	.LFB70:
 644:Core/Src/main.c **** 
 2493              		.loc 1 644 1 view -0
 2494              		.cfi_startproc
 2495              		@ args = 0, pretend = 0, frame = 0
 2496              		@ frame_needed = 0, uses_anonymous_args = 0
 2497 0000 10B5     		push	{r4, lr}
 2498              		.cfi_def_cfa_offset 8
 2499              		.cfi_offset 4, -8
 2500              		.cfi_offset 14, -4
 653:Core/Src/main.c ****   htim14.Init.Prescaler = 11;
 2501              		.loc 1 653 3 view .LVU630
 653:Core/Src/main.c ****   htim14.Init.Prescaler = 11;
 2502              		.loc 1 653 19 is_stmt 0 view .LVU631
 2503 0002 0948     		ldr	r0, .L121
 2504 0004 094B     		ldr	r3, .L121+4
 2505 0006 0360     		str	r3, [r0]
 654:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 2506              		.loc 1 654 3 is_stmt 1 view .LVU632
 654:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 2507              		.loc 1 654 25 is_stmt 0 view .LVU633
 2508 0008 0B23     		movs	r3, #11
 2509 000a 4360     		str	r3, [r0, #4]
 655:Core/Src/main.c ****   htim14.Init.Period = 1000;
 2510              		.loc 1 655 3 is_stmt 1 view .LVU634
 655:Core/Src/main.c ****   htim14.Init.Period = 1000;
 2511              		.loc 1 655 27 is_stmt 0 view .LVU635
 2512 000c 0023     		movs	r3, #0
 2513 000e 8360     		str	r3, [r0, #8]
 656:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2514              		.loc 1 656 3 is_stmt 1 view .LVU636
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 70


 656:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2515              		.loc 1 656 22 is_stmt 0 view .LVU637
 2516 0010 FA22     		movs	r2, #250
 2517 0012 9200     		lsls	r2, r2, #2
 2518 0014 C260     		str	r2, [r0, #12]
 657:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2519              		.loc 1 657 3 is_stmt 1 view .LVU638
 657:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2520              		.loc 1 657 29 is_stmt 0 view .LVU639
 2521 0016 0361     		str	r3, [r0, #16]
 658:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 2522              		.loc 1 658 3 is_stmt 1 view .LVU640
 658:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 2523              		.loc 1 658 33 is_stmt 0 view .LVU641
 2524 0018 8361     		str	r3, [r0, #24]
 659:Core/Src/main.c ****   {
 2525              		.loc 1 659 3 is_stmt 1 view .LVU642
 659:Core/Src/main.c ****   {
 2526              		.loc 1 659 7 is_stmt 0 view .LVU643
 2527 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 2528              	.LVL172:
 659:Core/Src/main.c ****   {
 2529              		.loc 1 659 6 view .LVU644
 2530 001e 0028     		cmp	r0, #0
 2531 0020 00D1     		bne	.L120
 667:Core/Src/main.c **** 
 2532              		.loc 1 667 1 view .LVU645
 2533              		@ sp needed
 2534 0022 10BD     		pop	{r4, pc}
 2535              	.L120:
 661:Core/Src/main.c ****   }
 2536              		.loc 1 661 5 is_stmt 1 view .LVU646
 2537 0024 FFF7FEFF 		bl	Error_Handler
 2538              	.LVL173:
 2539              	.L122:
 2540              		.align	2
 2541              	.L121:
 2542 0028 00000000 		.word	htim14
 2543 002c 00200040 		.word	1073750016
 2544              		.cfi_endproc
 2545              	.LFE70:
 2547              		.section	.text.SystemClock_Config,"ax",%progbits
 2548              		.align	1
 2549              		.global	SystemClock_Config
 2550              		.syntax unified
 2551              		.code	16
 2552              		.thumb_func
 2554              	SystemClock_Config:
 2555              	.LFB66:
 469:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2556              		.loc 1 469 1 view -0
 2557              		.cfi_startproc
 2558              		@ args = 0, pretend = 0, frame = 72
 2559              		@ frame_needed = 0, uses_anonymous_args = 0
 2560 0000 00B5     		push	{lr}
 2561              		.cfi_def_cfa_offset 4
 2562              		.cfi_offset 14, -4
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 71


 2563 0002 93B0     		sub	sp, sp, #76
 2564              		.cfi_def_cfa_offset 80
 470:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2565              		.loc 1 470 3 view .LVU648
 470:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2566              		.loc 1 470 22 is_stmt 0 view .LVU649
 2567 0004 3422     		movs	r2, #52
 2568 0006 0021     		movs	r1, #0
 2569 0008 05A8     		add	r0, sp, #20
 2570 000a FFF7FEFF 		bl	memset
 2571              	.LVL174:
 471:Core/Src/main.c **** 
 2572              		.loc 1 471 3 is_stmt 1 view .LVU650
 471:Core/Src/main.c **** 
 2573              		.loc 1 471 22 is_stmt 0 view .LVU651
 2574 000e 1022     		movs	r2, #16
 2575 0010 0021     		movs	r1, #0
 2576 0012 01A8     		add	r0, sp, #4
 2577 0014 FFF7FEFF 		bl	memset
 2578              	.LVL175:
 476:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2579              		.loc 1 476 3 is_stmt 1 view .LVU652
 476:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2580              		.loc 1 476 36 is_stmt 0 view .LVU653
 2581 0018 0223     		movs	r3, #2
 2582 001a 0593     		str	r3, [sp, #20]
 477:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2583              		.loc 1 477 3 is_stmt 1 view .LVU654
 477:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2584              		.loc 1 477 30 is_stmt 0 view .LVU655
 2585 001c 0122     		movs	r2, #1
 2586 001e 0892     		str	r2, [sp, #32]
 478:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2587              		.loc 1 478 3 is_stmt 1 view .LVU656
 478:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2588              		.loc 1 478 41 is_stmt 0 view .LVU657
 2589 0020 0F32     		adds	r2, r2, #15
 2590 0022 0992     		str	r2, [sp, #36]
 479:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 2591              		.loc 1 479 3 is_stmt 1 view .LVU658
 479:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 2592              		.loc 1 479 34 is_stmt 0 view .LVU659
 2593 0024 0E93     		str	r3, [sp, #56]
 480:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 2594              		.loc 1 480 3 is_stmt 1 view .LVU660
 480:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 2595              		.loc 1 480 35 is_stmt 0 view .LVU661
 2596 0026 8023     		movs	r3, #128
 2597 0028 1B02     		lsls	r3, r3, #8
 2598 002a 0F93     		str	r3, [sp, #60]
 481:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 2599              		.loc 1 481 3 is_stmt 1 view .LVU662
 481:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 2600              		.loc 1 481 32 is_stmt 0 view .LVU663
 2601 002c 8023     		movs	r3, #128
 2602 002e 5B03     		lsls	r3, r3, #13
 2603 0030 1093     		str	r3, [sp, #64]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 72


 482:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2604              		.loc 1 482 3 is_stmt 1 view .LVU664
 483:Core/Src/main.c ****   {
 2605              		.loc 1 483 3 view .LVU665
 483:Core/Src/main.c ****   {
 2606              		.loc 1 483 7 is_stmt 0 view .LVU666
 2607 0032 05A8     		add	r0, sp, #20
 2608 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 2609              	.LVL176:
 483:Core/Src/main.c ****   {
 2610              		.loc 1 483 6 view .LVU667
 2611 0038 0028     		cmp	r0, #0
 2612 003a 0ED1     		bne	.L126
 490:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 2613              		.loc 1 490 3 is_stmt 1 view .LVU668
 490:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 2614              		.loc 1 490 31 is_stmt 0 view .LVU669
 2615 003c 0723     		movs	r3, #7
 2616 003e 0193     		str	r3, [sp, #4]
 492:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2617              		.loc 1 492 3 is_stmt 1 view .LVU670
 492:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2618              		.loc 1 492 34 is_stmt 0 view .LVU671
 2619 0040 053B     		subs	r3, r3, #5
 2620 0042 0293     		str	r3, [sp, #8]
 493:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2621              		.loc 1 493 3 is_stmt 1 view .LVU672
 493:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2622              		.loc 1 493 35 is_stmt 0 view .LVU673
 2623 0044 0023     		movs	r3, #0
 2624 0046 0393     		str	r3, [sp, #12]
 494:Core/Src/main.c **** 
 2625              		.loc 1 494 3 is_stmt 1 view .LVU674
 494:Core/Src/main.c **** 
 2626              		.loc 1 494 36 is_stmt 0 view .LVU675
 2627 0048 0493     		str	r3, [sp, #16]
 496:Core/Src/main.c ****   {
 2628              		.loc 1 496 3 is_stmt 1 view .LVU676
 496:Core/Src/main.c ****   {
 2629              		.loc 1 496 7 is_stmt 0 view .LVU677
 2630 004a 0121     		movs	r1, #1
 2631 004c 01A8     		add	r0, sp, #4
 2632 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2633              	.LVL177:
 496:Core/Src/main.c ****   {
 2634              		.loc 1 496 6 view .LVU678
 2635 0052 0028     		cmp	r0, #0
 2636 0054 03D1     		bne	.L127
 500:Core/Src/main.c **** 
 2637              		.loc 1 500 1 view .LVU679
 2638 0056 13B0     		add	sp, sp, #76
 2639              		@ sp needed
 2640 0058 00BD     		pop	{pc}
 2641              	.L126:
 485:Core/Src/main.c ****   }
 2642              		.loc 1 485 5 is_stmt 1 view .LVU680
 2643 005a FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 73


 2644              	.LVL178:
 2645              	.L127:
 498:Core/Src/main.c ****   }
 2646              		.loc 1 498 5 view .LVU681
 2647 005e FFF7FEFF 		bl	Error_Handler
 2648              	.LVL179:
 2649              		.cfi_endproc
 2650              	.LFE66:
 2652              		.section	.text.main,"ax",%progbits
 2653              		.align	1
 2654              		.global	main
 2655              		.syntax unified
 2656              		.code	16
 2657              		.thumb_func
 2659              	main:
 2660              	.LFB65:
 402:Core/Src/main.c **** 
 2661              		.loc 1 402 1 view -0
 2662              		.cfi_startproc
 2663              		@ Volatile: function does not return.
 2664              		@ args = 0, pretend = 0, frame = 0
 2665              		@ frame_needed = 0, uses_anonymous_args = 0
 2666 0000 10B5     		push	{r4, lr}
 2667              		.cfi_def_cfa_offset 8
 2668              		.cfi_offset 4, -8
 2669              		.cfi_offset 14, -4
 406:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(TIM14_IRQn);
 2670              		.loc 1 406 3 view .LVU683
 2671 0002 0620     		movs	r0, #6
 2672 0004 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 2673              	.LVL180:
 407:Core/Src/main.c **** 
 2674              		.loc 1 407 3 view .LVU684
 2675 0008 1320     		movs	r0, #19
 2676 000a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 2677              	.LVL181:
 414:Core/Src/main.c **** 
 2678              		.loc 1 414 3 view .LVU685
 2679 000e FFF7FEFF 		bl	HAL_Init
 2680              	.LVL182:
 421:Core/Src/main.c **** 
 2681              		.loc 1 421 3 view .LVU686
 2682 0012 FFF7FEFF 		bl	SystemClock_Config
 2683              	.LVL183:
 428:Core/Src/main.c ****   MX_CAN_Init();
 2684              		.loc 1 428 3 view .LVU687
 2685 0016 FFF7FEFF 		bl	MX_GPIO_Init
 2686              	.LVL184:
 429:Core/Src/main.c ****   MX_SPI1_Init();
 2687              		.loc 1 429 3 view .LVU688
 2688 001a FFF7FEFF 		bl	MX_CAN_Init
 2689              	.LVL185:
 430:Core/Src/main.c ****   MX_TIM3_Init();
 2690              		.loc 1 430 3 view .LVU689
 2691 001e FFF7FEFF 		bl	MX_SPI1_Init
 2692              	.LVL186:
 431:Core/Src/main.c ****   MX_TIM16_Init();
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 74


 2693              		.loc 1 431 3 view .LVU690
 2694 0022 FFF7FEFF 		bl	MX_TIM3_Init
 2695              	.LVL187:
 432:Core/Src/main.c ****   MX_TIM14_Init();
 2696              		.loc 1 432 3 view .LVU691
 2697 0026 FFF7FEFF 		bl	MX_TIM16_Init
 2698              	.LVL188:
 433:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 2699              		.loc 1 433 3 view .LVU692
 2700 002a FFF7FEFF 		bl	MX_TIM14_Init
 2701              	.LVL189:
 435:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim16);
 2702              		.loc 1 435 3 view .LVU693
 2703 002e 1548     		ldr	r0, .L130
 2704 0030 0C21     		movs	r1, #12
 2705 0032 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 2706              	.LVL190:
 436:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 2707              		.loc 1 436 3 view .LVU694
 2708 0036 1448     		ldr	r0, .L130+4
 2709 0038 FFF7FEFF 		bl	HAL_TIM_Base_Start
 2710              	.LVL191:
 437:Core/Src/main.c ****   
 2711              		.loc 1 437 3 view .LVU695
 2712 003c 9020     		movs	r0, #144
 2713 003e 0122     		movs	r2, #1
 2714 0040 1021     		movs	r1, #16
 2715 0042 C005     		lsls	r0, r0, #23
 2716 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2717              	.LVL192:
 439:Core/Src/main.c ****   can_setup();
 2718              		.loc 1 439 3 view .LVU696
 2719 0048 FFF7FEFF 		bl	addr_setup
 2720              	.LVL193:
 440:Core/Src/main.c **** 
 2721              		.loc 1 440 3 view .LVU697
 2722 004c FFF7FEFF 		bl	can_setup
 2723              	.LVL194:
 442:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan, CAN_IT_RX_FIFO0_MSG_PENDING);
 2724              		.loc 1 442 3 view .LVU698
 2725 0050 0E4C     		ldr	r4, .L130+8
 2726 0052 2000     		movs	r0, r4
 2727 0054 FFF7FEFF 		bl	HAL_CAN_Start
 2728              	.LVL195:
 443:Core/Src/main.c **** 
 2729              		.loc 1 443 3 view .LVU699
 2730 0058 0221     		movs	r1, #2
 2731 005a 2000     		movs	r0, r4
 2732 005c FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 2733              	.LVL196:
 445:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim14);
 2734              		.loc 1 445 3 view .LVU700
 2735 0060 0620     		movs	r0, #6
 2736 0062 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 2737              	.LVL197:
 446:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(TIM14_IRQn);
 2738              		.loc 1 446 3 view .LVU701
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 75


 2739 0066 0A48     		ldr	r0, .L130+12
 2740 0068 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 2741              	.LVL198:
 447:Core/Src/main.c **** 
 2742              		.loc 1 447 3 view .LVU702
 2743 006c 1320     		movs	r0, #19
 2744 006e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 2745              	.LVL199:
 2746              	.L129:
 453:Core/Src/main.c ****   {
 2747              		.loc 1 453 3 discriminator 1 view .LVU703
 455:Core/Src/main.c ****     HAL_Delay(500);
 2748              		.loc 1 455 5 discriminator 1 view .LVU704
 2749 0072 0121     		movs	r1, #1
 2750 0074 0748     		ldr	r0, .L130+16
 2751 0076 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 2752              	.LVL200:
 456:Core/Src/main.c ****     /* USER CODE END WHILE */
 2753              		.loc 1 456 5 discriminator 1 view .LVU705
 2754 007a FA20     		movs	r0, #250
 2755 007c 4000     		lsls	r0, r0, #1
 2756 007e FFF7FEFF 		bl	HAL_Delay
 2757              	.LVL201:
 453:Core/Src/main.c ****   {
 2758              		.loc 1 453 9 discriminator 1 view .LVU706
 2759 0082 F6E7     		b	.L129
 2760              	.L131:
 2761              		.align	2
 2762              	.L130:
 2763 0084 00000000 		.word	htim3
 2764 0088 00000000 		.word	htim16
 2765 008c 00000000 		.word	hcan
 2766 0090 00000000 		.word	htim14
 2767 0094 00140048 		.word	1207964672
 2768              		.cfi_endproc
 2769              	.LFE65:
 2771              		.global	tx_nst_data
 2772              		.section	.bss.tx_nst_data,"aw",%nobits
 2773              		.align	2
 2776              	tx_nst_data:
 2777 0000 00000000 		.space	8
 2777      00000000 
 2778              		.global	rx_nst_data
 2779              		.section	.bss.rx_nst_data,"aw",%nobits
 2780              		.align	2
 2783              	rx_nst_data:
 2784 0000 00000000 		.space	8
 2784      00000000 
 2785              		.global	can_std_channel
 2786              		.section	.bss.can_std_channel,"aw",%nobits
 2789              	can_std_channel:
 2790 0000 00       		.space	1
 2791              		.global	txMailbox
 2792              		.section	.bss.txMailbox,"aw",%nobits
 2793              		.align	2
 2796              	txMailbox:
 2797 0000 00000000 		.space	4
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 76


 2798              		.global	nst_state
 2799              		.section	.data.nst_state,"aw"
 2802              	nst_state:
 2803 0000 E0       		.byte	-32
 2804              		.global	nst_addr_base
 2805              		.section	.bss.nst_addr_base,"aw",%nobits
 2806              		.align	2
 2809              	nst_addr_base:
 2810 0000 00000000 		.space	4
 2811              		.global	std_state
 2812              		.section	.data.std_state,"aw"
 2815              	std_state:
 2816 0000 E0       		.byte	-32
 2817              		.global	std_addr_base
 2818              		.section	.data.std_addr_base,"aw"
 2819              		.align	2
 2822              	std_addr_base:
 2823 0000 00000100 		.word	65536
 2824              		.global	addr
 2825              		.section	.bss.addr,"aw",%nobits
 2828              	addr:
 2829 0000 00       		.space	1
 2830              		.global	adc_data
 2831              		.section	.bss.adc_data,"aw",%nobits
 2832              		.align	2
 2835              	adc_data:
 2836 0000 00000000 		.space	16
 2836      00000000 
 2836      00000000 
 2836      00000000 
 2837              		.global	filter
 2838              		.section	.bss.filter,"aw",%nobits
 2839              		.align	2
 2842              	filter:
 2843 0000 00000000 		.space	40
 2843      00000000 
 2843      00000000 
 2843      00000000 
 2843      00000000 
 2844              		.global	rxh_nst
 2845              		.section	.bss.rxh_nst,"aw",%nobits
 2846              		.align	2
 2849              	rxh_nst:
 2850 0000 00000000 		.space	28
 2850      00000000 
 2850      00000000 
 2850      00000000 
 2850      00000000 
 2851              		.global	txh_nst
 2852              		.section	.bss.txh_nst,"aw",%nobits
 2853              		.align	2
 2856              	txh_nst:
 2857 0000 00000000 		.space	24
 2857      00000000 
 2857      00000000 
 2857      00000000 
 2857      00000000 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 77


 2858              		.global	txh_std
 2859              		.section	.bss.txh_std,"aw",%nobits
 2860              		.align	2
 2863              	txh_std:
 2864 0000 00000000 		.space	96
 2864      00000000 
 2864      00000000 
 2864      00000000 
 2864      00000000 
 2865              		.global	htim16
 2866              		.section	.bss.htim16,"aw",%nobits
 2867              		.align	2
 2870              	htim16:
 2871 0000 00000000 		.space	72
 2871      00000000 
 2871      00000000 
 2871      00000000 
 2871      00000000 
 2872              		.global	htim14
 2873              		.section	.bss.htim14,"aw",%nobits
 2874              		.align	2
 2877              	htim14:
 2878 0000 00000000 		.space	72
 2878      00000000 
 2878      00000000 
 2878      00000000 
 2878      00000000 
 2879              		.global	htim3
 2880              		.section	.bss.htim3,"aw",%nobits
 2881              		.align	2
 2884              	htim3:
 2885 0000 00000000 		.space	72
 2885      00000000 
 2885      00000000 
 2885      00000000 
 2885      00000000 
 2886              		.global	hspi1
 2887              		.section	.bss.hspi1,"aw",%nobits
 2888              		.align	2
 2891              	hspi1:
 2892 0000 00000000 		.space	100
 2892      00000000 
 2892      00000000 
 2892      00000000 
 2892      00000000 
 2893              		.global	hcan
 2894              		.section	.bss.hcan,"aw",%nobits
 2895              		.align	2
 2898              	hcan:
 2899 0000 00000000 		.space	40
 2899      00000000 
 2899      00000000 
 2899      00000000 
 2899      00000000 
 2900              		.text
 2901              	.Letext0:
 2902              		.file 3 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 78


 2903              		.file 4 "c:\\users\\xhex8\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2904              		.file 5 "c:\\users\\xhex8\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2905              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 2906              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 2907              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 2908              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 2909              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 2910              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_can.h"
 2911              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_spi.h"
 2912              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 2913              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 2914              		.file 15 "Core/Inc/main.h"
 2915              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 2916              		.file 17 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 2917              		.file 18 "<built-in>"
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 79


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:214    .text.MX_GPIO_Init:000000d0 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:220    .text.delay_us:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:226    .text.delay_us:00000000 delay_us
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:253    .text.delay_us:00000010 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2870   .bss.htim16:00000000 htim16
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:258    .text.addr_setup:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:264    .text.addr_setup:00000000 addr_setup
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:363    .text.addr_setup:00000058 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2828   .bss.addr:00000000 addr
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2822   .data.std_addr_base:00000000 std_addr_base
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:371    .text.can_setup:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:377    .text.can_setup:00000000 can_setup
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:516    .text.can_setup:0000007c $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2863   .bss.txh_std:00000000 txh_std
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2815   .data.std_state:00000000 std_state
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2856   .bss.txh_nst:00000000 txh_nst
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2809   .bss.nst_addr_base:00000000 nst_addr_base
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2842   .bss.filter:00000000 filter
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2898   .bss.hcan:00000000 hcan
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:530    .text.can_std_transmit:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:536    .text.can_std_transmit:00000000 can_std_transmit
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:586    .text.can_std_transmit:0000002c $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2796   .bss.txMailbox:00000000 txMailbox
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2835   .bss.adc_data:00000000 adc_data
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:594    .text.can_nst_transmit:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:600    .text.can_nst_transmit:00000000 can_nst_transmit
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:648    .text.can_nst_transmit:00000024 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2802   .data.nst_state:00000000 nst_state
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2776   .bss.tx_nst_data:00000000 tx_nst_data
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:658    .text.can_tx_transmit_timer_handler:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:664    .text.can_tx_transmit_timer_handler:00000000 can_tx_transmit_timer_handler
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:696    .text.can_tx_transmit_timer_handler:0000001c $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2789   .bss.can_std_channel:00000000 can_std_channel
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:701    .text.can_rx_handler:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:707    .text.can_rx_handler:00000000 can_rx_handler
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:721    .text.ads131m04_transfer_word:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:727    .text.ads131m04_transfer_word:00000000 ads131m04_transfer_word
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:820    .text.ads131m04_transfer_word:00000068 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2891   .bss.hspi1:00000000 hspi1
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:825    .text.ads131m04_transfer_frame:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:831    .text.ads131m04_transfer_frame:00000000 ads131m04_transfer_frame
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:916    .text.ads131m04_adc_format_convert:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:922    .text.ads131m04_adc_format_convert:00000000 ads131m04_adc_format_convert
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:954    .text.ads131m04_adc_format_convert:00000018 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:959    .text.ads131m04_read_adc_nonblocking:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:965    .text.ads131m04_read_adc_nonblocking:00000000 ads131m04_read_adc_nonblocking
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1038   .text.ads131m04_drdy_exti_handler:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1044   .text.ads131m04_drdy_exti_handler:00000000 ads131m04_drdy_exti_handler
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1064   .text.ads131m04_drdy_exti_handler:0000000c $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1069   .text.ads131m04_cmd:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1075   .text.ads131m04_cmd:00000000 ads131m04_cmd
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1157   .text.ads131m04_reset:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1163   .text.ads131m04_reset:00000000 ads131m04_reset
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 80


C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1195   .text.ads131m04_status:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1201   .text.ads131m04_status:00000000 ads131m04_status
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1233   .text.ads131m04_standby:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1239   .text.ads131m04_standby:00000000 ads131m04_standby
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1271   .text.ads131m04_wake:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1277   .text.ads131m04_wake:00000000 ads131m04_wake
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1309   .text.ads131m04_lock:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1315   .text.ads131m04_lock:00000000 ads131m04_lock
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1346   .text.ads131m04_lock:00000018 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1351   .text.ads131m04_unlock:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1357   .text.ads131m04_unlock:00000000 ads131m04_unlock
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1388   .text.ads131m04_unlock:00000018 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1393   .text.ads131m04_rreg:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1399   .text.ads131m04_rreg:00000000 ads131m04_rreg
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1445   .text.ads131m04_rreg:00000024 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1450   .text.ads131m04_rreg_multiple:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1456   .text.ads131m04_rreg_multiple:00000000 ads131m04_rreg_multiple
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1627   .text.ads131m04_rreg_multiple:000000ac $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1632   .text.ads131m04_wreg:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1638   .text.ads131m04_wreg:00000000 ads131m04_wreg
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1722   .text.ads131m04_wreg_multiple:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1728   .text.ads131m04_wreg_multiple:00000000 ads131m04_wreg_multiple
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1896   .text.ads131m04_test:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1902   .text.ads131m04_test:00000000 ads131m04_test
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1934   .text.adc_configure:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1940   .text.adc_configure:00000000 adc_configure
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:1997   .text.adc_configure:00000034 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2003   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2009   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2034   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000010 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2783   .bss.rx_nst_data:00000000 rx_nst_data
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2849   .bss.rxh_nst:00000000 rxh_nst
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2040   .text.Error_Handler:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2046   .text.Error_Handler:00000000 Error_Handler
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2078   .text.MX_CAN_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2083   .text.MX_CAN_Init:00000000 MX_CAN_Init
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2156   .text.MX_CAN_Init:0000003c $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2162   .text.MX_SPI1_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2167   .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2249   .text.MX_SPI1_Init:00000048 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2255   .text.MX_TIM3_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2260   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2415   .text.MX_TIM3_Init:000000a8 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2884   .bss.htim3:00000000 htim3
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2421   .text.MX_TIM16_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2426   .text.MX_TIM16_Init:00000000 MX_TIM16_Init
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2479   .text.MX_TIM16_Init:00000028 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2486   .text.MX_TIM14_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2491   .text.MX_TIM14_Init:00000000 MX_TIM14_Init
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2542   .text.MX_TIM14_Init:00000028 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2877   .bss.htim14:00000000 htim14
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2548   .text.SystemClock_Config:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2554   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2653   .text.main:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2659   .text.main:00000000 main
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2763   .text.main:00000084 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2773   .bss.tx_nst_data:00000000 $d
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s 			page 81


C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2780   .bss.rx_nst_data:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2790   .bss.can_std_channel:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2793   .bss.txMailbox:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2806   .bss.nst_addr_base:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2819   .data.std_addr_base:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2829   .bss.addr:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2832   .bss.adc_data:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2839   .bss.filter:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2846   .bss.rxh_nst:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2853   .bss.txh_nst:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2860   .bss.txh_std:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2867   .bss.htim16:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2874   .bss.htim14:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2881   .bss.htim3:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2888   .bss.hspi1:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccKAb7Ap.s:2895   .bss.hcan:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_ReadPin
HAL_CAN_ConfigFilter
HAL_CAN_AddTxMessage
HAL_SPI_TransmitReceive
HAL_NVIC_DisableIRQ
HAL_CAN_GetRxMessage
HAL_CAN_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_PWM_Start
HAL_TIM_Base_Start
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_TIM_Base_Start_IT
HAL_GPIO_TogglePin
HAL_Delay
